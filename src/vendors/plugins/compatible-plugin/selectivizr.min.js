/*
selectivizr v1.0.3b - (c) Keith Clark, freely distributable under the terms 
of the MIT license.
selectivizr.com
*/
/* 
  
Notes about this source
-----------------------
 * The #DEBUG_START and #DEBUG_END comments are used to mark blocks of code
   that will be removed prior to building a final release version (using a
   pre-compression script)
  
  
References:
-----------
 
 * CSS Syntax          : http://www.w3.org/TR/2003/WD-css3-syntax-20030813/#style
 * Selectors           : http://www.w3.org/TR/css3-selectors/#selectors
 * IE Compatability    : http://msdn.microsoft.com/en-us/library/cc351024(VS.85).aspx
 * W3C Selector Tests  : http://www.w3.org/Style/CSS/Test/CSS3/Selectors/current/html/tests/
 
*/

(function (N) {
  const O = navigator.userAgent.match(/MSIE (\d+)/);
  if (!O) {
    return false;
  }
  const m = document;
  const z = m.documentElement;
  const Z = u();
  const y = O[1];
  if (m.compatMode != 'CSS1Compat' || y < 6 || y > 8 || !Z) {
    return;
  }
  const C = {
    NW: '*.Dom.select',
    MooTools: '$$',
    DOMAssistant: '*.$',
    Prototype: '$$',
    YAHOO: '*.util.Selector.query',
    Sizzle: '*',
    jQuery: '*',
    dojo: '*.query',
  };
  let x;
  const Y = [];
  const A = [];
  let D = 0;
  const d = true;
  const M = 'slvzr';
  const b = /(\/\*[^*]*\*+([^\/][^*]*\*+)*\/)\s*?/g;
  const r =
    /@import\s*(?:(?:(?:url\(\s*(['"]?)(.*)\1)\s*\))|(?:(['"])(.*)\3))\s*([^;]*);/g;
  const F = /(behavior\s*?:\s*)?\burl\(\s*(["']?)(?!data:)([^"')]+)\2\s*\)/g;
  const G = /^:(empty|(first|last|only|nth(-last)?)-(child|of-type))$/;
  const W = /:(:first-(?:line|letter))/g;
  const H = /((?:^|(?:\s*})+)(?:\s*@media[^{]+{)?)\s*([^\{]*?[\[:][^{]+)/g;
  const E = /([ +~>])|(:[a-z-]+(?:\(.*?\)+)?)|(\[.*?\])/g;
  const L =
    /(:not\()?:(hover|enabled|disabled|focus|checked|target|active|visited|first-line|first-letter)\)?/g;
  const ab = /[^\w-]/g;
  const s = /^(INPUT|SELECT|TEXTAREA|BUTTON)$/;
  const q = /^(checkbox|radio)$/;
  const w = y > 6 ? /[\$\^*]=(['"])\1/ : null;
  const e = /([(\[+~])\s+/g;
  const P = /\s+([)\]+~])/g;
  const t = /\s+/g;
  const c = /^\s*((?:[\S\s]*\S)?)\s*$/;
  const v = '';
  const p = ' ';
  const aa = '$1';
  function X(ac) {
    return ac.replace(W, aa).replace(H, function (ae, aj, ai) {
      const af = ai.split(',');
      for (let ak = 0, ah = af.length; ak < ah; ak++) {
        var ad = i(af[ak]) + p;
        var ag = [];
        af[ak] = ad.replace(E, function (am, ao, ap, an, al) {
          if (ao) {
            if (ag.length > 0) {
              A.push({ selector: ad.substring(0, al), patches: ag });
              ag = [];
            }
            return ao;
          }
          const aq = ap ? B(ap) : V(an);
          if (aq) {
            ag.push(aq);
            return `.${aq.className}`;
          }
          return am;
        });
      }
      return aj + af.join(',');
    });
  }
  function V(ac) {
    return !w || w.test(ac) ? { className: I(ac), applyClass: true } : null;
  }
  function B(ah) {
    let ag = true;
    const af = I(ah.slice(1));
    let ae = ah.substring(0, 5) == ':not(';
    let ad;
    let ai;
    if (ae) {
      ah = ah.slice(5, -1);
    }
    const ac = ah.indexOf('(');
    if (ac > -1) {
      ah = ah.substring(0, ac);
    }
    if (ah.charAt(0) == ':') {
      switch (ah.slice(1)) {
        case 'root':
          ag = function (aj) {
            return ae ? aj != z : aj == z;
          };
          break;
        case 'target':
          if (y == 8) {
            ag = function (ak) {
              const aj = function () {
                const am = location.hash;
                const al = am.slice(1);
                return ae ? am == v || ak.id != al : am != v && ak.id == al;
              };
              o(N, 'hashchange', function () {
                J(ak, af, aj());
              });
              return aj();
            };
            break;
          }
          return false;
        case 'checked':
          ag = function (aj) {
            if (q.test(aj.type)) {
              o(aj, 'propertychange', function () {
                if (event.propertyName == 'checked') {
                  J(aj, af, aj.checked !== ae);
                }
              });
            }
            return aj.checked !== ae;
          };
          break;
        case 'disabled':
          ae = !ae;
        case 'enabled':
          ag = function (aj) {
            if (s.test(aj.tagName)) {
              o(aj, 'propertychange', function () {
                if (event.propertyName == '$disabled') {
                  J(aj, af, aj.$disabled === ae);
                }
              });
              Y.push(aj);
              aj.$disabled = aj.disabled;
              return aj.disabled === ae;
            }
            return ah == ':enabled' ? ae : !ae;
          };
          break;
        case 'focus':
          ad = 'focus';
          ai = 'blur';
        case 'hover':
          if (!ad) {
            ad = 'mouseenter';
            ai = 'mouseleave';
          }
          ag = function (aj) {
            o(aj, ae ? ai : ad, function () {
              J(aj, af, true);
            });
            o(aj, ae ? ad : ai, function () {
              J(aj, af, false);
            });
            return ae;
          };
          break;
        default:
          if (!G.test(ah)) {
            return false;
          }
          break;
      }
    }
    return { className: af, applyClass: ag };
  }
  function S() {
    let af;
    let ac;
    let ad;
    let ak;
    for (let an = 0; an < A.length; an++) {
      ac = A[an].selector;
      ad = A[an].patches;
      ak = ac.replace(L, v);
      if (ak == v || ak.charAt(ak.length - 1) == p) {
        ak += '*';
      }
      try {
        af = x(ak);
      } catch (am) {
        n(`Selector '${ac}' threw exception '${am}'`);
      }
      if (af) {
        for (let al = 0, ag = af.length; al < ag; al++) {
          const aj = af[al];
          let ai = aj.className;
          for (let ah = 0, ao = ad.length; ah < ao; ah++) {
            const ae = ad[ah];
            if (!Q(aj, ae)) {
              if (
                ae.applyClass &&
                (ae.applyClass === true || ae.applyClass(aj) === true)
              ) {
                ai = g(ai, ae.className, true);
              }
            }
          }
          aj.className = ai;
        }
      }
    }
  }
  function Q(ad, ac) {
    return new RegExp(`(^|\\s)${ac.className}(\\s|$)`).test(ad.className);
  }
  function I(ac) {
    return `${M}-${
      y == 6 && d
        ? D++
        : ac.replace(ab, function (ad) {
            return ad.charCodeAt(0);
          })
    }`;
  }
  function n(ac) {
    if (N.console) {
      N.console.log(ac);
    }
  }
  function a(ac) {
    return ac.replace(c, aa);
  }
  function l(ac) {
    return a(ac).replace(t, p);
  }
  function i(ac) {
    return l(ac.replace(e, aa).replace(P, aa));
  }
  function J(ag, af, ac) {
    const ae = ag.className;
    const ad = g(ae, af, ac);
    if (ad != ae) {
      ag.className = ad;
      ag.parentNode.className += v;
    }
  }
  function g(af, ae, ac) {
    const ad = RegExp(`(^|\\s)${ae}(\\s|$)`);
    const ag = ad.test(af);
    if (ac) {
      return ag ? af : af + p + ae;
    }
    return ag ? a(af.replace(ad, aa)) : af;
  }
  function o(ae, ac, ad) {
    ae.attachEvent(`on${ac}`, ad);
  }
  function u() {
    if (N.XMLHttpRequest) {
      return new XMLHttpRequest();
    }
    try {
      return new ActiveXObject('Microsoft.XMLHTTP');
    } catch (ac) {
      return null;
    }
  }
  function k(ac) {
    Z.open('GET', ac, false);
    Z.send();
    return Z.status == 200 ? Z.responseText : v;
  }
  function K(ae, ad, ag) {
    function af(ai) {
      return ai.substring(0, ai.indexOf('//'));
    }
    function ah(ai) {
      return ai.substring(0, ai.indexOf('/', 8));
    }
    if (!ad) {
      ad = j;
    }
    if (ae.substring(0, 2) == '//') {
      ae = af(ad) + ae;
    }
    if (/^https?:\/\//i.test(ae)) {
      return !ag && ah(ad) != ah(ae) ? null : ae;
    }
    if (ae.charAt(0) == '/') {
      return ah(ad) + ae;
    }
    let ac = ad.split(/[?#]/)[0];
    if (ae.charAt(0) != '?' && ac.charAt(ac.length - 1) != '/') {
      ac = ac.substring(0, ac.lastIndexOf('/') + 1);
    }
    return ac + ae;
  }
  function R(ac) {
    if (ac) {
      return k(ac)
        .replace(b, v)
        .replace(r, function (ag, ah, ad, af, ae, aj) {
          const ai = R(K(ad || ae, ac));
          return aj ? `@media ${aj} {${ai}}` : ai;
        })
        .replace(F, function (ae, ag, af, ad) {
          af = af || v;
          return ag ? ae : ` url(${af}${K(ad, ac, true)}${af}) `;
        });
    }
    return v;
  }
  function h() {
    let ac;
    let ad;
    for (let ae = 0; ae < m.styleSheets.length; ae++) {
      ad = m.styleSheets[ae];
      if (ad.href != v) {
        ac = K(ad.href);
        if (ac) {
          ad.cssText = ad.rawCssText = X(R(ac));
        }
      }
    }
  }
  function T() {
    S();
    if (Y.length > 0) {
      setInterval(function () {
        for (let ae = 0, ac = Y.length; ae < ac; ae++) {
          const ad = Y[ae];
          if (ad.disabled !== ad.$disabled) {
            if (ad.disabled) {
              ad.disabled = false;
              ad.$disabled = true;
              ad.disabled = true;
            } else {
              ad.$disabled = ad.disabled;
            }
          }
        }
      }, 250);
    }
  }
  const f = m.getElementsByTagName('BASE');
  var j = f.length > 0 ? f[0].href : m.location.href;
  h();
  U(N, function () {
    for (const ae in C) {
      var ac;
      var af;
      let ad = N;
      if (N[ae]) {
        ac = C[ae].replace('*', ae).split('.');
        while ((af = ac.shift()) && (ad = ad[af])) {}
        if (typeof ad === 'function') {
          x = ad;
          T();
          return;
        }
      }
    }
  });
  /*!
   * ContentLoaded.js by Diego Perini, modified for IE<9 only (to save space)
   *
   * Author: Diego Perini (diego.perini at gmail.com)
   * Summary: cross-browser wrapper for DOMContentLoaded
   * Updated: 20101020
   * License: MIT
   * Version: 1.2
   *
   * URL:
   * http://javascript.nwbox.com/ContentLoaded/
   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE
   *
   */
  function U(ag, ad) {
    let ac = false;
    let af = true;
    var ai = function (aj) {
      if (aj.type == 'readystatechange' && m.readyState != 'complete') {
        return;
      }
      (aj.type == 'load' ? ag : m).detachEvent(`on${aj.type}`, ai, false);
      if (!ac && (ac = true)) {
        ad.call(ag, aj.type || aj);
      }
    };
    var ah = function () {
      try {
        z.doScroll('left');
      } catch (aj) {
        setTimeout(ah, 50);
        return;
      }
      ai('poll');
    };
    if (m.readyState == 'complete') {
      ad.call(ag, v);
    } else {
      if (m.createEventObject && z.doScroll) {
        try {
          af = !ag.frameElement;
        } catch (ae) {}
        if (af) {
          ah();
        }
      }
      o(m, 'readystatechange', ai);
      o(ag, 'load', ai);
    }
  }
})(this);
