/*! Respond.js v1.4.2: min/max-width media query polyfill * Copyright 2013 Scott Jehl
 * Licensed under https://github.com/scottjehl/Respond/blob/master/LICENSE-MIT
 *  */

!(function (a) {
  a.matchMedia =
    a.matchMedia ||
    (function (a) {
      let b;
      const c = a.documentElement;
      const d = c.firstElementChild || c.firstChild;
      const e = a.createElement('body');
      const f = a.createElement('div');
      return (
        (f.id = 'mq-test-1'),
        (f.style.cssText = 'position:absolute;top:-100em'),
        (e.style.background = 'none'),
        e.appendChild(f),
        function (a) {
          return (
            (f.innerHTML = `&shy;<style media="${a}"> #mq-test-1 { width: 42px; }</style>`),
            c.insertBefore(e, d),
            (b = f.offsetWidth === 42),
            c.removeChild(e),
            { matches: b, media: a }
          );
        }
      );
    })(a.document);
})(this),
  (function (a) {
    function b() {
      u(!0);
    }
    const c = {};
    (a.respond = c), (c.update = function () {});
    const d = [];
    const e = (function () {
      let b = !1;
      try {
        b = new a.XMLHttpRequest();
      } catch (c) {
        b = new a.ActiveXObject('Microsoft.XMLHTTP');
      }
      return function () {
        return b;
      };
    })();
    const f = function (a, b) {
      const c = e();
      c &&
        (c.open('GET', a, !0),
        (c.onreadystatechange = function () {
          c.readyState !== 4 ||
            (c.status !== 200 && c.status !== 304) ||
            b(c.responseText);
        }),
        c.readyState !== 4 && c.send(null));
    };
    if (
      ((c.ajax = f),
      (c.queue = d),
      (c.regex = {
        media: /@media[^\{]+\{([^\{\}]*\{[^\}\{]*\})+/gi,
        keyframes:
          /@(?:\-(?:o|moz|webkit)\-)?keyframes[^\{]+\{(?:[^\{\}]*\{[^\}\{]*\})+[^\}]*\}/gi,
        urls: /(url\()['"]?([^\/\)'"][^:\)'"]+)['"]?(\))/g,
        findStyles: /@media *([^\{]+)\{([\S\s]+?)$/,
        only: /(only\s+)?([a-zA-Z]+)\s?/,
        minw: /\([\s]*min\-width\s*:[\s]*([\s]*[0-9\.]+)(px|em)[\s]*\)/,
        maxw: /\([\s]*max\-width\s*:[\s]*([\s]*[0-9\.]+)(px|em)[\s]*\)/,
      }),
      (c.mediaQueriesSupported =
        a.matchMedia &&
        a.matchMedia('only all') !== null &&
        a.matchMedia('only all').matches),
      !c.mediaQueriesSupported)
    ) {
      let g;
      let h;
      let i;
      const j = a.document;
      const k = j.documentElement;
      const l = [];
      const m = [];
      const n = [];
      const o = {};
      const p = 30;
      const q = j.getElementsByTagName('head')[0] || k;
      const r = j.getElementsByTagName('base')[0];
      const s = q.getElementsByTagName('link');
      const t = function () {
        let a;
        const b = j.createElement('div');
        let c = j.body;
        const d = k.style.fontSize;
        const e = c && c.style.fontSize;
        let f = !1;
        return (
          (b.style.cssText = 'position:absolute;font-size:1em;width:1em'),
          c ||
            ((c = f = j.createElement('body')), (c.style.background = 'none')),
          (k.style.fontSize = '100%'),
          (c.style.fontSize = '100%'),
          c.appendChild(b),
          f && k.insertBefore(c, k.firstChild),
          (a = b.offsetWidth),
          f ? k.removeChild(c) : c.removeChild(b),
          (k.style.fontSize = d),
          e && (c.style.fontSize = e),
          (a = i = parseFloat(a))
        );
      };
      var u = function (b) {
        const c = 'clientWidth';
        const d = k[c];
        const e = (j.compatMode === 'CSS1Compat' && d) || j.body[c] || d;
        const f = {};
        const o = s[s.length - 1];
        const r = new Date().getTime();
        if (b && g && p > r - g)
          return a.clearTimeout(h), (h = a.setTimeout(u, p)), void 0;
        g = r;
        for (const v in l)
          if (l.hasOwnProperty(v)) {
            const w = l[v];
            let x = w.minw;
            let y = w.maxw;
            const z = x === null;
            const A = y === null;
            const B = 'em';
            x && (x = parseFloat(x) * (x.indexOf(B) > -1 ? i || t() : 1)),
              y && (y = parseFloat(y) * (y.indexOf(B) > -1 ? i || t() : 1)),
              (w.hasquery && ((z && A) || !(z || e >= x) || !(A || y >= e))) ||
                (f[w.media] || (f[w.media] = []), f[w.media].push(m[w.rules]));
          }
        for (const C in n)
          n.hasOwnProperty(C) &&
            n[C] &&
            n[C].parentNode === q &&
            q.removeChild(n[C]);
        n.length = 0;
        for (const D in f)
          if (f.hasOwnProperty(D)) {
            const E = j.createElement('style');
            const F = f[D].join('\n');
            (E.type = 'text/css'),
              (E.media = D),
              q.insertBefore(E, o.nextSibling),
              E.styleSheet
                ? (E.styleSheet.cssText = F)
                : E.appendChild(j.createTextNode(F)),
              n.push(E);
          }
      };
      const v = function (a, b, d) {
        const e = a.replace(c.regex.keyframes, '').match(c.regex.media);
        let f = (e && e.length) || 0;
        b = b.substring(0, b.lastIndexOf('/'));
        const g = function (a) {
          return a.replace(c.regex.urls, `$1${b}$2$3`);
        };
        const h = !f && d;
        b.length && (b += '/'), h && (f = 1);
        for (let i = 0; f > i; i++) {
          var j;
          var k;
          var n;
          var o;
          h
            ? ((j = d), m.push(g(a)))
            : ((j = e[i].match(c.regex.findStyles) && RegExp.$1),
              m.push(RegExp.$2 && g(RegExp.$2))),
            (n = j.split(',')),
            (o = n.length);
          for (let p = 0; o > p; p++)
            (k = n[p]),
              l.push({
                media:
                  (k.split('(')[0].match(c.regex.only) && RegExp.$2) || 'all',
                rules: m.length - 1,
                hasquery: k.indexOf('(') > -1,
                minw:
                  k.match(c.regex.minw) &&
                  parseFloat(RegExp.$1) + (RegExp.$2 || ''),
                maxw:
                  k.match(c.regex.maxw) &&
                  parseFloat(RegExp.$1) + (RegExp.$2 || ''),
              });
        }
        u();
      };
      var w = function () {
        if (d.length) {
          const b = d.shift();
          f(b.href, function (c) {
            v(c, b.href, b.media),
              (o[b.href] = !0),
              a.setTimeout(function () {
                w();
              }, 0);
          });
        }
      };
      const x = function () {
        for (let b = 0; b < s.length; b++) {
          const c = s[b];
          let e = c.href;
          const f = c.media;
          const g = c.rel && c.rel.toLowerCase() === 'stylesheet';
          e &&
            g &&
            !o[e] &&
            (c.styleSheet && c.styleSheet.rawCssText
              ? (v(c.styleSheet.rawCssText, e, f), (o[e] = !0))
              : ((!/^([a-zA-Z:]*\/\/)/.test(e) && !r) ||
                  e.replace(RegExp.$1, '').split('/')[0] === a.location.host) &&
                (e.substring(0, 2) === '//' && (e = a.location.protocol + e),
                d.push({ href: e, media: f })));
        }
        w();
      };
      x(),
        (c.update = x),
        (c.getEmValue = t),
        a.addEventListener
          ? a.addEventListener('resize', b, !1)
          : a.attachEvent && a.attachEvent('onresize', b);
    }
  })(this);
