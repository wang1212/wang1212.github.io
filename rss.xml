<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>不如怀念 Blog</title>
        <link>https://wang1212.github.io</link>
        <description>不如怀念 Blog</description>
        <lastBuildDate>Sat, 21 Jun 2025 15:18:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hans</language>
        <item>
            <title><![CDATA[「每周回顾」EP2025W25：AI 编程趋势、React 发展与 AI 代理安全]]></title>
            <link>https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25</link>
            <guid>https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25</guid>
            <pubDate>Sat, 21 Jun 2025 15:18:00 GMT</pubDate>
            <description><![CDATA[2025 年第 25 周的回顾，Motion AI 通过 MCP Server 实现自然语言生成动画代码，预示着开源库适应 AI 编程新模式的趋势；React 发布 12 周年，其声明式 UI 哲学对 Web 技术发展影响深远；文章强调 AI 代理面临私人数据、不可信内容和外部通信的安全挑战；此外，还有将复杂 TypeScript 类型解释为函数的实用工具 Type Buddy，以及 Google Gemini 和 LangGraph 构建全栈代理应用的快速入门指南。]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>Motion AI 通过 MCP Server 实现自然语言生成动画代码，预示着开源库适应 AI 编程新模式的趋势；React 发布 12 周年，其声明式 UI 哲学对 Web 技术发展影响深远；文章强调 AI 代理面临私人数据、不可信内容和外部通信的安全挑战；此外，还有将复杂 TypeScript 类型解释为函数的实用工具 Type Buddy，以及 Google Gemini 和 LangGraph 构建全栈代理应用的快速入门指南。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="motion-ai"><a href="https://motion.dev/docs/ai-llm-documentation" target="_blank" rel="noopener noreferrer">Motion AI</a><a href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25#motion-ai" class="hash-link" aria-label="motion-ai的直接链接" title="motion-ai的直接链接">​</a></h5>
<p>动画库 motion 提供了 MCP Server，以便使用 AI IDE 的开发者现在能够通过自然语言来生成 motion 代码，更高效的实现动画效果。事实上，React 团队目前也在尝试构建 MCP Server 以实现自动优化代码。鉴于这种趋势，以后重要的开源社区库似乎都应用提供一个 MCP Server 来适应这种新的 AI 编程模式。</p>
<p><code>AI</code> <code>动画</code> <code>Motion</code> <code>MCP Server</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-story-of-react"><a href="https://www.youtube.com/watch?v=Wm_xI7KntDs" target="_blank" rel="noopener noreferrer">The Story of React</a><a href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25#the-story-of-react" class="hash-link" aria-label="the-story-of-react的直接链接" title="the-story-of-react的直接链接">​</a></h5>
<p>正值 React 发布 12 周年，回头再去看看 React 的发展历史，对于 Web 技术的发展历程能有更进一步的理解。React 声明式 UI 的设计哲学，将 UI 视图抽象为基于状态的函数式计算结果，UI 的状态管理与渲染逻辑分离，通过组件的组合来构建复杂的 UI，极大地提高了开发效率。</p>
<p><code>Web 前端</code> <code>React</code> <code>Web 技术</code> <code>发展历程</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-lethal-trifecta-for-ai-agents-private-data-untrusted-content-and-external-communication"><a href="https://simonwillison.net/2025/Jun/16/the-lethal-trifecta/" target="_blank" rel="noopener noreferrer">The lethal trifecta for AI agents: private data, untrusted content, and external communication</a><a href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25#the-lethal-trifecta-for-ai-agents-private-data-untrusted-content-and-external-communication" class="hash-link" aria-label="the-lethal-trifecta-for-ai-agents-private-data-untrusted-content-and-external-communication的直接链接" title="the-lethal-trifecta-for-ai-agents-private-data-untrusted-content-and-external-communication的直接链接">​</a></h5>
<p>这篇文章讲述了人工智能代理的致命三重打击：私人数据、不受信任的内容和外部通信。当前 AI 应用火热的背景下，数据安全已经成为一个重要的话题和关注点，尤其是对于普通用户来说，使用 AI 工具将比以往使用传统软件更容易泄露自己的数据。</p>
<p><code>AI</code> <code>AI 代理</code> <code>数据安全</code> <code>私有数据</code> <code>不可信内容</code> <code>外部通信</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="github---type-buddy"><a href="https://github.com/typed-rocks/type-buddy" target="_blank" rel="noopener noreferrer">Github - Type Buddy</a><a href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25#github---type-buddy" class="hash-link" aria-label="github---type-buddy的直接链接" title="github---type-buddy的直接链接">​</a></h5>
<p>一个有趣的小工具，可以将复杂的 TypeScript 类型定义解释为函数，以便能够更直观的理解其逻辑。</p>
<p><code>TypeScript</code> <code>类型定义</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="github---google-gemini-fullstack-langgraph-quickstart"><a href="https://github.com/google-gemini/gemini-fullstack-langgraph-quickstart" target="_blank" rel="noopener noreferrer">Github - Google Gemini FullStack LangGraph Quickstart</a><a href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25#github---google-gemini-fullstack-langgraph-quickstart" class="hash-link" aria-label="github---google-gemini-fullstack-langgraph-quickstart的直接链接" title="github---google-gemini-fullstack-langgraph-quickstart的直接链接">​</a></h5>
<p>Google 发布了一个使用 Gemini 模型和 LangGraph 框架构建的全栈代理应用，可作为快速入门指南的参考项目。</p>
<p><code>AI</code> <code>Google Gemini</code> <code>LangGraph</code> <code>全栈代理应用</code> <code>快速入门指南</code></p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>每周回顾</category>
        </item>
        <item>
            <title><![CDATA[「每周回顾」EP2025W15：React 服务器组件、CSS-in-JS 转向与 Agent 协议新进展]]></title>
            <link>https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15</link>
            <guid>https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15</guid>
            <pubDate>Thu, 10 Apr 2025 18:00:00 GMT</pubDate>
            <description><![CDATA[2025 年第 15 周的回顾，本周技术动态包括 Dan Abramov 对 React 服务器组件设计哲学的深入解读，以及 Anthropic 关于 MCP（Model Context Protocol）的研讨会。此外，CSS-in-JS 时代随着 styled-components 进入维护模式而走向尾声。值得关注的是，谷歌发布了 A2A（Agent2Agent Protocol），旨在与 MCP 互补，推动 Agent 应用间的互操作性。]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>本周技术动态包括 Dan Abramov 对 React 服务器组件设计哲学的深入解读，以及 Anthropic 关于 MCP（Model Context Protocol）的研讨会。此外，CSS-in-JS 时代随着 styled-components 进入维护模式而走向尾声。值得关注的是，谷歌发布了 A2A（Agent2Agent Protocol），旨在与 MCP 互补，推动 Agent 应用间的互操作性。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="react-for-two-computers"><a href="https://overreacted.io/react-for-two-computers/" target="_blank" rel="noopener noreferrer">React for Two Computers</a><a href="https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15#react-for-two-computers" class="hash-link" aria-label="react-for-two-computers的直接链接" title="react-for-two-computers的直接链接">​</a></h5>
<p>Dan Abramov 又一次针对 React 中两种概念，标签和组件的深入探讨，解释了 React 服务器组件的设计哲学。</p>
<p><code>Web</code> <code>前端</code> <code>React.js</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="building-agents-with-model-context-protocol---full-workshop-with-mahesh-murag-of-anthropic"><a href="https://www.youtube.com/watch?v=kQmXtrmQ5Zg" target="_blank" rel="noopener noreferrer">Building Agents with Model Context Protocol - Full Workshop with Mahesh Murag of Anthropic</a><a href="https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15#building-agents-with-model-context-protocol---full-workshop-with-mahesh-murag-of-anthropic" class="hash-link" aria-label="building-agents-with-model-context-protocol---full-workshop-with-mahesh-murag-of-anthropic的直接链接" title="building-agents-with-model-context-protocol---full-workshop-with-mahesh-murag-of-anthropic的直接链接">​</a></h5>
<p>Anthropic 举办的一场探讨 MCP 的研讨会，视频有点长，不过有些讨论还是很是收获颇丰的。</p>
<p><code>AI</code> <code>MCP</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="styled-components--in-maintenance-mode"><a href="https://opencollective.com/styled-components/updates/thank-you" target="_blank" rel="noopener noreferrer">styled-components  in "maintenance mode"</a><a href="https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15#styled-components--in-maintenance-mode" class="hash-link" aria-label="styled-components--in-maintenance-mode的直接链接" title="styled-components--in-maintenance-mode的直接链接">​</a></h5>
<p>随着 styled-components 库的作者宣布其进入维护模式后，CSS-in-JS 的时代落幕了。</p>
<p><code>Web</code> <code>前端</code> <code>CSS-in-JS</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="announcing-the-agent2agent-protocol-a2a"><a href="https://developers.googleblog.com/en/a2a-a-new-era-of-agent-interoperability/" target="_blank" rel="noopener noreferrer">Announcing the Agent2Agent Protocol (A2A)</a><a href="https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15#announcing-the-agent2agent-protocol-a2a" class="hash-link" aria-label="announcing-the-agent2agent-protocol-a2a的直接链接" title="announcing-the-agent2agent-protocol-a2a的直接链接">​</a></h5>
<p>在 MCP 快速发展的同时，谷歌发布了 Agent 应用之间通信的标准协议 A2A，期望与 MCP 互为补充，而不是相互替代。</p>
<p><code>AI</code> <code>Agent</code> <code>A2A</code></p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>每周回顾</category>
        </item>
        <item>
            <title><![CDATA[「每周回顾」EP2025W13：AI Agent 工程化经验总结]]></title>
            <link>https://wang1212.github.io/2025/03/30/weekly/2025/weekly-review-ep2025w13</link>
            <guid>https://wang1212.github.io/2025/03/30/weekly/2025/weekly-review-ep2025w13</guid>
            <pubDate>Sat, 29 Mar 2025 18:00:00 GMT</pubDate>
            <description><![CDATA[2025 年第 13 周的回顾，一篇文章探讨了构建 AI Agent 应用的工程实践。通过回顾过去一段时间的技术迭代，作者对 Agent 工程化的概念有了更深入的理解，分享了在实际开发中积累的经验。]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>一篇文章探讨了构建 AI Agent 应用的工程实践。通过回顾过去一段时间的技术迭代，作者对 Agent 工程化的概念有了更深入的理解，分享了在实际开发中积累的经验。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="agent-engineering"><a href="https://www.latent.space/p/agent" target="_blank" rel="noopener noreferrer">Agent Engineering</a><a href="https://wang1212.github.io/2025/03/30/weekly/2025/weekly-review-ep2025w13#agent-engineering" class="hash-link" aria-label="agent-engineering的直接链接" title="agent-engineering的直接链接">​</a></h5>
<p>探讨了构建 AI Agent 应用的工程化经验，结果过去一段时间不断发展的技术迭代过程，对 Agent 工程化的概念有了更好的理解。</p>
<p><code>AI</code> <code>Agent</code></p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>每周回顾</category>
        </item>
        <item>
            <title><![CDATA[「每周回顾」EP2025W12：AI 应用与基础算法新进展]]></title>
            <link>https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12</link>
            <guid>https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12</guid>
            <pubDate>Sat, 22 Mar 2025 18:00:00 GMT</pubDate>
            <description><![CDATA[2025 年第 12 周的回顾，近期值得关注的技术动态，包括全球顶尖风投机构发布的最新生成式 AI 应用榜单，揭示了行业趋势。同时，深入探讨了布隆过滤器的基本原理与应用场景，并介绍了 agents.json 和模型上下文协议（MCP），这些新协议旨在简化 AI Agent 与服务的集成，提升 AI 应用的响应效率和表现。]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>近期值得关注的技术动态，包括全球顶尖风投机构发布的最新生成式 AI 应用榜单，揭示了行业趋势。同时，深入探讨了布隆过滤器的基本原理与应用场景，并介绍了 agents.json 和模型上下文协议（MCP），这些新协议旨在简化 AI Agent 与服务的集成，提升 AI 应用的响应效率和表现。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-top-100-gen-ai-apps"><a href="https://a16z.com/100-gen-ai-apps-4/" target="_blank" rel="noopener noreferrer">The Top 100 Gen AI Apps</a><a href="https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12#the-top-100-gen-ai-apps" class="hash-link" aria-label="the-top-100-gen-ai-apps的直接链接" title="the-top-100-gen-ai-apps的直接链接">​</a></h5>
<p>全球风投机构发布的全球前 100 名 AI 应用榜单，每 6 个月更新一次，包含了对行业的分析，值得关注。</p>
<p><code>AI</code> <code>App</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bloom-filter-a-deep-dive"><a href="https://www.kirupa.com/data_structures_algorithms/bloom_filter.htm" target="_blank" rel="noopener noreferrer">Bloom Filter: A Deep Dive</a><a href="https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12#bloom-filter-a-deep-dive" class="hash-link" aria-label="bloom-filter-a-deep-dive的直接链接" title="bloom-filter-a-deep-dive的直接链接">​</a></h5>
<p>布隆过滤器作为一个应用广泛的基础算法，一直不是很了解其作用和原理，在这篇通俗易懂的文章中总算知道了其大致原理和应用场景。</p>
<p><code>算法</code> <code>布隆过滤器</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="introducing-agentsjson"><a href="https://docs.wild-card.ai/agentsjson/introduction" target="_blank" rel="noopener noreferrer">Introducing agents.json</a><a href="https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12#introducing-agentsjson" class="hash-link" aria-label="introducing-agentsjson的直接链接" title="introducing-agentsjson的直接链接">​</a></h5>
<p>与 MCP 类似，agent.json 提出了如何定义传统的 API 以帮助 Agent 应用更好的识别和调用服务来获得更好的响应。</p>
<p><code>AI</code> <code>Agent</code> <code>API</code> <code>agents.json</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="what-is-model-context-protocol-mcp-how-it-simplifies-ai-integrations-compared-to-apis"><a href="https://norahsakal.com/blog/mcp-vs-api-model-context-protocol-explained/" target="_blank" rel="noopener noreferrer">What is Model Context Protocol (MCP)? How it simplifies AI integrations compared to APIs</a><a href="https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12#what-is-model-context-protocol-mcp-how-it-simplifies-ai-integrations-compared-to-apis" class="hash-link" aria-label="what-is-model-context-protocol-mcp-how-it-simplifies-ai-integrations-compared-to-apis的直接链接" title="what-is-model-context-protocol-mcp-how-it-simplifies-ai-integrations-compared-to-apis的直接链接">​</a></h5>
<p>简单解释了为什么需要 MCP，以及与传统的 API 有什么差异。</p>
<p><code>AI</code> <code>Agent</code> <code>MCP</code></p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>每周回顾</category>
        </item>
        <item>
            <title><![CDATA[「每周回顾」EP2025W11：2025 年软件架构与开源 AI 技术栈学习资源]]></title>
            <link>https://wang1212.github.io/2025/03/16/weekly/2025/weekly-review-ep2025w11</link>
            <guid>https://wang1212.github.io/2025/03/16/weekly/2025/weekly-review-ep2025w11</guid>
            <pubDate>Sat, 15 Mar 2025 18:00:00 GMT</pubDate>
            <description><![CDATA[2025 年第 11 周的回顾，推荐 2025 年学习软件架构的优质阅读材料，并提供了构建 AI 应用的开源技术栈资源列表。它为希望在软件架构和 AI 领域提升技能的开发者提供了实用的学习路径和工具参考。]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>推荐 2025 年学习软件架构的优质阅读材料，并提供了构建 AI 应用的开源技术栈资源列表。它为希望在软件架构和 AI 领域提升技能的开发者提供了实用的学习路径和工具参考。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ep146-the-open-source-ai-stack"><a href="https://blog.bytebytego.com/p/ep146-the-open-source-ai-stack" target="_blank" rel="noopener noreferrer">EP146: The Open Source AI Stack</a><a href="https://wang1212.github.io/2025/03/16/weekly/2025/weekly-review-ep2025w11#ep146-the-open-source-ai-stack" class="hash-link" aria-label="ep146-the-open-source-ai-stack的直接链接" title="ep146-the-open-source-ai-stack的直接链接">​</a></h5>
<p>构建 AI 应用的开源技术栈资源列表。</p>
<p><code>AI</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ep151-24-good-resources-to-learn-software-architecture-in-2025"><a href="https://blog.bytebytego.com/p/ep151-24-good-resources-to-learn" target="_blank" rel="noopener noreferrer">EP151: 24 Good Resources to Learn Software Architecture in 2025</a><a href="https://wang1212.github.io/2025/03/16/weekly/2025/weekly-review-ep2025w11#ep151-24-good-resources-to-learn-software-architecture-in-2025" class="hash-link" aria-label="ep151-24-good-resources-to-learn-software-architecture-in-2025的直接链接" title="ep151-24-good-resources-to-learn-software-architecture-in-2025的直接链接">​</a></h5>
<p>在 2025 年推荐学习软件架构设计的好的阅读资源列表。</p>
<p><code>Software Architecture</code> <code>Reading List</code></p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>每周回顾</category>
        </item>
        <item>
            <title><![CDATA[「每周回顾」EP2025W9：MoE 模型、AI 工程师阅读清单与浏览器控制代理]]></title>
            <link>https://wang1212.github.io/2025/03/02/weekly/2025/weekly-review-ep2025w9</link>
            <guid>https://wang1212.github.io/2025/03/02/weekly/2025/weekly-review-ep2025w9</guid>
            <pubDate>Sat, 01 Mar 2025 18:00:00 GMT</pubDate>
            <description><![CDATA[2025 年第 9 周的回顾，人工智能领域的最新进展，包括 DeepSeek 开源的 MoE 大语言模型，该模型因其架构设计和优缺点而备受关注。此外，文章还推荐了 2025 年 AI 工程师的必读资源，并探讨了利用 AI 模型通过自然语言对话控制浏览器的潜力，特别提到了 Operator 项目，预示着计算机使用代理的未来发展方向。]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>人工智能领域的最新进展，包括 DeepSeek 开源的 MoE 大语言模型，该模型因其架构设计和优缺点而备受关注。此外，文章还推荐了 2025 年 AI 工程师的必读资源，并探讨了利用 AI 模型通过自然语言对话控制浏览器的潜力，特别提到了 Operator 项目，预示着计算机使用代理的未来发展方向。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="mixture-of-experts-moe-llms"><a href="https://cameronrwolfe.substack.com/p/moe-llms" target="_blank" rel="noopener noreferrer">Mixture-of-Experts (MoE) LLMs</a><a href="https://wang1212.github.io/2025/03/02/weekly/2025/weekly-review-ep2025w9#mixture-of-experts-moe-llms" class="hash-link" aria-label="mixture-of-experts-moe-llms的直接链接" title="mixture-of-experts-moe-llms的直接链接">​</a></h5>
<p>在春节期间，DeepSeek 开源了一个基于 MoE 的大语言模型，在全球引起了很大的关注，然而当下大部分的大语言模型都是 MoE 架构的，这篇文章详细的探讨了 MoE 架构的设计和优缺点，对于想了解模型底层设计的人来说非常值得一读。</p>
<p><code>AI</code> <code>MoEs</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-2025-ai-engineer-reading-list"><a href="https://www.latent.space/p/2025-papers" target="_blank" rel="noopener noreferrer">The 2025 AI Engineer Reading List</a><a href="https://wang1212.github.io/2025/03/02/weekly/2025/weekly-review-ep2025w9#the-2025-ai-engineer-reading-list" class="hash-link" aria-label="the-2025-ai-engineer-reading-list的直接链接" title="the-2025-ai-engineer-reading-list的直接链接">​</a></h5>
<p>2025 年建议 AI 工程师阅读的资源列表。</p>
<p><code>AI</code> <code>Reading List</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="open-operator-serverless-browsers-and-the-future-of-computer-using-agents"><a href="https://www.latent.space/p/browserbase" target="_blank" rel="noopener noreferrer">Open Operator, Serverless Browsers and the Future of Computer-Using Agents</a><a href="https://wang1212.github.io/2025/03/02/weekly/2025/weekly-review-ep2025w9#open-operator-serverless-browsers-and-the-future-of-computer-using-agents" class="hash-link" aria-label="open-operator-serverless-browsers-and-the-future-of-computer-using-agents的直接链接" title="open-operator-serverless-browsers-and-the-future-of-computer-using-agents的直接链接">​</a></h5>
<p>使用 AI 模型通过自然语言对话的方式来控制浏览器，这是一个非常有潜力的方向。</p>
<ul>
<li><a href="https://openai.com/index/introducing-operator/" target="_blank" rel="noopener noreferrer">Introducing Operator</a></li>
</ul>
<p><code>AI</code> <code>Serverless Browsers</code></p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>每周回顾</category>
        </item>
        <item>
            <title><![CDATA[「每周回顾」EP2025W8：揭秘推理模型，超越传统 LLM]]></title>
            <link>https://wang1212.github.io/2025/02/23/weekly/2025/weekly-review-ep2025w8</link>
            <guid>https://wang1212.github.io/2025/02/23/weekly/2025/weekly-review-ep2025w8</guid>
            <pubDate>Thu, 20 Feb 2025 18:00:00 GMT</pubDate>
            <description><![CDATA[2025 年第 8 周的回顾，一篇文章深入探讨了当前热门的推理模型，阐释了它们与标准**大型语言模型（LLM）**之间的关联。在推理模型备受关注的当下，理解其工作原理及与现有 AI 范式的整合方式至关重要，为读者提供了全面审视这一前沿 AI 技术视角的宝贵机会。]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>一篇文章深入探讨了当前热门的推理模型，阐释了它们与标准**大型语言模型（LLM）**之间的关联。在推理模型备受关注的当下，理解其工作原理及与现有 AI 范式的整合方式至关重要，为读者提供了全面审视这一前沿 AI 技术视角的宝贵机会。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="demystifying-reasoning-models"><a href="https://cameronrwolfe.substack.com/p/demystifying-reasoning-models" target="_blank" rel="noopener noreferrer">Demystifying Reasoning Models</a><a href="https://wang1212.github.io/2025/02/23/weekly/2025/weekly-review-ep2025w8#demystifying-reasoning-models" class="hash-link" aria-label="demystifying-reasoning-models的直接链接" title="demystifying-reasoning-models的直接链接">​</a></h5>
<p>一篇讲述推理模型及其与标准 LLM 的关系的文章，在推理模型大火的当下非常值得一看。</p>
<p><code>AI</code> <code>推理模型</code></p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>每周回顾</category>
        </item>
        <item>
            <title><![CDATA[「每周回顾」EP2025W5：推理模型普及与数据验证标准]]></title>
            <link>https://wang1212.github.io/2025/02/02/weekly/2025/weekly-review-ep2025w5</link>
            <guid>https://wang1212.github.io/2025/02/02/weekly/2025/weekly-review-ep2025w5</guid>
            <pubDate>Sat, 01 Feb 2025 18:00:00 GMT</pubDate>
            <description><![CDATA[2025 年第 5 周的回顾，一篇文章探讨了推理模型相较于传统模型的优势，指出它们正成为主流趋势，因其更低的成本和更优的性能。此外，文中还提到了 Zod、Valibot 和 ArkType 库的作者们共同发起了 Schema 标准规范，旨在统一数据验证方法，从而提升开发者的体验和促进相关生态的发展。]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>一篇文章探讨了推理模型相较于传统模型的优势，指出它们正成为主流趋势，因其更低的成本和更优的性能。此外，文中还提到了 Zod、Valibot 和 ArkType 库的作者们共同发起了 Schema 标准规范，旨在统一数据验证方法，从而提升开发者的体验和促进相关生态的发展。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="why-reasoning-models-will-generalize"><a href="https://www.interconnects.ai/p/why-reasoning-models-will-generalize" target="_blank" rel="noopener noreferrer">Why reasoning models will generalize</a><a href="https://wang1212.github.io/2025/02/02/weekly/2025/weekly-review-ep2025w5#why-reasoning-models-will-generalize" class="hash-link" aria-label="why-reasoning-models-will-generalize的直接链接" title="why-reasoning-models-will-generalize的直接链接">​</a></h5>
<p>一篇探讨推理模型为什么将会普及的博文，相对于标准模型来说，推理模型正成为一种趋势，并且成本更低，效果更好。</p>
<p><code>AI</code> <code>推理模型</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="standard-schema"><a href="https://standardschema.dev/" target="_blank" rel="noopener noreferrer">Standard Schema</a><a href="https://wang1212.github.io/2025/02/02/weekly/2025/weekly-review-ep2025w5#standard-schema" class="hash-link" aria-label="standard-schema的直接链接" title="standard-schema的直接链接">​</a></h5>
<p>Zod、Valibot 和 ArkType 库的作者们发起了 Schema 的标准规范并在各自的库中进行了实现，这为后续的生态发展提供了基础，以提升开发者体验为目标。</p>
<p><code>JavaScript</code> <code>Data Schema</code> <code>数据校验</code></p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>每周回顾</category>
        </item>
        <item>
            <title><![CDATA[「每周回顾」EP2025W3：Docusaurus 3.7 发布及 2024 大模型技术总结]]></title>
            <link>https://wang1212.github.io/2025/01/19/weekly/2025/weekly-review-ep2025w3</link>
            <guid>https://wang1212.github.io/2025/01/19/weekly/2025/weekly-review-ep2025w3</guid>
            <pubDate>Tue, 14 Jan 2025 18:00:00 GMT</pubDate>
            <description><![CDATA[2025 年第 3 周的回顾，Docusaurus 3.7 已发布，新增对 React 19 的支持，预示着 Docusaurus 4 即将面世。同时，一篇文章总结了 2024 年大型语言模型（LLMs）领域的技术进展，涵盖了该年度 AI 大模型发展的重要经验和趋势。]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>Docusaurus 3.7 已发布，新增对 React 19 的支持，预示着 Docusaurus 4 即将面世。同时，一篇文章总结了 2024 年大型语言模型（LLMs）领域的技术进展，涵盖了该年度 AI 大模型发展的重要经验和趋势。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="docusaurus-37"><a href="https://docusaurus.io/blog/releases/3.7" target="_blank" rel="noopener noreferrer">Docusaurus 3.7</a><a href="https://wang1212.github.io/2025/01/19/weekly/2025/weekly-review-ep2025w3#docusaurus-37" class="hash-link" aria-label="docusaurus-37的直接链接" title="docusaurus-37的直接链接">​</a></h5>
<p>Docusaurus 3.7 发布，支持 react v19，相信很快 v4 将会发布。</p>
<p><code>Docusaurus</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="things-we-learned-about-llms-in-2024"><a href="https://simonwillison.net/2024/Dec/31/llms-in-2024/" target="_blank" rel="noopener noreferrer">Things we learned about LLMs in 2024</a><a href="https://wang1212.github.io/2025/01/19/weekly/2025/weekly-review-ep2025w3#things-we-learned-about-llms-in-2024" class="hash-link" aria-label="things-we-learned-about-llms-in-2024的直接链接" title="things-we-learned-about-llms-in-2024的直接链接">​</a></h5>
<p>一篇对 2024 年 AI 大模型领域技术发展的总结</p>
<p><code>AI</code> <code>LLMs</code></p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>每周回顾</category>
        </item>
        <item>
            <title><![CDATA[Monorepo 中使用 TypeScript 的问题]]></title>
            <link>https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo</link>
            <guid>https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo</guid>
            <pubDate>Sun, 20 Oct 2024 13:48:00 GMT</pubDate>
            <description><![CDATA[在 Monorepo 中使用 TypeScript 时相比于单包仓库要复杂的多，会遇到一系列问题，这里记录一下这些问题的解决方案。]]></description>
            <content:encoded><![CDATA[<p>在 Monorepo 中使用 TypeScript 时相比于单包仓库要复杂的多，会遇到一系列问题，这里记录一下这些问题的解决方案。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="共享项目配置">共享项目配置<a href="https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo#%E5%85%B1%E4%BA%AB%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="共享项目配置的直接链接" title="共享项目配置的直接链接">​</a></h2>
<p>为了降低维护成本，通常的做法是在项目根目录创建一个 <strong>tsconfig.base.json</strong> 配置文件作为公共的基础配置，同时在每个子包中再创建一个单独的配置文件并引用基础配置：</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// tsconfig.base.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"compilerOptions"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"target"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ESNext"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"include"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"src/**/*"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// packages/foo/tsconfig.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"extends"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../../tsconfig.base.json"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"compilerOptions"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"rootDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"src"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"outDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dist"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// packages/bar/tsconfig.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"extends"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../../tsconfig.base.json"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"compilerOptions"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"rootDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"src"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"outDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dist"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>很明显，这里没有把 <code>rootDir</code> 和 <code>outDir</code> 配置放到公共的基础配置中去，这是因为<strong>路径相关的配置（相对路径）在解析时行为不可预测，很容易出错</strong>，为了确保正确，必须将其放到各自的子包配置中去。显然，这样维护起来很麻烦。</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>提示</div><div class="admonitionContent_BuS1"><p>终于，TypeScript 官方在 <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-5-5.html#the-configdir-template-variable-for-configuration-files" target="_blank" rel="noopener noreferrer">5.5 版本发布时支持了 <code>${configDir}</code> 模板变量</a>，这使得路径相关配置更加明确，维护起来也更方便。</p></div></div>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// tsconfig.base.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"compilerOptions"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"target"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ESNext"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"rootDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"${configDir}/src"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"outDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"${configDir}/dist"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"include"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"${configDir}/src/**/*"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="源代码跳转">源代码跳转<a href="https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo#%E6%BA%90%E4%BB%A3%E7%A0%81%E8%B7%B3%E8%BD%AC" class="hash-link" aria-label="源代码跳转的直接链接" title="源代码跳转的直接链接">​</a></h2>
<p><strong>Monorepo 中的包依赖关系通常较为复杂，在维护过程中阅读源代码时会频繁遇到其它依赖包的代码调用</strong>，直接点击跳转会跳到对应的类型定义文件，这对于我们想直接查看依赖包的源代码来说极为不便。不过，我们可以结合 VSCode 和 TypeScript 编译配置来实现点击直接跳转到依赖包源代码的目的。</p>
<p>首先，需要配置一下 VSCode 中 JavaSCript/TypeScript 的 <code>Prefer Go To Source Definition</code> 配置项。</p>
<p>接下来，再配置一下 TypeScript 的编译配置 <a href="https://www.typescriptlang.org/tsconfig/#declarationMap" target="_blank" rel="noopener noreferrer"><code>declarationMap</code></a> 即可：</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"compilerOptions"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"declaration"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"declarationMap"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"declarationDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"${configDir}/types"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="vite-与实时生成类型定义">Vite 与实时生成类型定义<a href="https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo#vite-%E4%B8%8E%E5%AE%9E%E6%97%B6%E7%94%9F%E6%88%90%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89" class="hash-link" aria-label="Vite 与实时生成类型定义的直接链接" title="Vite 与实时生成类型定义的直接链接">​</a></h2>
<p>现在，我们喜欢在开发模式下使用 Vite 这种 Bundless 模式的构建工具来加速我们的开发工作流，尤其是在 Monorepo 中编写库的使用示例时极为便利。</p>
<p>然而，当我们同时使用 TypeScript 时，<strong>实时构建类型定义文件也很重要，这有助于我们频繁的在多个子包之间修改代码而不会出错</strong>。当子包数量很多时，我们不可能为每个子包目录都启动一个执行 <code>tsc --watch</code> 的进程，这会由于进程太多产生严重的性能问题。</p>
<p>相反，我们可以考虑按需的方式，在 Vite 检测到文件热更新时来实时构建该子包新的类型定义文件，这可以通过一个简单的插件来实现。</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> path </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'node:path'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> exec </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'node:child_process'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buildTypesPlugin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'build-types-plugin'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@see</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> https://vite.dev/guide/api-plugin.html#handlehotupdate</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">handleHotUpdate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> file </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> relativePath </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">relative</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">__dirname</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> packagePath </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> relativePath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">startsWith</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'packages/'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> relativePath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">slice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">packagePath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">exec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">cd </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">packagePath</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> &amp;&amp; npm run build:types</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> stdout</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> stderr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> date </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Date</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> hours </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> date</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getHours</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">padStart</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'0'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> minutes </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> date</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getMinutes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">padStart</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'0'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> seconds </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> date</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getSeconds</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">padStart</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'0'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">\x1b[90m</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">hours</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">minutes</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">seconds</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> [build:types]: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">error</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token string" style="color:#e3116c">'\x1b[0m'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">\x1b[90m</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">hours</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">minutes</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">seconds</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> [build:types] success</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">'\x1b[0m'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="相关资料">相关资料<a href="https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo#%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99" class="hash-link" aria-label="相关资料的直接链接" title="相关资料的直接链接">​</a></h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Monorepo" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Monorepo</a></li>
<li><a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-5-5.html#the-configdir-template-variable-for-configuration-files" target="_blank" rel="noopener noreferrer">https://www.typescriptlang.org/docs/handbook/release-notes/typescript-5-5.html#the-configdir-template-variable-for-configuration-files</a></li>
<li><a href="https://github.com/microsoft/TypeScript/issues/57485" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/TypeScript/issues/57485</a></li>
<li><a href="https://www.typescriptlang.org/tsconfig/#declarationMap" target="_blank" rel="noopener noreferrer">https://www.typescriptlang.org/tsconfig/#declarationMap</a></li>
</ul>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>计算机技术</category>
            <category>工具</category>
            <category>TypeScript</category>
            <category>Monorepo</category>
            <category>实践案例</category>
        </item>
        <item>
            <title><![CDATA[一次湖北自驾游]]></title>
            <link>https://wang1212.github.io/2024/07/12/life/tourism/tourism-hubei-enshi</link>
            <guid>https://wang1212.github.io/2024/07/12/life/tourism/tourism-hubei-enshi</guid>
            <pubDate>Wed, 17 Jul 2024 21:14:00 GMT</pubDate>
            <description><![CDATA[换工作的间隙有机会来一次自驾游，目的地选择了湖北，恰好有神农架和恩施两个著名旅游城市区域相邻。]]></description>
            <content:encoded><![CDATA[<p><u>2024-07-12</u>
<br>
<br></p>
<p>换工作的间隙有机会来一次自驾游，目的地选择了湖北，恰好有神农架和恩施两个景点聚集的区域相邻且非常适合自驾游。</p>
<p>恰逢“梅雨季”，全国到处都在下雨，从提前一个月开始计划时就时刻关注着天气，直到临近出发的前几天天气预报依然是雨下个不停，工作后好不容易有这么长的休假时间，难道只能躺在家里了？</p>
<p>时间越来越近，连续从抖音直播上关注着景区的实时天气，情况似乎并没有想象的那么差，一句大家常说的山里的天气说不准给了一定的信心。</p>
<p>自驾的路线选择了先到神农架，再到恩施，再途径安康回到西安，预计总共 6 天时间。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="神农架">神农架<a href="https://wang1212.github.io/2024/07/12/life/tourism/tourism-hubei-enshi#%E7%A5%9E%E5%86%9C%E6%9E%B6" class="hash-link" aria-label="神农架的直接链接" title="神农架的直接链接">​</a></h2>
<p>出行前看了网上攻略，神农架打算就去联票的六大景点，所以第一天计划一大清早出发，大约下午两三点就能到第一个景点天燕，逛完后继续前进晚上就可以在木鱼镇休息。</p>
<p>头一天晚上本打算是早早休息的，结果下午和朋友去吃了个便饭差点误了准备东西的时间，折腾下来休息的时候也到晚上十一点左右了，还准备第二天大早 7 点半就出发呢。这次之所以这么早出发，一方面是因为今天的路程有四五百公里，导航显示得七八个小时，另一方面是前几次都磨蹭到早上九点多出发，导致游玩的时间被严重挤压了。</p>
<p>六点多钟起床洗漱，把东西搬到车上，买了早餐垫了肚子后就出发了，此时刚好七点半。这一次还算顺利，一路上畅通无阻，全程两个人换着开车，本打算中午在比较大的服务区休息一下吃个午饭的，结果大家肚子都不是很饿，中途也因此少耽搁了很多时间。</p>
<p>下午两点半顺利到达天燕景区大门口，简单休息和用餐后，便开车直奔景区内部了。值得一提的是，神农架这几个景点大部分都是可以直接自驾进入景区的，所以游玩起来相对比较省力，时间也不会太紧张。天燕景区最被人所熟知的便是彩虹桥了，自驾大概半小时左右就到达彩虹桥景点了，不过这里不是很好停车。停好车后大概爬了 20 分钟左右才到达了彩虹桥跟前，一路的空气很清新，天气也很好，站在桥上能看见远处山间的云雾不一会便被吹散了，要是后面几天的天气能和今天一样好该多好呢。晃晃悠悠不一会便到下午五点多钟了，由于山路不好走，即便是三四十公里也得行驶一个多小时，也是时候启程继续前进到木鱼镇歇息了。</p>
<p>七点多就到木鱼镇了，这时候有了下雨的迹象，找了家生意比较好的当地菜馆，似乎并不是很合胃口。</p>
<p>比较好的是整个行程不需要走回头路，原计划第二天游玩木鱼镇周边的三个景点，第三天早上游玩大九湖，下午游玩神农顶，傍晚休息在去恩施的途中巴东县，主要是因为从神农顶直接去恩施需要五个多小时车程，还是太赶了。不过，临时决定，如果第二天天气还行，早上就快速逛完木鱼镇周边的三个景点，下午直接去神农顶，晚上休息在大九湖旁的坪阡古镇，第三天下午就有充足的时间开车去恩施了。</p>
<p>第二天七点钟早早的起床在镇子上吃了早餐，自驾去只有五公里远的官门山景点，这里主要是一些动植物生态馆，景区大门映入眼帘的便是大家经常在电视或者网络看到的一只野人拥抱小野人的石头雕塑。景区还是非常大的，我们只在感兴趣的几个景点停留了一下，其中之一便是蜜蜂园，有大量的蜂箱被悬挂在悬崖峭壁之上，场面很壮观，吸引了大量的游客在此拍照打卡，另一个则是比较令人失望的熊猫馆，由于一些原因导致没有看到任何一只大熊猫。</p>
<p>接下来十多分钟的车程就到了神农坛景点，这里也有景区宣传时经常拍的非常壮观的巨大的神农氏雕像，旁边还有一颗千年古树，这个景区并不大，拍照打卡完就可以结束了。今天的天气还算不错，即使下雨也是小雨而已，这会都已经有天晴的迹象了，趁着天气好下午直接安排神农顶。有趣的是，途径了一个非常漂亮的瀑布观景台，这不是一个收费的景点，就只是路边的一个简单的观景平台，可见一路上处处都是美景。</p>
<p>早上最后一个景点是天生桥，据说是很壮观的瀑布，距离也还好，车程二十分钟左右的样子，所以距离都很近的话一早上三个景点刚刚好。驾车进入景点还没停稳便被眼前的瀑布景象震撼了，步行观光路线的入口便是该景点最有名的瀑布了，一下子就能勾起游客的兴趣了。景区步行观光路线大概得半个小时才能走完，后半程基本上就是完全商业化的购物环节了。</p>
<p>十二点刚过，早上三个景点打卡的目标完成，20分钟车程去木鱼镇吃个午饭，抓紧时间去神农顶。午饭是一家重庆菜，算是这两天吃的最好的一顿了。</p>
<p>吃完饭天气看起来还算不错，不过在去景点的途中看到抖音上直播的博主说最高处神农顶上雾特别大，能见度特别差。果不其然，大概两点钟左右到了景区检票口时，景区工作人员还专门提醒了一下山上雾大，到时候注意打开双闪开慢点，这时就有点慌了，不过也只能继续前进了。</p>
<p>神农顶景区的海拔落差是特别大的，从 1000 多米到最高的 3000 多米，第一个景点是小龙潭，不过没有开放，随即便直接去了金猴岭，这里有被称为绿野仙踪的原始森林，一圈下来半个小时左右。然后就是步行到金猴溪了，这里途中也有一个很壮观的金猴飞瀑景色，非常适合打卡，来神农架最不好的就是想看的大熊猫和金丝猴都没有看到。</p>
<p>从金猴岭景点是需要走一段回头路的，接下来去下一个景点神农谷，快要到达的时候海拔突然急速上升，不一会便出现了非常大的雾，能见度特别差，赶紧减缓车速打开灯光谨慎驾驶，到这里其实是有点慌的，本身第一次开山路，因为神农架一路都是 347 国道，路况特别好也就觉得山路也还好，只要天气好的话也没什么，现在大雾再叠加山路还是以安全为主。此时海拔已经 2000 多米了，站在神农谷的观景台其实什么都看不到，周围全是云雾缭绕的，空气倒是很好，负氧离子含量很高。这个时候在地图上查了下接下来几个景点，最近的神农顶在沿路的一个岔路上，海拔要到 3000 多米，打算天气这么差就不去了，到时候看沿途其它景点天气如何再决定要不要停留逛一逛。</p>
<p>从神农谷继续前进，此时还是小雨，但由于大雾天气导致只能以时速二三十公里的速度前进，不一会便路过了去神农顶的岔路口，发现人特别多，遂决定既然来了就去路口停车看看，最后发现神农顶的打卡点就在路口停车区旁边，也算是没有白跑一趟。</p>
<p>不敢逗留太久，害怕天气越来越差，遂继续驾车前进，让人绝望的是海拔一直都在 2000 以上，雨也越来越大，雾也变重了，能见度更差了。缓慢的驾车前行过程中，时不时注意着经过的景点，在板壁岩这块打算停下来看看，这个时候雾大到什么程度，想找卫生间都看不见周围的东西，只能走近一点看看。板壁岩的景色还不错，不需要远眺，步行大概十多分钟就能逛完，这里有去黄山也看过的“飞来石”。</p>
<p>神农顶景区内也就剩下最后一个比较有名的太子娅景点了，走近一看才发现也是原始森林，由于在金猴岭那边已经看过类似的风景了，而且这边人烟稀少，遂决定赶紧下山赶在天黑前到达坪阡古镇。原以为随着下山海拔降低，大雾会消散一些，结果一直到坪阡古镇一路上还是有大雾，算是一次惊险而刺激的山路自驾之行了。</p>
<p>一天打卡完四个景点，给第三天留下了很充裕的时间，当然还在纠结天气不好的话，明天早上还去不去大九湖，毕竟这个景点是不允许自驾的，每个人还得额外买景交车的票且不便宜。</p>
<p>要不说运气还算不错呢，第三天早上起床后竟然没有下雨，既然来了就不要错过六大景点的的任何一个，直奔大九湖而去。大九湖因其高海拔平原上的九个湖泊而闻名，进入景区需要先乘坐四十分钟左右的大巴才能到达开始游玩的地方，虽说还未到达九个湖泊，但这途中亦有不少美景引人入胜。一号湖是人工湖暂未开放，直接从二号湖开始游玩，坐上小火车在接近二号湖时，被这靓丽的风景深深吸引，湖水中天空与山的倒影如一面镜子一样，在二号湖下车后游玩了约半个多小时，还看到了黑天鹅一家三口在湖边游玩，一只小天鹅被它的父母小心的呵护着尽兴的玩耍。</p>
<p>据说只有 2-6 号湖景色不错，从二号湖坐着小火车到三号湖下车后便一直沿着步行道走到了五六号湖，由于途中都是沼泽地所以风景比较一般，这时也下起了雨，遂加快了脚步，一直到五号湖时又天晴了。五六号湖在各自的对面，但五号湖的景色要更胜一筹，在这里拍照打卡的游客也特别的多。</p>
<p>接下来坐着公交车去七八号湖逛了一圈，发现没什么好的景色就没下车，紧接着去了鹿苑喂了梅花鹿，坐着歇息半个小时后就可以坐公交车直接去大巴换乘点了。感到幸运的是，坐到大巴车上时突然下起了大雨，要是再晚几分钟可要被淋成落汤鸡了，自从来了神农架运气一直还不错。</p>
<p>两三天的游玩也有些许劳累，竟在大巴车上睡着了，四十分钟又回到了景区门口，此时已经中午十二点钟了，打算直接驱车去坪阡古镇吃个午饭，下午慢悠悠的赶在晚上就可以到达恩施了。</p>
<p>吃完午饭小雨已经变成了中雨，根据导航显示晚上七点钟就可以到达恩施，随即出发。</p>
<p>坪阡古镇的海拔应该也不低，从坪阡古镇开了大概一个多小时一路上还是有大雾，搞得人还挺紧张的。一路上雨越来越大，途中突然出现了一片区域内的大暴雨，即便是雨刮器开到最高档，也看不清前面的路了，幸好路上的车不算多，雾也慢慢消散了，几分钟后便驶离了这段区域。来时以为山路难开，没想到路况很好，便放下心了，不曾想在神农顶景区内遇到了大雾，让人心里一紧，两天下来也已适应了大雾天气，只要开慢点谨慎驾驶即可，但刚才这段大暴雨的经历真是吓死了，雨滴快速落在前挡风玻璃上直接让驾车的人看不清前方路况和车辆，还是很危险的。</p>
<p>在去恩施的路上也是状况不断，在一个丁字路口突然遭遇堵车，此时雨也非常大，等待了十多分钟后便不想再等了，不然太耽搁时间了，遂选择另一条高速走的少一点但只多半个小时车程的路线，还是省道应该要好开一些，走到前面岔路口才发现原来要走的那条路被封了，因为阴雨天气太危险了。就这样一直到晚上八点才达到恩施的酒店。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="恩施">恩施<a href="https://wang1212.github.io/2024/07/12/life/tourism/tourism-hubei-enshi#%E6%81%A9%E6%96%BD" class="hash-link" aria-label="恩施的直接链接" title="恩施的直接链接">​</a></h2>
<p>由于天气原因，恩施的计划一直确定不下来，一开始是冲着恩施大峡谷来的，结果考虑到天气不好和大峡谷游玩时间太长的原因，便打算更改为地心谷和梭布垭石林两个景点。但从神农架这 3 天的情况来看，天气并没有想象的这么恶劣，而且恩施前两天的天气也还不错，遂决定早上看看天气再说。</p>
<p>恩施的景区距离市区都比较远，车程都在一到两个小时左右，早上起床后发现没有下雨随即决定去大峡谷景区。到达大峡谷景区时已经早上十点多了，景区的人特别的多，超出想象。</p>
<p>恩施大峡谷的体验很不好，在停车场出来后还得走个十多分钟才能到游客中心购票进入景区，检完票已经是十一点多了。据网上的攻略说即便是购买了所有能坐的交通工具，至少也得爬个四五个小时，七星寨三四个小时是肯定的，云龙地缝则需要一两个小时左右。考虑到天气变幻莫测，决定先去最耗时间七星寨，下来后再去云龙地缝，即先上山后下谷。</p>
<p>七星寨一开始是一段索道，剩下的就全是徒步了，一开始会经过著名的“一线天”，然后是一段悬崖峭壁上的步道，最后就可以到最为人们所熟知的“一炷香”景点了，这个景点如果不注意很容易错过，因为在步行过程中它是突然出现在身后的。在“一炷香”逗留打卡拍照后，继续前进的过程不一会就看到一团浓雾袭来，景点能见度瞬间变差，感叹到运气还是一如既往的好，七星寨不虚此行。七星寨全程步行确实需要三个多小时，但实际上在不到两个小时的时候就可以到达“一炷香”景点，后续的一个多小时多少有点无聊，全程雾很大，和神农顶一样站在山顶几乎看不太清周围的群山景象。</p>
<p>从七星寨下山后又回到了坐索道的地方，此时已经下午三点多，在云龙地缝入口处卖饭的地方简单填了填肚子，进入地缝景点。</p>
<p>刚进到云龙地缝的入口处就遭遇了十几分钟的拥堵排队，原因竟然是很多人下去走了十多分钟就原路返回了，要知道云龙地缝景点的步行道基本上是单行道，不走回头路的，让人无语至极，抱着这种心态来游玩不如躺家里，而且还不影响别人。由于云龙地缝因为天气原因只开放了二期，所以不到一个小时就到达了垂梯处，景点也基本游玩结束了。谷底的景色还是很不错的，尤其是最后的瀑布，对于北方人来说应该还是挺震撼的。</p>
<p>乘坐云龙地缝的垂梯到达上面后，可以眺望对面的群山，这就是刚开始爬七星寨一众景点所在的群山，此时下午五点钟左右，天气竟异常的好，远处的群山清晰可见，山间的云雾也已消散，如果先来地缝后上七星寨的话，此时应该站在山顶可以眺望到群山的壮观景色，可山里的天气谁又说的准呢。又是令人绝望的一小时步行才可到达景区入口处，说是不走回头路，好像也不是那么回事。</p>
<p>第四天的恩施大峡谷行程已经结束，原来的计划是恩施需要游玩两天，第五天的下午开始沿安康方向慢悠悠回家，都说恩施大峡谷包含了其它景区的所有景象，再去也就没多大意义了，凭空多出来的一天行程使我们突发奇想去重庆逛一天，毕竟导航显示也就三个多小时而已，此时也才下午五点多钟。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="重庆">重庆<a href="https://wang1212.github.io/2024/07/12/life/tourism/tourism-hubei-enshi#%E9%87%8D%E5%BA%86" class="hash-link" aria-label="重庆的直接链接" title="重庆的直接链接">​</a></h2>
<p>几年前来爬峨眉山时来重庆玩过，但其他人没来过，所以对于我来说属于故地重游了。出来玩的几天终于能睡个懒觉了，今天一直睡到早上九点多才起床，吃饭完已然十点多，计划坐地铁先去山城步道，然后再去十八步梯等等，基本上在渝中区绕一圈的样子，这在我之前来重庆时倒没走过的。</p>
<p>比较搞笑的是，大家半个多小时走完山城步道就已经不行了，这闷热的天气体感实在是不舒服，那不如坐地铁去磁器口吧。</p>
<p>磁器口之前也来过，但在来此地似乎已经不太一样了，也可能是印象太浅的缘故。大家随意逛了逛，买了小吃，尝了冰粉，实在太热还是选择回酒店休息一会，傍晚去洪崖洞和解放碑逛一圈。</p>
<p>傍晚六点多的洪崖洞已经是人群熙熙攘攘，再结合这闷热的天气，实属受罪，而且我们还是从上面进的景区，很多人来洪崖洞不是为了逛，而是为了看夜景，导致我们不得不沿步道从十二楼要下到江边去拍夜景。由于人群过于拥挤，打卡拍照后就没作过多的停留，打算直奔解放步行街，此时已经快到晚上九点钟。</p>
<p>重庆魔幻的地形是一种独特的风景，有时候也是一种烦恼，当我们打算去解放碑时，短短一公里多的距离却让我们犯了难。导航显示需要我们沿一开始从洪崖洞下山的步道原路返回上山，考虑到这么多人实在是不想再去凑这个热闹。于是，我们就沿着江边走，打算另辟蹊径，一路经过多方打听，耗时将近一个小时，终于找到一个还正在施工的停车场，乘坐停车场的电梯上到了十二楼，而这里距离解放碑步行街也就几百米的距离。</p>
<p>解放碑我之前也来过，晚上十点多的步行街人倒不是很多了，地铁也快停运了，简单的逛了逛之后就回酒店了。</p>
<p>重庆的这一天属于比较佛系了，算是这几天以来最轻松的一次行程。</p>
<p>重庆比恩施距离西安还要远，需要九个小时驾车六百多公里才能到达，由于一路路况很好，全程高速，早上十点多出发，下午六点多钟就已经安全到达了，这次自驾之旅圆满结束。</p>
<p>回家后的一周多从新闻了解到陕西南部和四川都发生了很严重的山洪灾害，全国其它地区也多有因天气引发的灾害发生，不由得感慨，要是再晚去几天可能就被困在路上了，这也充分说明了在天气不好的时候要避免驾车出游，尤其是去山区的路，很容易发生安全事故，任何时候都应保证自身安全。</p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>生活</category>
            <category>旅游</category>
            <category>神农架</category>
            <category>恩施</category>
            <category>重庆</category>
        </item>
        <item>
            <title><![CDATA[解析 Rough.js 图形线填充实现：扫描线算法]]></title>
            <link>https://wang1212.github.io/2024/06/16/computer-technology/computer-graphics/scanline-algorithm</link>
            <guid>https://wang1212.github.io/2024/06/16/computer-technology/computer-graphics/scanline-algorithm</guid>
            <pubDate>Sun, 16 Jun 2024 19:11:00 GMT</pubDate>
            <description><![CDATA[由于比较好奇 Rough.js 的手绘风格是如何实现的，遂准备看看其源码实现，在这个过程中发现了一个依赖项包 hachure-fill，类似铅笔线的图形填充依赖此包实现，其源码比较简洁，从其实现中了解到一个计算机图形学领域的概念-“扫描线算法”。]]></description>
            <content:encoded><![CDATA[<p>由于比较好奇 <a href="https://roughjs.com/" target="_blank" rel="noopener noreferrer">Rough.js</a> 的手绘风格是如何实现的，遂准备看看其源码实现，在这个过程中发现了一个依赖项包 <a href="https://github.com/pshihn/hachure-fill" target="_blank" rel="noopener noreferrer"><code>hachure-fill</code></a>，类似铅笔线的图形填充依赖此包实现，其源码比较简洁，从其实现中了解到一个计算机图形学领域的概念-“扫描线算法（Scanline Algorithm）”。</p>
<p><img decoding="async" loading="lazy" src="https://roughjs.com/images/cap_demo.png" alt="Rough.js sample" class="img_ev3q"></p>
<p>如上图所示，在一个图形中用线进行填充，而不是某种颜色，为了实现该效果，需要基于该图形计算多条填充线段的坐标数据。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="源码分析">源码分析<a href="https://wang1212.github.io/2024/06/16/computer-technology/computer-graphics/scanline-algorithm#%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90" class="hash-link" aria-label="源码分析的直接链接" title="源码分析的直接链接">​</a></h2>
<p>首先，从 <code>hachure-fill</code> 简洁的源代码（v0.5.2）实现来进行分析其实现思路。</p>
<p>该库提供了以下 API：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">hachureFill</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">points</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Point</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> angle</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre></div></div>
<p>为了计算图形内的填充线数据，需要提供该图形的顶点数据 <code>points</code>，同时提供了视觉效果多样化的自定义配置，允许配置填充线的倾斜角度 <code>angle</code> 和间隔距离 <code>gap</code>。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/pshihn/hachure-fill/blob/master/src/hachure.ts#L41</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">hachureLines</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygons</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Polygon </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Polygon</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureGap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureAngle</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureStepOffset </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> angle </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> hachureAngle</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> gap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hachureGap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> polygonList </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygons</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> polygons</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> polygons</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'number'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">polygons </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Polygon</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> polygons </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Polygon</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> rotationCenter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Point </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">angle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> polygon </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> polygonList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">rotatePoints</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rotationCenter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> angle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lines </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">straightHachureLines</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygonList</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureStepOffset</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">angle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> polygon </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> polygonList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">rotatePoints</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rotationCenter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">angle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">rotateLines</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lines</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rotationCenter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">angle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lines</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>根据源码中 <code>hachureLines()</code> 函数的实现逻辑，<strong>其首先对目标图形顶点的数据进行了旋转操作，然后调用 <code>straightHachureLines()</code> 函数计算得到了多条填充线的数据，最后同时将目标图形的顶点和填充线数据又做了同样角度的逆旋转操作。</strong>（为什么要做旋转和逆旋转操作后面会进行解释）</p>
<p>至此，我们可以先直接来看看 <code>straightHachureLines()</code> 函数的实现逻辑。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/pshihn/hachure-fill/blob/master/src/hachure.ts#L62</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">straightHachureLines</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygons</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Polygon</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureStepOffset</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> vertexArray</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Point</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> polygon </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> polygons</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> vertices </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">...</span><span class="token plain">polygon</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">areSamePoints</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">vertices</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      vertices</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vertices</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      vertexArray</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vertices</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lines</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lines</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>该函数首先对目标图形的顶点数据进行了简单的预处理，将所有多边形的顶点数组提取到 <code>vertexArray</code> 中，并<strong>确保每个多边形的第一个和最后一个点相同</strong>。这样做的原因大概基于两方面考虑：</p>
<ul>
<li>一是确保多边形闭合，如果第一个点和最后一个点不同，那么在后续处理边的时候，就会将最后一条边漏掉，导致结果不完整；</li>
<li>二是处理自相交多边形，自相交多边形是指多边形的边相互交叉的情况，对于这种情况，单个多边形实际上被分割成了多个子多边形，算法可以将自相交多边形视为多个独立的子多边形来处理，从而正确地生成内部线条。</li>
</ul>
<p>接下来则是填充线的完整计算逻辑实现。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/pshihn/hachure-fill/blob/master/src/hachure.ts#L62</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">straightHachureLines</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygons</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Polygon</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureStepOffset</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lines</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  gap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">gap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Create sorted edges table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> edges</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> EdgeEntry</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> vertices </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> vertexArray</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> vertices</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> p1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> p2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ymin </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">min</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          ymin</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          ymax</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          x</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ymin </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          islope</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">abs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lines</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Start scanning</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> activeEdges</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ActiveEdgeEntry</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> y </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> edges</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> iteration </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> ix </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">edges</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ix </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> removed </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">splice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ix </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      removed</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> s</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> edge </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    activeEdges </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ae2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> ae2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> ae2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">abs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> ae2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// fill between the edges</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hachureStepOffset </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">iteration </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> gap </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> nexti </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nexti </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ce </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> activeEdges</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ne </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> activeEdges</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">nexti</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          lines</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">round</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ce</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">round</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ne</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    y </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> hachureStepOffset</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      ae</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ae</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hachureStepOffset </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> ae</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">islope</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    iteration</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lines</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>根据以上源码来看，其大致分为几步：</p>
<ol>
<li><strong>将顶点数据转换为多条边数据 <code>edges</code></strong>；</li>
<li><strong>然后对边进行排序（根据最小 <code>y</code> 坐标）</strong>；</li>
<li><strong>然后从最小的 <code>y</code> 坐标开始向上迭代计算填充线（这个过程中每次迭代都会收集与当前 <code>y</code> 坐标相关的边 <code>activeEdges</code>，同时对其进行排序（按 <code>x</code> 坐标），计算当前 <code>y</code> 坐标水平线与两条边的交点即作为填充线数据）。</strong></li>
</ol>
<p>这里需要注意的是，每次迭代时，活动边 <code>activeEdges</code> 的 <code>x</code> 都会重新赋值一次，利用等比例缩放的原理根据 <code>y</code> 的步进计算得到 <code>x</code> 的步进。</p>
<p>实际上到这里，查询其它相关资料可以了解到，上述步骤是计算机图形学中 <strong>“扫描线算法（Scan-line Algorithm）”</strong> 的大致思路。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="扫描线算法">扫描线算法<a href="https://wang1212.github.io/2024/06/16/computer-technology/computer-graphics/scanline-algorithm#%E6%89%AB%E6%8F%8F%E7%BA%BF%E7%AE%97%E6%B3%95" class="hash-link" aria-label="扫描线算法的直接链接" title="扫描线算法的直接链接">​</a></h2>
<p>根据<a href="https://en.wikipedia.org/wiki/Scanline_rendering" target="_blank" rel="noopener noreferrer">维基百科</a>，扫描线算法实际上是<strong>一种图形渲染技术</strong>，一开始其作为一种高效的图形渲染技术而出现，后被应用到多个不同场景，例如我们这里所说的图形的线填充场景。</p>
<p>该算法的工作原理可以描述为以下几个关键步骤：</p>
<ol>
<li>初始化多边形的边数据表（Edge Table，其中需要计算出每条边的纵坐标极值，横坐标起始点以及斜率倒数 4 个关键值）；</li>
<li>创建活跃边表（Active Edge Table, AET，存储当前扫描线与哪些边相交）；</li>
<li>以所有边中最小的纵坐标初始化扫描线 <code>y=ymin</code>，开始向上迭代 <code>y</code>；</li>
<li>更新活跃边表（收集与当前扫面线相交的所有边）；</li>
<li>根据横坐标 <code>x</code> 对活跃边表中的边进行排序，以确定交点的顺序；</li>
<li>填充多边形，在活跃边表中的边按 <code>x</code> 坐标成对出现，每对之间的区域为多边形内部，绘制水平线进行填充；</li>
<li>根据边的斜率倒数更新活跃边表中边的 <code>x</code> 坐标，为下一行扫描做准备；</li>
<li>重复步骤 4-8 直至所有边被迭代完成。</li>
</ol>
<p><img decoding="async" loading="lazy" src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Scan-line_algorithm.svg/330px-Scan-line_algorithm.svg.png" alt="Scan-line_algorithm" title="维基百科示例图" class="img_ev3q"></p>
<p>如上图所示，纵坐标最小值为 A 点 <code>y</code> 值，从该位置依次向上迭代计算多条平行线（即 c、b、a 顺序），并在平行线的所有像素点处进行填充。</p>
<p>扫描线算法原理比较简单，可查看<a href="https://www.educative.io/answers/what-is-scanline-fill-algorithm" target="_blank" rel="noopener noreferrer">该文章中的动画示例</a>来更好的理解其过程。另外，该算法实现时要注意一些特殊情况，例如与扫描线平行的边需要忽略掉。</p>
<p>至此，可以解释为何一开始要执行图形顶点数据的旋转和逆旋转操作了，这是为了实现任意角度的填充线，因为经过旋转后在新的坐标系中可以利用扫描线算法进行迭代得到所有的水平填充线，再经过逆旋转操作可以将坐标系恢复最终得到预期角度的填充线数据。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="参考资料">参考资料<a href="https://wang1212.github.io/2024/06/16/computer-technology/computer-graphics/scanline-algorithm#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://github.com/pshihn/hachure-fill" target="_blank" rel="noopener noreferrer">https://github.com/pshihn/hachure-fill</a></li>
<li><a href="https://en.wikipedia.org/wiki/Scanline_rendering" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Scanline_rendering</a></li>
<li><a href="https://www.educative.io/answers/what-is-scanline-fill-algorithm" target="_blank" rel="noopener noreferrer">https://www.educative.io/answers/what-is-scanline-fill-algorithm</a></li>
<li><a href="https://computergraphics.stackexchange.com/questions/5134/why-is-the-scan-line-filling-algorithm-so-seemingly-over-complicated" target="_blank" rel="noopener noreferrer">https://computergraphics.stackexchange.com/questions/5134/why-is-the-scan-line-filling-algorithm-so-seemingly-over-complicated</a></li>
<li><a href="https://www.tutorialspoint.com/computer_graphics/polygon_filling_algorithm.htm" target="_blank" rel="noopener noreferrer">https://www.tutorialspoint.com/computer_graphics/polygon_filling_algorithm.htm</a></li>
<li><a href="https://www.cnblogs.com/larry1024/p/17683177.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/larry1024/p/17683177.html</a></li>
</ul>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>计算机技术</category>
            <category>计算机图形学</category>
            <category>数据可视化</category>
            <category>扫描线算法</category>
            <category>源码解析</category>
        </item>
        <item>
            <title><![CDATA[谈谈现阶段对 AI Agent 的理解]]></title>
            <link>https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent</link>
            <guid>https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent</guid>
            <pubDate>Fri, 22 Mar 2024 18:57:00 GMT</pubDate>
            <description><![CDATA[自 OpenAI 2022 年底发布了 ChatGPT 后不久就爆发了 AI 领域的技术热潮，经过一年多的迅速发展和迭代，当前（2024） Agent 已被认为是未来 AI 应用的主流形态。]]></description>
            <content:encoded><![CDATA[<p>自 OpenAI 2022 年底发布了 ChatGPT 后不久就爆发了 AI 领域的技术热潮，经过一年多的迅速发展和迭代，当前（2024） Agent 已被认为是未来 AI 应用的主流形态。</p>
<p>AI 技术在业务场景（产品）中顺利落地，需要工程侧和机器学习领域技术人员的共同配合，作为工程侧技术开发，理解 Agent 技术架构目前来看很有必要。结合去年在业务中利用 LLMs 技术做的一些 AIGC 业务场景探索的经验，以及对现有的 Agent 技术相关的资料的了解，简单谈谈现阶段对 AI Agent 技术的理解。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="什么是-ai-agent">什么是 AI Agent？<a href="https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent#%E4%BB%80%E4%B9%88%E6%98%AF-ai-agent" class="hash-link" aria-label="什么是 AI Agent？的直接链接" title="什么是 AI Agent？的直接链接">​</a></h2>
<p>不管是查看维基百科还是一些学术论文或者技术博客，可以了解到 AI Agent（中文译为智能体）不是一个新的概念，已经出现了相当久。简单的来说，AI Agent 指的是能够<strong>自主感知环境</strong>、并<strong>采取行动</strong>实现目标的智能实体。</p>
<p>根据资料来看，AI Agent 具备一些关键能力：<strong>感知、学习、推理、行动（Sense, learn, reason, act）</strong>。这些其实也是利用 Agent 技术架构解决问题的关键所在。</p>
<p>现有类 ChatGPT 的产品（Claude、Gemini 等）已经被我们广泛的使用，能解决很多文本领域相关的问题，交互形式主要是单轮对话（简单问题）和多轮对话（较复杂问题）。鉴于很多客观原因，其存在一定局限性，因此这类产品目前还难以解决复杂问题、专业领域问题。原因有很多，例如当前大多数大语言模型（LLMs）属于静态模型，无法了解最新的知识，上下文 Token 限制（随着技术迭代已经被缓解）致使涉及到长文本的任务不能被很好的完成，通用模型不了解一些专业领域的知识等等。</p>
<p>那么，为了让 AI 技术能真正落地具备实用性，AI Agent 事实上是<strong>一种解决复杂问题、专业问题的系统性方案</strong>，一种基于 AI 模型构建应用的新范式。而且，现在的大多数 AI Agent 更多是基于大语言模型的 LLMs Agent，因为大语言模型展现出的优秀的自然语言处理（NLP）能力为未来产品应用的人性化交互设计奠定了坚实的基础。</p>
<p>目前业内对 AI Agent 技术架构的简单定义如下图所示：</p>
<p><img decoding="async" loading="lazy" alt="agent-simple-architecture" src="https://wang1212.github.io/assets/images/agent-simple-architecture-4a441227d4d784b8ba2ea5804e7421c3.jpg" width="1131" height="766" class="img_ev3q"></p>
<p>其具备四个关键组件：<strong>代理模型（Agent Model）、工具（Tools）、外部存储（Memory）、规划器（Planner）</strong>。这里仅说明 AI Agent 的核心架构，不再具体去阐述这几部分的作用和具体实现，一方面是目前的技术还在迭代，变化很快，另一方面现有的其它资料针对这些内容有更详细、准确的解释。</p>
<p>让我们换个角度，看看从 ChatGPT 发布至今，大家利用 AI 技术解决问题路径的演变过程，将有助于我们更好地理解这些组件的必要性。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ai-技术的演变">AI 技术的演变<a href="https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent#ai-%E6%8A%80%E6%9C%AF%E7%9A%84%E6%BC%94%E5%8F%98" class="hash-link" aria-label="AI 技术的演变的直接链接" title="AI 技术的演变的直接链接">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="提示词工程">提示词工程<a href="https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent#%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B" class="hash-link" aria-label="提示词工程的直接链接" title="提示词工程的直接链接">​</a></h3>
<p>一开始，ChatGPT 以聊天应用的形式发布，大家都在探讨如何仅通过简单的对话来更好的解决问题，提示词工程（Prompt Engineering）则成为了这一阶段的主角。在此期间，出现了很多非常有用的方案，例如思维链（CoT，Chain of Thought）、思维树（Tree  of Thoughts）等等，这些都是值得去深入了解学习的。</p>
<p>实际上，<strong>提示词工程</strong>技术应该是 AI Agent 技术的关键所在，与模型交互的过程需要设计提示词以得到更符合预期的输出。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="检索增强生成">检索增强生成<a href="https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent#%E6%A3%80%E7%B4%A2%E5%A2%9E%E5%BC%BA%E7%94%9F%E6%88%90" class="hash-link" aria-label="检索增强生成的直接链接" title="检索增强生成的直接链接">​</a></h3>
<p>为了解决大语言模型无法了解新知识（专业领域知识）的问题，<strong>检索增强生成（Retrieval Augmented Generation, RAG）</strong> 技术因为低成本优势成为了最佳方案，核心思路是为大模型构建一个外部的知识数据库，而该知识库可以以极低的成本进行维护和高频更新。存储外部知识文档资料的数据库为向量数据库（Vector database），提供了比传统的文本检索（基于关键字匹配）技术更高效、准确的向量搜索（Vector search）方案。</p>
<p>这也是 AI Agent 架构需要<strong>外部存储组件</strong>的部分原因，<strong>向量数据库、向量搜索，以及嵌入（Embedding）技术</strong>是我们需要了解学习的新技术领域。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="浏览器自动化">浏览器自动化<a href="https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent#%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%8C%96" class="hash-link" aria-label="浏览器自动化的直接链接" title="浏览器自动化的直接链接">​</a></h3>
<p>AI 技术热潮的再一次爆发，让人们又看到了通用人工智能（Artificial General Intelligence, AGI）的可能性，很多用户自发的在探索当前 AI 技术能力的边界。这一阶段，出现了一些利用浏览器自动化工具结合大语言模型完成需要人类介入才能完成的任务，例如人们经常检索信息的操作，打开谷歌搜索、输入查询关键字、上下滚动查看检索结果条目、点击某项结果查看更详细信息等等，更甚的还有在线购物场景案例，打开购物网站、查找商品、加入购物车等等。</p>
<p>以上的案例的思路都是仅利用大语言模型以自然语言的方式进行交互，并将模型输出转换为 GUI 自动化工具的输入来模拟人类交互以完成复杂任务。实际上，GUI 自动化工具在软件测试场景有所应用，考虑到其适用的平台及其它一些限制性因素，这并不算是一个完美的方案。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="webgpt">WebGPT<a href="https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent#webgpt" class="hash-link" aria-label="WebGPT的直接链接" title="WebGPT的直接链接">​</a></h3>
<p>经过一年多时间的发展，ChatGPT 及其同类产品已经在背后做了大量优化，其中通过<strong>接入外部搜索引擎</strong>来解决大语言模型无法了解现实世界最新知识问题的方案已被广泛应用。这一方案正是 OpenAI 在 2022 年发表的有关 WebGPT 的论文中所探讨的内容。</p>
<p>这一阶段，实际上证明了大语言模型可以<strong>通过调用外部工具来完成任务</strong>的技术路径的可行性，也是目前 AI Agent 技术的核心思路。像 OpenAI 发布的 JSON 响应模式、函数调用（Function Call）功能都是大语言模型与外部工具进行交互的典型方案，值得一提的还有 Google 研究团队发布的 ReAct 范式，为大语言模型解决问题提供了新的思路，展示了其规划、推理、行动和根据结果迭代调整的路径模式。</p>
<p>基于以上内容的了解，随着大语言模型的更新和不断出现的新提示词范式，基础模型具备了将大任务拆分为小任务的规划能力，借助外部存储和调用外部工具来解决一些复杂问题已经具备可行性，而这正是 AI Agent 技术架构中几个关键组件的由来。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="案例">案例<a href="https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent#%E6%A1%88%E4%BE%8B" class="hash-link" aria-label="案例的直接链接" title="案例的直接链接">​</a></h2>
<p>截至目前，业内都在大力跟进 AI Agent 技术的发展，目前还远未到技术收敛的时候，因此如何利用 AI Agent 很好地解决复杂系统问题还处于工程化实践探索的阶段。不过，可以通过一些案例了解一下业内的进展情况。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="autogpt">AutoGPT<a href="https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent#autogpt" class="hash-link" aria-label="AutoGPT的直接链接" title="AutoGPT的直接链接">​</a></h3>
<p>AutoGPT 项目是业内较早实践 AI Agent 理念的，其核心思想在官方文档中也有所描述：</p>
<blockquote>
<p>The concept was (and still is) fairly simple: let an LLM decide what to do over and over, while feeding the results of its actions back into the prompt. This allows the program to iteratively and incrementally work towards its objective.</p>
</blockquote>
<p>简单的来说，就是通过类似多轮对话的方式，让大语言模型一遍又一遍地决定要做什么（这个过程中人类可以参与反馈），同时将其操作的结果反馈到提示中，这使得该程序能够迭代地、逐步地​​实现其目标。AutoGPT 项目架构中，组件（Components）是构成 Agent 的基本模块，而组件中的命令（Commands）定义了如何调用外部工具。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="hugginggpt">HuggingGPT<a href="https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent#hugginggpt" class="hash-link" aria-label="HuggingGPT的直接链接" title="HuggingGPT的直接链接">​</a></h3>
<p>微软研究团队提出了一种 HuggingGPT 项目架构，其思路是基于大语言模型处理自然语言的优势使其充当中央控制器（规划器），在每一个子步骤中具体解决问题时则调用更适合该任务的其它机器学习模型（例如翻译、图片生成、视频生成模型），这有点类似于大模型领域的 MoEs 架构。</p>
<p><img decoding="async" loading="lazy" alt="HuggingGPT" src="https://wang1212.github.io/assets/images/HuggingGPT-c1be63c7054754ccdd3c880e5a969db6.jpg" width="1238" height="549" class="img_ev3q"></p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="框架工具">框架工具<a href="https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent#%E6%A1%86%E6%9E%B6%E5%B7%A5%E5%85%B7" class="hash-link" aria-label="框架工具的直接链接" title="框架工具的直接链接">​</a></h2>
<p>虽然 AI Agent 的技术架构较为简单，但具体到真实的业务开发中，需要处理大量的细节问题，而框架工具能帮助我们抽象掉底层细节。</p>
<p>先通过一个最简单的工具来理解 AI Agent 的实现思路。Hugging Face 提供了 JavaScript SDK 包，其中一个为 <code>@huggingface/agents</code>，用来实现最简单的 Agent 工具。先来看看怎么使用：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 1. 提出问题：执行生成代码操作</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> code </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> agent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">generateCode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"Draw a picture of a rubber duck with a top hat, then caption this picture."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// code generated by the LLM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// async function generate() {</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//   const output = await textToImage("rubber duck with a top hat");</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//   message("We generate the duck picture", output);</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//   const caption = await imageToText(output);</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//   message("Now we caption the image", caption);</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//   return output;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 2. 回答问题：执行上一步生成的代码，并得到最终结果</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> messages</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Update</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> agent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">evaluateCode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">code</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">Update</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  message</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 结果可能是文本、文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  data</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Blob</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>该项目的思路是生成代码片段，并通过执行这段代码调用外部工具得到最终结果，<strong>中间产物是代码片段</strong>。而这些代码片段实际上就是定义的外部工具的接口，来看看如何定义一个工具：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> englishToGermanTool</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Tool </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"englishToGerman"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"Takes an input string in english and returns a german translation. "</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  examples</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      prompt</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"translate the string 'hello world' to german"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      code</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">const output = englishToGerman("hello world")</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tools</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"englishToGerman"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      prompt</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token string" style="color:#e3116c">"translate the string 'The quick brown fox jumps over the lazy dog` into german"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      code</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">const output = englishToGerman("The quick brown fox jumps over the lazy dog")</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      tools</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"englishToGerman"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">call</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">input</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> inference</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> data </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> input</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> data </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Input must be a string"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> inference</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">translation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      model</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"t5-base"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      inputs</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> input</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> result</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">translation_text</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>注意上面高亮的行，是中间产物代码片段的不同案例，代表了调用该工具需要执行的代码，<strong>需要关注的是其中仅参数不同</strong>，<code>call</code> 字段则是该工具具体要执行的逻辑的实现，这里是定义了一个翻译工具，通过调用谷歌的 t5 模型来完成翻译任务。</p>
<p>通过 <code>@huggingface/agents</code> 项目我们可以了解到 AI Agent 技术中实现大语言模型与外部工具交互的方式，当然这种方式不仅只有这一种，接下来看看另一个项目 Vercel AI SDK 中定义外部工具的案例。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> result </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">await</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">generateText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  model</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">openai</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'gpt-3.5-turbo'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  tools</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    weather</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">tool</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Get the weather in a location'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      parameters</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">object</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        location</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> z</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">describe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'The location to get the weather for'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token function-variable function" style="color:#d73a49">execute</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> location </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        location</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        temperature</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">72</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">floor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">random</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">21</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  prompt</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'What is the weather in San Francisco and what attractions should I visit?'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>以上定义了一个查询地区温度的工具，与 <code>@huggingface/agents</code> 不同的是将 <code>code</code> 字段换成了 <code>parameters</code>，可以想象的是<strong>中间产物由代码片段变成了 JSON 格式参数对象</strong>，这其实比较符合 OpenAI 的函数调用功能设计。</p>
<p>除此之外，还可以了解的是 <strong>AutoGen</strong> 项目，这是微软团队发布的用来构建多代理架构应用的框架，官方文档比较详细，这里不再赘述。</p>
<p>需要额外提及的是，<strong>LangChain</strong> 是社区中主流的开发 AI 应用的开源框架，也提供了 Agent 开发能力。值得注意的是其对 Agent 模型做了分类，例如支持函数调用的 OpenAI 模型、擅长 XML 处理的 Claude 模型、基于结构化数据的简单模型、基于 ReAct 范式的简单模型等等，这意味着<strong>基础模型提供的能力不同，开发 Agent 时要处理的细节也不同</strong>，这是工程化开发中需要关注的。</p>
<p>综上，是现阶段对 AI Agent 的简单理解，主要关注的是其核心架构和技术原理，通过一些业内案例和框架工具了解部分技术实现细节。该领域的技术还在快速发展中，需要继续关注后续发展以更深入的了解产业落地情况和实践中遇到的问题。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="参考资料">参考资料<a href="https://wang1212.github.io/2024/03/22/computer-technology/ai/llm/agent#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Intelligent_agent" target="_blank" rel="noopener noreferrer">Intelligent agent</a></li>
<li><a href="https://aws.amazon.com/what-is/ai-agents/" target="_blank" rel="noopener noreferrer">What are AI Agents?</a></li>
<li><a href="https://www.leewayhertz.com/ai-agents/" target="_blank" rel="noopener noreferrer">Ai agents driving the next wave of digital transformation</a></li>
<li><a href="https://huggingface.co/blog/agents-js" target="_blank" rel="noopener noreferrer">Introducing Agents.js: Give tools to your LLMs using JavaScript</a></li>
<li><a href="https://www.latent.space/p/agents" target="_blank" rel="noopener noreferrer">The Anatomy of Autonomy: Why Agents are the next AI Killer App after ChatGPT</a></li>
<li><a href="https://lilianweng.github.io/posts/2023-06-23-agent/" target="_blank" rel="noopener noreferrer">LLM Powered Autonomous Agents</a></li>
<li><a href="https://www.promptingguide.ai/research/llm-agents" target="_blank" rel="noopener noreferrer">LLM Agents</a></li>
<li><a href="https://arxiv.org/abs/2404.11584v1" target="_blank" rel="noopener noreferrer">The Landscape of Emerging AI Agent Architectures for Reasoning, Planning, and Tool Calling: A Survey</a></li>
<li><a href="https://arxiv.org/html/2404.10981v1" target="_blank" rel="noopener noreferrer">A Survey on Retrieval-Augmented Text Generation for Large Language Models</a></li>
<li><a href="https://www.adept.ai/blog/act-1" target="_blank" rel="noopener noreferrer">ACT-1: Transformer for Actions</a></li>
<li><a href="https://openai.com/index/webgpt/" target="_blank" rel="noopener noreferrer">WebGPT: Improving the factual accuracy of language models through web browsing</a></li>
<li><a href="https://react-lm.github.io/" target="_blank" rel="noopener noreferrer">ReAct: Synergizing Reasoning and Acting in Language Models</a></li>
<li><a href="https://docs.agpt.co/autogpt/" target="_blank" rel="noopener noreferrer">AutoGPT Agent</a></li>
<li><a href="https://ar5iv.labs.arxiv.org/html/2303.17580" target="_blank" rel="noopener noreferrer">HuggingGPT: Solving AI Tasks with ChatGPT and its Friends in Hugging Face</a></li>
<li><a href="https://sdk.vercel.ai/docs/ai-sdk-core/tools-and-tool-calling" target="_blank" rel="noopener noreferrer">Vercel AI SDK: Tools and Tool Calling</a></li>
<li><a href="https://js.langchain.com/docs/modules/agents/agent_types/" target="_blank" rel="noopener noreferrer">LangChain: Agent Types</a></li>
</ul>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>计算机技术</category>
            <category>AI</category>
            <category>LLMs</category>
            <category>Agent</category>
        </item>
        <item>
            <title><![CDATA[精选资源：大语言模型（LLMs）与 Agent 应用]]></title>
            <link>https://wang1212.github.io/2024/03/01/awesome/llm</link>
            <guid>https://wang1212.github.io/2024/03/01/awesome/llm</guid>
            <pubDate>Fri, 01 Mar 2024 14:47:00 GMT</pubDate>
            <description><![CDATA[精选资源集合，有关大语言模型（LLMs）与 Agent 应用技术的资讯。]]></description>
            <content:encoded><![CDATA[<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>精选资源</div><div class="admonitionContent_BuS1"><p>这是一个系列，收集不同领域相关的精选（高价值）内容，包括深入分析文章、视频、工具等。</p><p><em>探索一项新兴技术出现的背景、动机，尤其是其背后的设计哲学，更甚的是在不断的版本演进过程中遇到了什么问题，产生了什么思考，以及是如何决策并得到最优解。</em></p></div></div>
<p>自从 2022 年底 <a href="https://openai.com/blog/chatgpt" target="_blank" rel="noopener noreferrer">OpenAI 发布 ChatGPT</a> 以来，过去的一年（2023）AI 领域再度爆发热潮，这一次<strong>大语言模型（Large Language Model, LLMs）</strong> 技术成为大家关注的核心。了解相关技术，探索其背后的技术原理和工程化技巧，为构建 AI 应用做好准备。</p>
<p>首先，什么是大语言模型（LLMs）？</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>LLM</div><div class="admonitionContent_BuS1"><p>维基百科：</p><ul>
<li><a href="https://en.wikipedia.org/wiki/Large_language_model" target="_blank" rel="noopener noreferrer">Large language model</a></li>
</ul><p>偏技术性的解释：</p><ul>
<li><a href="https://developers.google.com/machine-learning/resources/intro-llms" target="_blank" rel="noopener noreferrer">Introduction to Large Language Models</a></li>
<li><a href="https://www.nvidia.com/en-us/glossary/large-language-models/" target="_blank" rel="noopener noreferrer">Large Language Models Explained</a></li>
<li><a href="https://www.elastic.co/what-is/large-language-models/" target="_blank" rel="noopener noreferrer">What is a large language model (LLM)?</a></li>
</ul><p>更详细的解释：</p><ul>
<li><a href="https://www.understandingai.org/p/large-language-models-explained-with" target="_blank" rel="noopener noreferrer">Large language models, explained with a minimum of math and jargon</a></li>
</ul></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="提示词工程">提示词工程<a href="https://wang1212.github.io/2024/03/01/awesome/llm#%E6%8F%90%E7%A4%BA%E8%AF%8D%E5%B7%A5%E7%A8%8B" class="hash-link" aria-label="提示词工程的直接链接" title="提示词工程的直接链接">​</a></h2>
<p>快速上手使用类 ChatGPT 应用需要了解<strong>提示词工程（Prompt Engineering）</strong> 这一概念，通过不断的调整提示词来获得更好更接近预期的结果。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Prompt Engineering</div><div class="admonitionContent_BuS1"><p>维基百科：</p><ul>
<li><a href="https://en.wikipedia.org/wiki/Prompt_engineering" target="_blank" rel="noopener noreferrer">Prompt engineering</a></li>
</ul><p>学习提示词工程：</p><ul>
<li><a href="https://www.promptingguide.ai/" target="_blank" rel="noopener noreferrer">Prompt Engineering Guide</a></li>
<li><a href="https://developers.google.com/machine-learning/resources/prompt-eng" target="_blank" rel="noopener noreferrer">Prompt Engineering for Generative AI</a>
<ul>
<li><a href="https://services.google.com/fh/files/misc/gemini-for-google-workspace-prompting-guide-101.pdf" target="_blank" rel="noopener noreferrer">Prompting guide 101</a></li>
</ul>
</li>
<li><a href="https://platform.openai.com/docs/guides/prompt-engineering" target="_blank" rel="noopener noreferrer">Prompt engineering</a></li>
</ul><p>社区优秀的提示词模板案例：</p><ul>
<li><a href="https://prompthero.com/" target="_blank" rel="noopener noreferrer">PromptHero</a></li>
</ul></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="大模型与机器学习">大模型与机器学习<a href="https://wang1212.github.io/2024/03/01/awesome/llm#%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%B8%8E%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0" class="hash-link" aria-label="大模型与机器学习的直接链接" title="大模型与机器学习的直接链接">​</a></h2>
<p>大语言模型背后是<strong>机器学习（Machine Learning）</strong> 领域的技术，为了更好的理解其技术原理，需要补充一些前置概念知识。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="sota">SOTA<a href="https://wang1212.github.io/2024/03/01/awesome/llm#sota" class="hash-link" aria-label="SOTA的直接链接" title="SOTA的直接链接">​</a></h3>
<p>如何评估一个模型的好坏，State-of-the-Art(SOTA) 模型？</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>SOTA</div><div class="admonitionContent_BuS1"><ul>
<li><a href="https://www.e2enetworks.com/blog/what-is-sota-in-artificial-intelligence" target="_blank" rel="noopener noreferrer">What is SOTA in Artificial Intelligence?</a></li>
</ul></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="scaling-law">Scaling Law<a href="https://wang1212.github.io/2024/03/01/awesome/llm#scaling-law" class="hash-link" aria-label="Scaling Law的直接链接" title="Scaling Law的直接链接">​</a></h3>
<p>Scaling Law 是基于模型训练方面的实践经验的总结，代表<strong>损失（模型性能）与模型参数数量、数据集大小和用于训练的计算量呈幂律（power-law）关系</strong>，为大模型的设计和训练提供了理论指导。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Scaling Law</div><div class="admonitionContent_BuS1"><p>维基百科：</p><ul>
<li><a href="https://en.wikipedia.org/wiki/Neural_scaling_law" target="_blank" rel="noopener noreferrer">Neural scaling law</a></li>
</ul><p>业界论文：</p><ul>
<li><a href="https://arxiv.org/abs/2001.08361" target="_blank" rel="noopener noreferrer">Scaling Laws for Neural Language Models</a></li>
</ul></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="embeddings">Embeddings<a href="https://wang1212.github.io/2024/03/01/awesome/llm#embeddings" class="hash-link" aria-label="Embeddings的直接链接" title="Embeddings的直接链接">​</a></h3>
<p>机器通过<strong>嵌入（Embeddings）</strong> 技术来理解高维数据，例如文本、图像、音频、视频等等。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Embeddings</div><div class="admonitionContent_BuS1"><p>维基百科：</p><ul>
<li><a href="https://en.wikipedia.org/wiki/Word_embedding" target="_blank" rel="noopener noreferrer">Word embedding</a></li>
</ul><p>偏技术性的解释：</p><ul>
<li><a href="https://aws.amazon.com/what-is/embeddings-in-machine-learning/" target="_blank" rel="noopener noreferrer">What Are Embeddings In Machine Learning?</a></li>
<li><a href="https://developers.google.com/machine-learning/crash-course/embeddings/video-lecture" target="_blank" rel="noopener noreferrer">Embeddings</a></li>
</ul><p>试一试：</p><ul>
<li><a href="https://huggingface.co/blog/getting-started-with-embeddings" target="_blank" rel="noopener noreferrer">Getting Started With Embeddings</a></li>
</ul></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="transformer">Transformer<a href="https://wang1212.github.io/2024/03/01/awesome/llm#transformer" class="hash-link" aria-label="Transformer的直接链接" title="Transformer的直接链接">​</a></h3>
<p>目前，大语言模型基本上都属于 Transformer 模型，而 <strong>Transformer 是一种基于注意力机制的神经网络（neural network）架构</strong>，它在自然语言处理（NLP）任务中表现出色。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Transformer</div><div class="admonitionContent_BuS1"><p>维基百科：</p><ul>
<li><a href="https://en.wikipedia.org/wiki/Transformer_(deep_learning_architecture)" target="_blank" rel="noopener noreferrer">Transformer (deep learning architecture)</a></li>
</ul><p>更好理解一点的解释：</p><ul>
<li><a href="https://blogs.nvidia.com/blog/what-is-a-transformer-model/" target="_blank" rel="noopener noreferrer">What Is a Transformer Model?</a></li>
<li><a href="https://ig.ft.com/generative-ai/" target="_blank" rel="noopener noreferrer">Generative AI exists because of the transformer</a></li>
</ul><p>偏技术性的解释：</p><ul>
<li><a href="https://huggingface.co/blog/andmholm/what-is-a-transformer" target="_blank" rel="noopener noreferrer">What is a Transformer?</a></li>
<li><a href="https://cameronrwolfe.substack.com/p/decoder-only-transformers-the-workhorse" target="_blank" rel="noopener noreferrer">Decoder-Only Transformers: The Workhorse of Generative LLMs</a></li>
</ul><p>业界论文：</p><ul>
<li><a href="https://arxiv.org/abs/1706.03762" target="_blank" rel="noopener noreferrer">Attention Is All You Need</a></li>
</ul></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="fine-tune">Fine-tune<a href="https://wang1212.github.io/2024/03/01/awesome/llm#fine-tune" class="hash-link" aria-label="Fine-tune的直接链接" title="Fine-tune的直接链接">​</a></h3>
<p>大语言模型通常都是基于大量的数据集进行训练的预训练模型（Pre-trained models），出于保证合规的目的，为了过滤掉一些有害信息，通常都会对模型做进一步微调（fine-tune），以让其生成更符合预期的结果。同时，<strong>微调是基于通用模型训练专有模型的重要方式</strong>。</p>
<p>微调的技术有很多，列举一些比较常见的。</p>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="sft">SFT<a href="https://wang1212.github.io/2024/03/01/awesome/llm#sft" class="hash-link" aria-label="SFT的直接链接" title="SFT的直接链接">​</a></h4>
<p>通常，语言模型的初始训练是无监督的，但微调是有监督的。<strong>有监督微调（Supervised fine-tuning）意味着使用标记数据更新预先训练的语言模型来完成特定任务</strong>，所使用的数据已提前检查过。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>SFT</div><div class="admonitionContent_BuS1"><ul>
<li><a href="https://klu.ai/glossary/supervised-fine-tuning" target="_blank" rel="noopener noreferrer">What is supervised fine-tuning?</a></li>
<li><a href="https://www.superannotate.com/blog/llm-fine-tuning" target="_blank" rel="noopener noreferrer">Fine-tuning large language models (LLMs) in 2024</a></li>
<li><a href="https://www.run.ai/guides/generative-ai/lora-fine-tuning" target="_blank" rel="noopener noreferrer">Understanding LLM Fine Tuning with LoRA</a></li>
</ul><p>偏技术性的：</p><ul>
<li><a href="https://huggingface.co/blog/peft" target="_blank" rel="noopener noreferrer">PEFT: Parameter-Efficient Fine-Tuning of Billion-Scale Models on Low-Resource Hardware</a></li>
</ul><p>一种特殊的微调技术，<strong>指令调优（Instruction Tuning）</strong>：</p><ul>
<li><a href="https://www.ibm.com/topics/instruction-tuning" target="_blank" rel="noopener noreferrer">What is instruction tuning?</a></li>
</ul><p>业界论文：</p><ul>
<li><a href="https://arxiv.org/abs/2106.09685" target="_blank" rel="noopener noreferrer">LoRA: Low-Rank Adaptation of Large Language Models</a></li>
<li><a href="https://arxiv.org/abs/2308.10792v5" target="_blank" rel="noopener noreferrer">Instruction Tuning for Large Language Models: A Survey</a></li>
</ul></div></div>
<h4 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rlhf">RLHF<a href="https://wang1212.github.io/2024/03/01/awesome/llm#rlhf" class="hash-link" aria-label="RLHF的直接链接" title="RLHF的直接链接">​</a></h4>
<p>通过训练奖励模型（reward model），以<strong>强化学习（Reinforcement Learning）</strong> 的方式对语言模型做进一步的微调是 ChatGPT 获得成功的重要因素。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>RLHF</div><div class="admonitionContent_BuS1"><p>维基百科：</p><ul>
<li><a href="https://en.wikipedia.org/wiki/Reinforcement_learning_from_human_feedback" target="_blank" rel="noopener noreferrer">Reinforcement learning from human feedback</a></li>
</ul><p>偏技术性的解释：</p><ul>
<li><a href="https://huggingface.co/blog/rlhf" target="_blank" rel="noopener noreferrer">Illustrating Reinforcement Learning from Human Feedback (RLHF)</a></li>
</ul></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="moes">MoEs<a href="https://wang1212.github.io/2024/03/01/awesome/llm#moes" class="hash-link" aria-label="MoEs的直接链接" title="MoEs的直接链接">​</a></h3>
<p>大部分大语言模型都属于密集模型（dense models），参数量级越大计算（推理）成本越高，速度越慢，消耗的硬件内存也更大，为了应对这类问题，出现了一种新的模型架构，即<strong>混合专家（Mixture of Experts, MoEs）架构</strong>。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>MoEs</div><div class="admonitionContent_BuS1"><p>维基百科：</p><ul>
<li><a href="https://en.wikipedia.org/wiki/Mixture_of_experts" target="_blank" rel="noopener noreferrer">Mixture of experts</a></li>
</ul><p>偏技术性的解释：</p><ul>
<li><a href="https://huggingface.co/blog/moe" target="_blank" rel="noopener noreferrer">Mixture of Experts Explained</a></li>
<li><a href="https://developer.nvidia.com/blog/applying-mixture-of-experts-in-llm-architectures/" target="_blank" rel="noopener noreferrer">Applying Mixture of Experts in LLM Architectures</a></li>
<li><a href="https://cameronrwolfe.substack.com/p/moe-llms" target="_blank" rel="noopener noreferrer">Mixture-of-Experts (MoE) LLMs</a>
<ul>
<li><a href="https://cameronrwolfe.substack.com/p/conditional-computation-the-birth" target="_blank" rel="noopener noreferrer">Mixture-of-Experts (MoE): The Birth and Rise of Conditional Computation</a></li>
</ul>
</li>
</ul><p>业界论文：</p><ul>
<li><a href="https://arxiv.org/abs/2404.05567" target="_blank" rel="noopener noreferrer">Dense Training, Sparse Inference: Rethinking Training of Mixture-of-Experts Language Models</a></li>
</ul></div></div>
<p>最后，基于以上这些概念，可以了解下 ChatGPT 的工作原理。</p>
<blockquote>
<p><a href="https://www.assemblyai.com/blog/how-chatgpt-actually-works/" target="_blank" rel="noopener noreferrer">How ChatGPT actually works</a></p>
</blockquote>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="应用技术">应用技术<a href="https://wang1212.github.io/2024/03/01/awesome/llm#%E5%BA%94%E7%94%A8%E6%8A%80%E6%9C%AF" class="hash-link" aria-label="应用技术的直接链接" title="应用技术的直接链接">​</a></h2>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rag">RAG<a href="https://wang1212.github.io/2024/03/01/awesome/llm#rag" class="hash-link" aria-label="RAG的直接链接" title="RAG的直接链接">​</a></h3>
<p><strong>检索增强生成（Retrieval-Augmented Generation, RAG）</strong> 是一种利用从外部来源获取的事实来提高生成式 AI 模型的准确性和可靠性的技术。简单的来说，现有的大语言模型基于静态数据进行预训练，在一些对数据实时性有要求的特定场景中无法获取最新数据信息，通过 RAG 技术则可以弥补这个缺陷，通过引入外部实时数据库的方式来增强大语言模型对实时数据的响应能力。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>RAG</div><div class="admonitionContent_BuS1"><ul>
<li><a href="https://blogs.nvidia.com/blog/what-is-retrieval-augmented-generation/" target="_blank" rel="noopener noreferrer">What Is Retrieval-Augmented Generation, aka RAG?</a></li>
</ul><p>偏技术性的解释：</p><ul>
<li><a href="https://stackoverflow.blog/2023/10/18/retrieval-augmented-generation-keeping-llms-relevant-and-current/" target="_blank" rel="noopener noreferrer">Retrieval augmented generation: Keeping LLMs relevant and current</a></li>
</ul><p>业界论文：</p><ul>
<li><a href="https://arxiv.org/abs/2312.10997" target="_blank" rel="noopener noreferrer">Retrieval-Augmented Generation for Large Language Models: A Survey</a></li>
<li><a href="https://arxiv.org/abs/2404.10981v1" target="_blank" rel="noopener noreferrer">A Survey on Retrieval-Augmented Text Generation for Large Language Models</a></li>
</ul></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="tools--plugins">Tools &amp; Plugins<a href="https://wang1212.github.io/2024/03/01/awesome/llm#tools--plugins" class="hash-link" aria-label="Tools &amp; Plugins的直接链接" title="Tools &amp; Plugins的直接链接">​</a></h3>
<p>大模型预训练的成本很高，通常不会进行多次，这也出现一个问题，即模型本身能力受预训练数据的限制，为了弥补这一缺陷，尝试让模型学会调用外部工具来解决问题，即为模型开发插件。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Tools &amp; Plugins</div><div class="admonitionContent_BuS1"><ul>
<li><a href="https://cameronrwolfe.substack.com/p/teaching-language-models-to-use-tools" target="_blank" rel="noopener noreferrer">Teaching Language Models to use Tools</a></li>
</ul></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="agent">Agent<a href="https://wang1212.github.io/2024/03/01/awesome/llm#agent" class="hash-link" aria-label="Agent的直接链接" title="Agent的直接链接">​</a></h3>
<p><strong>人工智能代理（AI Agent）</strong> 是一种构建 AI 应用的架构，相比于仅利用 RAG 技术能更好的解决更具体的问题，也是目前 AI 应用发展的重要趋势。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>Agent</div><div class="admonitionContent_BuS1"><p>维基百科：</p><ul>
<li><a href="https://en.wikipedia.org/wiki/Intelligent_agent" target="_blank" rel="noopener noreferrer">Intelligent agent</a></li>
</ul><p>一些更详细的解释：</p><ul>
<li><a href="https://aws.amazon.com/what-is/ai-agents/" target="_blank" rel="noopener noreferrer">What are AI Agents?</a></li>
<li><a href="https://www.leewayhertz.com/ai-agents/" target="_blank" rel="noopener noreferrer">Ai agents driving the next wave of digital transformation</a></li>
</ul><p>偏技术性的：</p><ul>
<li><a href="https://huggingface.co/blog/agents-js" target="_blank" rel="noopener noreferrer">Introducing Agents.js: Give tools to your LLMs using JavaScript</a></li>
<li><a href="https://www.latent.space/p/agents" target="_blank" rel="noopener noreferrer">The Anatomy of Autonomy: Why Agents are the next AI Killer App after ChatGPT</a></li>
<li><a href="https://lilianweng.github.io/posts/2023-06-23-agent/" target="_blank" rel="noopener noreferrer">LLM Powered Autonomous Agents</a></li>
</ul><p>业界论文：</p><ul>
<li><a href="https://arxiv.org/abs/2404.11584v1" target="_blank" rel="noopener noreferrer">The Landscape of Emerging AI Agent Architectures for Reasoning, Planning, and Tool Calling: A Survey</a></li>
</ul></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="model-context-protocol">Model Context Protocol<a href="https://wang1212.github.io/2024/03/01/awesome/llm#model-context-protocol" class="hash-link" aria-label="Model Context Protocol的直接链接" title="Model Context Protocol的直接链接">​</a></h3>
<p>Model Context Protocol（MCP）是被 <a href="https://www.anthropic.com/news/model-context-protocol" target="_blank" rel="noopener noreferrer">Anthropic 提出的一种 AI 应用与外部数据源交互的开源标准协议</a>，目的更好地构建以大模型为中心的，结合多种外部数据源与工具能力的 AI 应用，目前已经成为开源社区项目。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>MCP</div><div class="admonitionContent_BuS1"><ul>
<li><a href="https://modelcontextprotocol.io/" target="_blank" rel="noopener noreferrer">Model Context Protocol Introduction</a></li>
</ul></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="agent2agent-protocol">Agent2Agent Protocol<a href="https://wang1212.github.io/2024/03/01/awesome/llm#agent2agent-protocol" class="hash-link" aria-label="Agent2Agent Protocol的直接链接" title="Agent2Agent Protocol的直接链接">​</a></h3>
<p>Agent2Agent Protocol（A2A）是由 <a href="https://developers.googleblog.com/en/a2a-a-new-era-of-agent-interoperability/" target="_blank" rel="noopener noreferrer">Google 联合社区发布 Agent 应用协作的标准通信协议</a>，目的是与 MCP 互为补充，为多智能体协作提供社区标准。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>A2A</div><div class="admonitionContent_BuS1"><ul>
<li><a href="https://google.github.io/A2A/" target="_blank" rel="noopener noreferrer">Agent2Agent Protocol</a></li>
</ul></div></div>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="开发框架">开发框架<a href="https://wang1212.github.io/2024/03/01/awesome/llm#%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6" class="hash-link" aria-label="开发框架的直接链接" title="开发框架的直接链接">​</a></h3>
<p>一步一步开始构建 AI 应用可能是有趣的，但也是枯燥无聊的，且需要耗费大量时间，已经有大量的相关框架工具为我们抽象了低级别的复杂细节。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>开发框架</div><div class="admonitionContent_BuS1"><ul>
<li><a href="https://www.langchain.com/langchain" target="_blank" rel="noopener noreferrer">LangChain</a></li>
<li><a href="https://haystack.deepset.ai/" target="_blank" rel="noopener noreferrer">Haystack</a></li>
<li><a href="https://metaflow.org/" target="_blank" rel="noopener noreferrer">Metaflow</a></li>
<li><a href="https://mastra.ai/" target="_blank" rel="noopener noreferrer">mastra</a></li>
<li><a href="https://openai.github.io/openai-agents-python/" target="_blank" rel="noopener noreferrer">OpenAI Agents SDK</a></li>
</ul><p>聊天应用：</p><ul>
<li><a href="https://github.com/lobehub/lobe-chat" target="_blank" rel="noopener noreferrer">Lobe Chat</a></li>
<li><a href="https://github.com/mckaywrigley/chatbot-ui" target="_blank" rel="noopener noreferrer">Chatbot UI</a></li>
</ul><p>RAG 应用：</p><ul>
<li><a href="https://www.llamaindex.ai/" target="_blank" rel="noopener noreferrer">LlamaIndex</a></li>
<li><a href="https://github.com/embedchain/embedchain" target="_blank" rel="noopener noreferrer">Embedchain</a></li>
</ul><p>低代码应用：</p><ul>
<li><a href="https://flowiseai.com/" target="_blank" rel="noopener noreferrer">FlowiseAI</a></li>
</ul><p>Agent 应用：</p><ul>
<li><a href="https://huggingface.co/blog/agents-js" target="_blank" rel="noopener noreferrer">@huggingface/agents</a></li>
<li><a href="https://microsoft.github.io/autogen/" target="_blank" rel="noopener noreferrer">AutoGen</a></li>
<li><a href="https://github.com/TransformerOptimus/SuperAGI" target="_blank" rel="noopener noreferrer">SuperAGI</a></li>
<li><a href="https://langroid.github.io/langroid/" target="_blank" rel="noopener noreferrer">Langroid</a></li>
</ul></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="社区平台">社区平台<a href="https://wang1212.github.io/2024/03/01/awesome/llm#%E7%A4%BE%E5%8C%BA%E5%B9%B3%E5%8F%B0" class="hash-link" aria-label="社区平台的直接链接" title="社区平台的直接链接">​</a></h2>
<p>要了解大语言模型技术发展的趋势，或者寻找相关技术资源，应该对常见的一些社区平台要有所了解。</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>社区平台</div><div class="admonitionContent_BuS1"><ul>
<li><a href="https://huggingface.co/" target="_blank" rel="noopener noreferrer">Hugging Face</a></li>
<li><a href="https://openai.com/research/overview" target="_blank" rel="noopener noreferrer">OpenAI Research</a></li>
<li><a href="https://llama.meta.com/" target="_blank" rel="noopener noreferrer">Meta Llama</a></li>
<li><a href="https://deepmind.google/technologies/gemini/#introduction" target="_blank" rel="noopener noreferrer">Google Gemini</a></li>
<li><a href="https://www.anthropic.com/" target="_blank" rel="noopener noreferrer">Anthropic Claude</a></li>
</ul></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="其它">其它<a href="https://wang1212.github.io/2024/03/01/awesome/llm#%E5%85%B6%E5%AE%83" class="hash-link" aria-label="其它的直接链接" title="其它的直接链接">​</a></h2>
<ul>
<li><a href="https://www.latent.space/p/2025-papers" target="_blank" rel="noopener noreferrer">The 2025 AI Engineer Reading List</a></li>
<li><a href="https://a16z.com/ai-canon/" target="_blank" rel="noopener noreferrer">AI Canon</a></li>
<li><a href="https://a16z.com/ai/" target="_blank" rel="noopener noreferrer">AI + a16z</a></li>
<li><a href="https://a16z.com/100-gen-ai-apps/" target="_blank" rel="noopener noreferrer">The Top 100 Gen AI Apps</a></li>
</ul>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>精选资源</category>
            <category>计算机技术</category>
            <category>AI</category>
            <category>LLMs</category>
            <category>Agent</category>
        </item>
        <item>
            <title><![CDATA[AIGC 在可视化生成场景的探索路径]]></title>
            <link>https://wang1212.github.io/2024/01/22/computer-technology/ai/aigc-data-vis</link>
            <guid>https://wang1212.github.io/2024/01/22/computer-technology/ai/aigc-data-vis</guid>
            <pubDate>Mon, 22 Jan 2024 16:51:00 GMT</pubDate>
            <description><![CDATA[记录一下自 2023 年中以来大概半年多时间中结合 AIGC 技术在可视化自动生成场景的探索尝试和实践经验。]]></description>
            <content:encoded><![CDATA[<p>2022 年接近年底时 OpenAI 发布了 ChatGPT3，实际上一开始业界还没有太大的反响，但在过了大概一个月即 12 月的时候，ChatGPT3 突然引爆了 AI 技术发展新的潮流，业内大部分企业与开发者都开始讨论 OpenAI 与它的产品 ChatGPT3，紧接着 2023 年则成了 “AI 元年”，业内都开始积极探索如何将这种对话聊天 AI 机器人的技术能力结合到自己的业务和产品中去，实现“智能化升级”，抓住下一个风口。</p>
<p>这里则是记录一下自 2023 年中以来大概半年多时间中结合 AIGC 技术在可视化自动生成场景进行的探索尝试和实践经验。通过对这段经历的回顾也能认识到对目前 AI 技术的认知变化，对未来更好的开发 AI 应用产品有一定的借鉴意义。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="可视化自动生成">可视化自动生成<a href="https://wang1212.github.io/2024/01/22/computer-technology/ai/aigc-data-vis#%E5%8F%AF%E8%A7%86%E5%8C%96%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90" class="hash-link" aria-label="可视化自动生成的直接链接" title="可视化自动生成的直接链接">​</a></h2>
<p>可视化图表可以直观的呈现数据集的趋势、分布等特征，人们因此可以更好的理解数据集。但是，对于普通用户来说，要完成数据分析是具有一定挑战性的，现有的工具软件也一直在通过各种方式降低用户门槛。</p>
<p>可视化自动生成正是为了解决上述问题的一个研究领域，业内像 Vega 推出了 <a href="https://vega.github.io/voyager/" target="_blank" rel="noopener noreferrer">Voyager</a> 项目来期望实现这一目标，通过图表推荐和数据洞察来尽可能自动化的完成数据分析任务。</p>
<p>现在，结合 AI 技术实现可视化自动生成和数据洞察是一次新的机会，像 <a href="https://www.tableau.com/" target="_blank" rel="noopener noreferrer">Tableau</a>、<a href="https://kanaries.net/rath" target="_blank" rel="noopener noreferrer">Rath</a>、<a href="https://www.highcharts.com/chat/gpt/" target="_blank" rel="noopener noreferrer">Highcharts</a> 等等都在积极进行探索尝试。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="探索路径">探索路径<a href="https://wang1212.github.io/2024/01/22/computer-technology/ai/aigc-data-vis#%E6%8E%A2%E7%B4%A2%E8%B7%AF%E5%BE%84" class="hash-link" aria-label="探索路径的直接链接" title="探索路径的直接链接">​</a></h2>
<p>下面，来简单回顾一下我们结合 AI 技术（大语言模型）和业务做的一些可视化生成场景的探索和实践结果，通过探索路径看看最终是如何成功将 AI 技术融合到可视化生成业务中的，另一方面也进一步了解目前 AI 技术的局限性。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="生成可视化图表代码">生成可视化图表代码<a href="https://wang1212.github.io/2024/01/22/computer-technology/ai/aigc-data-vis#%E7%94%9F%E6%88%90%E5%8F%AF%E8%A7%86%E5%8C%96%E5%9B%BE%E8%A1%A8%E4%BB%A3%E7%A0%81" class="hash-link" aria-label="生成可视化图表代码的直接链接" title="生成可视化图表代码的直接链接">​</a></h3>
<p>像 ChatGPT3 这些同类产品展现出的 AI 生成文本的卓越能力让人们非常感兴趣，另外对于开发者来说代码本质上也是以文本形式编辑和保存，这就出现了 AI 生成文本的一个很好的应用场景，即代码生成，事实上社区也是这样发展的，出现了很多用于完成代码生成的专家大语言模型，微软也推出了 Github Copilot 产品用于 AI 辅助编码。</p>
<p>基于这样一个背景，<strong>通过自然语言对话直接生成可视化图表代码来渲染可视化效果是一个非常理想的技术路径</strong>，这也是我们开始探索的起点。</p>
<p>我们选择了资讯这一业务场景，由于其满足流量高、更新频率高、时效性强、新闻资讯以纯文本形式呈现缺乏表现力、可视化质量要求不高等特点，非常适合做 AIGC 可视化的落地应用。为此，我们首先筛选出一批适合生成可视化图表的资讯数据集，基于 OpenAI 提供的 API 服务，通过提示词工程的方式来进行技术验证。</p>
<p>一开始，我们先验证其代码生成能力，即<strong>在上下文中给出图表模板代码和资讯文本，然后给出让其根据模版代码和资讯文本中的相关数据生成可视化代码的指令。</strong></p>
<p>很显然，我们遇到了大家都会遇到的问题，即大模型存在严重的“幻觉”，通过调整一些参数（例如 temperature）虽然能保证输出的稳定性，但依然无法确保准确性。另一方面，考虑到我们使用的是私有代码，尝试用一些开源项目（例如 echarts、chart.js）来进行验证，效果要好很多，这就意味着<strong>模型训练过程中提供私有代码库相关的训练集效果会大幅改善。</strong></p>
<p><strong>一次解决一个复杂的问题显然对 AI 模型来说有很大的难度（实际上对于人类也是如此），我们尝试将任务进行拆分，分步与 AI 模型交互来解决代码生成的问题</strong>。将其分解为以下几个步骤：</p>
<ul>
<li>提取数据集</li>
<li>图表推荐</li>
<li>代码生成</li>
<li>渲染可视化效果</li>
</ul>
<p>数据的准确性是用户的核心关注点，因此将数据集提取作为单独一步是非常有必要的；不同的数据集特征维度数量不同，可用于可视化呈现的形式也具有差异，提供默认的几类图表类型和相关信息，让 AI 模型结合资讯内容完成意图分析以推荐适合的可视化图表类型；最后一步，将数据集和对应类型图表的模板代码作为上下文提供给 AI 模型让其生成最终的代码。</p>
<p>从最终的结果来看，分步解决问题的确要比一次完成任务效果好很多，重要的是在每一步的结果产生后，我们可以<strong>利用工程化手段将一些错误合理的修复掉</strong>。当然，这里面有一个可能让很多人感觉疑惑的问题，即第三步的必要性，拥有数据集和图表类型后，为什么不能通过工程化手段直接生成最终代码？这是由于现有图表库的代码设计中不同类型图表的数据结构和解析逻辑不一致，导致工程侧难以实现该目标。另一方面，这里面也引申出一个很重要的问题，即要<strong>实现工程代码与 AI 模型交互的前提是 AI 模型的输出必须结构化（即代码可解析）</strong>，这也是为何 OpenAI 后来推出了 <a href="https://platform.openai.com/docs/guides/text-generation/json-mode" target="_blank" rel="noopener noreferrer">JSON Mode</a> 特性的原因，当然社区对此问题已经有大量的讨论，可以通过提示词工程和轮询的方式来解决。</p>
<p>虽然效果已经得到改善，但仍然存在几个致命的缺陷导致这套方案无法落地在真实业务场景中：AI 模型对数据数值是敏感的，比常规文本更容易出现幻觉，这也就导致数据无法确保百分百准确，而这是数据可视化的关键；生成的代码可成功执行的概率低于 50%，远低于目标，虽然可能通过私有代码库训练集微调的方式来改善，但根据一些开源项目的对比验证结果来看，直接生成代码的技术路径似乎并不可行。</p>
<p>结合以上分析，基于文本直接生成图表代码的方案宣告失败，但这一过程中我们积累了大量的宝贵经验。</p>
<p>期间，我们也在积极关注社区在这一领域的进展，发现有很多项目在做类似的事情，经过简单尝试发现效果差不多；还有一部分项目基于已有的数据集和上下文通过图表推荐的方式生成代码实现可视化生成的目标。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="图表推荐和生成代码">图表推荐和生成代码<a href="https://wang1212.github.io/2024/01/22/computer-technology/ai/aigc-data-vis#%E5%9B%BE%E8%A1%A8%E6%8E%A8%E8%8D%90%E5%92%8C%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81" class="hash-link" aria-label="图表推荐和生成代码的直接链接" title="图表推荐和生成代码的直接链接">​</a></h3>
<p>经过分析，我们发现从文本中提取数据集实际上是不必要的，通常的场景是用户已有数据集的情况下通过描述需求来进行数据分析。另一方面，通过向资讯业务的同事深入了解后才知道很多有丰富数据的资讯新闻实际上是由机器人生成的，即先有数据集才有的资讯新闻内容。</p>
<p>据此，我们开始新方案的尝试，即<strong>结合标准的表格数据集和文本描述完成图表推荐再生成图表代码</strong>。具体步骤为：</p>
<ul>
<li>根据数据集和文本描述完成图表推荐</li>
<li>结合数据集和图表模板代码生成代码</li>
<li>渲染可视化效果</li>
</ul>
<p>这里，我们对数据集的格式进行了约束，要求必须提供表格结构的数据集（一维对象数组），这是分析了现有的数据分析产品之后做出的决定，因为<strong>表格结构是人们存储数据集的普遍格式，不需要进行预处理工作，标准的表格数据集约束隔离了业务，让任务变得更简单</strong>。为了实现这一目标，业务侧需要依赖数据编排服务将数据集标准化，图表库侧则将数据解析的逻辑放在了图表的模板代码中，表格结构约束相当于成为隔离业务和图表库的协议层。</p>
<p>这一方案中依然依赖于 AI 模型生成最终的图表代码，相比于之前的效果已经有所改善，但仍然存在类似的问题：AI 模型对数据数值是敏感的，在提供的数据集准确的情况下最终生成的代码中数值有很大概率会出错；在数据集量级比较大的情况下，AI 模型提示词的上下文 token 数据具有硬性限制，这一问题无法解决（虽然目前随着技术发展超长上下文已经实现，但输入 token 数量越多意味着 AI 模型推理的时间越长，且输出越不稳定和时间更长）。</p>
<p>基于目前所做尝试的结果，再结合社区中相关的讨论，大家普遍的共识是：AI 模型的能力目前尚不足以完成复杂的专业任务，在代码生成场景更适合以辅助工具的形式出现，而不是面向最终用户的产品。换句话说，<strong>AI 模型结合工程侧能力才是 AI 技术在业务中顺利落地的正确路径。</strong></p>
<p>在该方案的设计过程中，我们曾设想过将第二步代码生成也用工程化手段解决，但面临的困境是一个数据集如果数据维度较多，那么可利用该数据集生成不同的可视化效果，即便是同类型的图表，而这取决于用户意图，如何将用户意图翻译成代码逻辑用工程化手段基本是无法实现的。用简单的例子来说明，一个数据集中包含了一家公司的股价和利润率数据，它们均可用折线图或者柱状图来表达，最终可视化效果表达的是这家公司的股价还是利润率变化趋势取决于用户意图。</p>
<p>至此，我们基本已经明确几个关键点：数据集不经过 AI 模型处理，包含大量细节的代码片段也不应该由 AI 模型生成，AI 模型可以胜任图表推荐任务。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="基于数据特征进行图表推荐">基于数据特征进行图表推荐<a href="https://wang1212.github.io/2024/01/22/computer-technology/ai/aigc-data-vis#%E5%9F%BA%E4%BA%8E%E6%95%B0%E6%8D%AE%E7%89%B9%E5%BE%81%E8%BF%9B%E8%A1%8C%E5%9B%BE%E8%A1%A8%E6%8E%A8%E8%8D%90" class="hash-link" aria-label="基于数据特征进行图表推荐的直接链接" title="基于数据特征进行图表推荐的直接链接">​</a></h3>
<p>在进行下一步尝试之前，我们开始思考如何优化工程侧的代码，以使其更适合 AIGC 任务。例如，一开始不同类型图表的数据集格式要求和数据解析逻辑实现不一致，这增加了问题的复杂性，我们通过引入标准化的表格数据集约束来解决了这一问题。通过进一步了解目前可视化领域主流项目的动向，分析其衍生项目（例如 <a href="https://altair-viz.github.io/" target="_blank" rel="noopener noreferrer">Vega-Altair</a>、<a href="https://observablehq.com/plot/what-is-plot" target="_blank" rel="noopener noreferrer">Plot</a>）的 APIs 设计后，我们发现其都<strong>遵循声明式的设计，并蕴含了图形语法的设计思想</strong>，而这让我们看到了新的可能性。</p>
<p>于是，我们提出新的方案：<strong>对图表库进行抽象封装设计，将数据解析逻辑抽象为声明式的数据编码配置，使其仅通过标准的表格数据集加几个数据编码配置参数即可渲染指定的可视化效果；基于可视化图表的数据特征训练 AI 可视化推荐模型。</strong></p>
<p>该方案经过验证，效果超出预期，并具备落地真实业务场景的可能性。在这一版本的方案中，工程侧的实现细节比较多，总的来说就做了两件事：一是对图表库的 APIs 进行了抽象封装，二是提供了 AI 可视化推荐模型的训练集。</p>
<p>具体的来说，我们在<strong>渲染一个可视化图表时需要提供两部分参数，标准的表格数据集和数据编码配置，后者可以理解为一个指定数据集中的哪些字段映射到图表中的指定维度</strong>，例如渲染一个柱状图需要 x 和 y 两个维度，对应的则是数据集中的两个不同字段。因此，我们可以<strong>声明数据编码配置参数的类型定义约束</strong>，例如柱状图的 x 维度要求为字符串类型数据，折线图的 x 维度要求为日期类型数据，这样就<strong>为图表推荐任务提供了判断标准，形成了训练 AI 可视化推荐的模型训练集。</strong></p>
<p>这里需要注意的是，我们之前一直说图表推荐的结果是适合可视化的图表类型，其实这是不准确的，因为<strong>一类图表可以有很多不同的用例</strong>，例如属于折线图类型的有单折线、多折线、堆叠折线等等。所以，<strong>AI 模型的训练集实际上代表的是一个个图表用例</strong>，模型最终推荐的结果也是对应的用例类型和数据编码配置参数，可以说<strong>图表推荐是根据数据集的特征来判断的，该结果也可以通过人工标注的方式进行调整。</strong></p>
<p>现阶段，基于该模式，我们已经成功将 AIGC 可视化能力落地在多个业务场景，快速生成可视化图表效果来帮助用户直观的了解数据集信息。后续面临的问题则是，常规的可视化图表效果不具备吸引力，且仅能表达数据集的显式信息，而这些问题均可以尝试结合 AI 技术来解决，例如基于自然语言的图表效果微调，AI 数据洞察等等。</p>
<p>另外，值得一提的是微软的 <a href="https://microsoft.github.io/lida/" target="_blank" rel="noopener noreferrer">LIDA</a> 项目，其目标是建立一个基于 LLMs 自动生成可视化和信息图表的系统，其设计较为复杂且更具备通用性，设计思想有一定的借鉴意义。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="参考资源">参考资源<a href="https://wang1212.github.io/2024/01/22/computer-technology/ai/aigc-data-vis#%E5%8F%82%E8%80%83%E8%B5%84%E6%BA%90" class="hash-link" aria-label="参考资源的直接链接" title="参考资源的直接链接">​</a></h2>
<ul>
<li><a href="https://vega.github.io/voyager/" target="_blank" rel="noopener noreferrer">https://vega.github.io/voyager/</a></li>
<li><a href="https://www.highcharts.com/chat/gpt/" target="_blank" rel="noopener noreferrer">https://www.highcharts.com/chat/gpt/</a></li>
<li><a href="https://github.com/victordibia/data2vis" target="_blank" rel="noopener noreferrer">https://github.com/victordibia/data2vis</a></li>
<li><a href="https://altair-viz.github.io/" target="_blank" rel="noopener noreferrer">https://altair-viz.github.io/</a></li>
<li><a href="https://observablehq.com/plot/what-is-plot" target="_blank" rel="noopener noreferrer">https://observablehq.com/plot/what-is-plot</a></li>
<li><a href="https://microsoft.github.io/lida/" target="_blank" rel="noopener noreferrer">https://microsoft.github.io/lida/</a></li>
</ul>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>计算机技术</category>
            <category>AI</category>
            <category>数据可视化</category>
            <category>实践案例</category>
        </item>
        <item>
            <title><![CDATA[绍兴鲁迅故居之行]]></title>
            <link>https://wang1212.github.io/2023/12/16/life/tourism/tourism-shaoxing</link>
            <guid>https://wang1212.github.io/2023/12/16/life/tourism/tourism-shaoxing</guid>
            <pubDate>Sat, 16 Dec 2023 22:10:00 GMT</pubDate>
            <description><![CDATA[杭州待了好几年，早就通了地铁的邻市绍兴是个很好的闲游去处，话虽如此，却也一直缺乏行动，难得在这个冬季的周末完成此行。]]></description>
            <content:encoded><![CDATA[<p><u>2023-11-25</u>
<br>
<br></p>
<p>杭州待了好几年，早就通了地铁的邻市绍兴是个很好的闲游去处，话虽如此，却也一直缺乏行动，难得在这个冬季的周末完成此行。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="地铁-or-高铁">地铁 or 高铁<a href="https://wang1212.github.io/2023/12/16/life/tourism/tourism-shaoxing#%E5%9C%B0%E9%93%81-or-%E9%AB%98%E9%93%81" class="hash-link" aria-label="地铁 or 高铁的直接链接" title="地铁 or 高铁的直接链接">​</a></h2>
<p>为什么会产生这个疑问呢？因为计划一日游，所以时间略显紧张，地铁单程大概要两个小时，这样的话早上得起多早啊！</p>
<p>好的是，两市之间也有高铁，耗时仅 19 分钟，这意味着早上可以多睡一会懒觉了。不过，众所周知，高铁站大部分不一定在市中心，所以出发之前还是查了绍兴高铁站距离景点的距离，大约 10 公里的样子，还不算远，怎么算都比地铁耗时短。</p>
<p>绍兴在我的印象中比较吸引人的则是“鲁迅故居”了，看见百草园与三味书屋要感觉亲切很多，另一方面绍兴最有名的则是黄酒了。此外，在旅游 App 上查看，绍兴还有兰亭（可记得《兰亭序》？）、书圣故里（书法名家王羲之）等比较有名的景点，也是此行的计划安排。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="鲁迅故里">鲁迅故里<a href="https://wang1212.github.io/2023/12/16/life/tourism/tourism-shaoxing#%E9%B2%81%E8%BF%85%E6%95%85%E9%87%8C" class="hash-link" aria-label="鲁迅故里的直接链接" title="鲁迅故里的直接链接">​</a></h2>
<p>当天的天气很好，没想到冬天的游客也很多。到达鲁迅故居已是中午十一点钟了，打算先预约景点然后吃完饭再去逛一逛，不过看了一圈好像也没有特别想吃的，于是找了家人不多的炒年糕店，也是头一次吃到别有一番风味的炒年糕。</p>
<p>绍兴的黄酒很著名，当然也体现在景区的小吃上了，基本都会含黄酒，倒也挺有意思。</p>
<p>鲁迅故居的景点实际上包含了多个小景点（鲁迅故居、鲁迅祖居、百草园、三味书屋等），而且不是连在一起的，要从一个景点进去逛完出来再去另一个景点。</p>
<p>为了节省时间，先从人少的游客中心进到了祖居景点，里面也不算很大，陈列的东西也比较少。下一个则是紧挨着的纪念馆了，里面陈列的东西相当多，不仅有鲁迅相关的，还有一些其它绍兴名人相关的，比较让人印象深刻的则是周恩来总理了，来之前倒还没想到总理原本也是绍兴人啊。一路看着一些我们在课本上学过的鲁迅文集摘选颇有感慨，鲁迅弃医从文等一系列事迹让人深有感触。纪念馆中还有王羲之的《兰亭集序》手稿，看着这些熟悉的字句，不禁能回想起原来全篇背诵的场景。</p>
<p>接下来去了故居景点，里面的人流量有两三千，应该相比长假等热门时间要好一点，这也是核心景点了。从门口的简版地图来看，百草园就在宅子的最后边。故居比祖居看起来要大一些，不过据了解这些都是后来复原的，而且鲁迅可能成年后在绍兴并没有实际的长期生活过，这些都是他们的家族兄弟姐妹及其后人支持修建的。</p>
<p>百草园实际上就是鲁迅家的菜园子，鲁迅给其的称谓让其对别人来说颇感不一样，也许这就是鲁迅幽默的风格吧。</p>
<p>从故居出来之后已经是下午一点多钟了，这里就剩下最后一个三味书屋景点了，这也是在故居的对面，即鲁迅老师的家，看吧，鲁迅总是能把一件事情写出不一样的感觉。排队的人很多，耗时二十分钟才进门，里面的区域实际并不大，有意思的是鲁迅的课桌还在，上面似乎刻了一个“早”字。</p>
<p>来之前本来打算是绕着一圈连续逛好几个景点的，发现这一圈下来有些许的累，于是进行了短暂的歇息。来一次绍兴，当然得带点特产回去吧，黄酒是最好不过了，虽然现在的特产基本上网购都可以买到，但毕竟来一次，尝尝手工的倒也不错。</p>
<p>此刻已是下午两点，打算再去最后一个景点书圣故里，由于距离只有两三公里，所以就步行晃晃悠悠过去了。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="书圣故里">书圣故里<a href="https://wang1212.github.io/2023/12/16/life/tourism/tourism-shaoxing#%E4%B9%A6%E5%9C%A3%E6%95%85%E9%87%8C" class="hash-link" aria-label="书圣故里的直接链接" title="书圣故里的直接链接">​</a></h2>
<p>对于喜欢书法的人来说，有“书圣”之称的王羲之应该是比较熟悉的，其作品天下第一行书《兰亭序》更是为人所熟知。当然，我并不知其为绍兴人。</p>
<p>绍兴有书圣故里和兰亭两个景点，不知其有何不同，由于前者离得较近就选择去这里。</p>
<p>等到了目的地后，才发现这似乎算是一个开放式的小街巷，不算是一个被开发的景点。当然，作为北方人来这街巷走走看看也是不错的，领略一下江南的风土人情。</p>
<p>绍兴此行是比较轻松的，因为离得近，所以觉得以后还可以再来，行程安排就较为随意一些了，逛到哪是哪，走走看看就当散步了。</p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>生活</category>
            <category>旅游</category>
            <category>绍兴</category>
        </item>
        <item>
            <title><![CDATA[解析 ECharts 设计：UniversalTransition 动画]]></title>
            <link>https://wang1212.github.io/2023/11/10/computer-technology/web-frontend/echarts-zrender/morph-animation</link>
            <guid>https://wang1212.github.io/2023/11/10/computer-technology/web-frontend/echarts-zrender/morph-animation</guid>
            <pubDate>Fri, 10 Nov 2023 19:23:00 GMT</pubDate>
            <description><![CDATA[ECharts 的 UniversalTransition 动画提供了一些复杂场景下过渡动画的解决方案，这类场景的难点在于让不规则图形或者不同形状的图形之间如何完成一个比较流畅的过渡动画，在业内比较熟知的类似技术则是 SVG Morph 动画。]]></description>
            <content:encoded><![CDATA[<p>ECharts 的 <a href="https://echarts.apache.org/zh/option.html#series-line.universalTransition" target="_blank" rel="noopener noreferrer">UniversalTransition 动画</a>提供了一些复杂场景下过渡动画的解决方案，这类场景的难点在于让<strong>不规则图形</strong>或者<strong>不同形状的图形</strong>之间如何完成一个比较流畅的过渡动画，在业内比较熟知的类似技术则是 SVG Morph 动画。</p>
<p>查看以下 ECharts 官方示例：</p>
<blockquote>
<ul>
<li><a href="https://echarts.apache.org/examples/zh/editor.html?c=scatter-aggregate-bar" target="_blank" rel="noopener noreferrer">https://echarts.apache.org/examples/zh/editor.html?c=scatter-aggregate-bar</a></li>
<li><a href="https://echarts.apache.org/examples/zh/editor.html?c=scatter-symbol-morph" target="_blank" rel="noopener noreferrer">https://echarts.apache.org/examples/zh/editor.html?c=scatter-symbol-morph</a></li>
<li><a href="https://echarts.apache.org/examples/zh/editor.html?c=map-bar-morph" target="_blank" rel="noopener noreferrer">https://echarts.apache.org/examples/zh/editor.html?c=map-bar-morph</a></li>
<li><a href="https://echarts.apache.org/examples/zh/editor.html?c=treemap-sunburst-transition" target="_blank" rel="noopener noreferrer">https://echarts.apache.org/examples/zh/editor.html?c=treemap-sunburst-transition</a></li>
</ul>
</blockquote>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="svg-morph-动画">SVG Morph 动画<a href="https://wang1212.github.io/2023/11/10/computer-technology/web-frontend/echarts-zrender/morph-animation#svg-morph-%E5%8A%A8%E7%94%BB" class="hash-link" aria-label="SVG Morph 动画的直接链接" title="SVG Morph 动画的直接链接">​</a></h2>
<p>在探究 ECharts 的 UniversalTransition 动画之前先来看看比较成熟的 SVG Morph 技术。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="css-方案">CSS 方案<a href="https://wang1212.github.io/2023/11/10/computer-technology/web-frontend/echarts-zrender/morph-animation#css-%E6%96%B9%E6%A1%88" class="hash-link" aria-label="CSS 方案的直接链接" title="CSS 方案的直接链接">​</a></h3>
<p>通常，动画会优先采用 CSS 方案，一方面是因为方便，另一方面则是因为会有硬件加速的优势。实际上，SVG 的 Morph 动画也可以使用 CSS 来实现。查看以下示例：</p>
<blockquote>
<p><a href="https://codepen.io/chriscoyier/pen/NRwrNp" target="_blank" rel="noopener noreferrer">https://codepen.io/chriscoyier/pen/NRwrNp</a></p>
</blockquote>
<div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">svg</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">viewBox</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">0 0 10 10</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">class</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">svg-1</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">path</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">d</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">M2,2 L8,8</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">svg</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre></div></div>
<div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token selector class" style="color:#00009f">.svg-1</span><span class="token selector pseudo-class" style="color:#00009f">:hover</span><span class="token selector" style="color:#00009f"> path</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#36acaa">d</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">path</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"M8,2 L2,8"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p><code>&lt;path&gt;</code> 标签的 <a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d" target="_blank" rel="noopener noreferrer"><code>d</code></a> 属性是一个 Presentation Attributes，所以可被用来作为 CSS 属性使用。不过，目前浏览器的支持度仅有 <a href="https://caniuse.com/mdn-svg_elements_path_d_path" target="_blank" rel="noopener noreferrer">70%</a> 多，兼容性并不高。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="smil-方案">SMIL 方案<a href="https://wang1212.github.io/2023/11/10/computer-technology/web-frontend/echarts-zrender/morph-animation#smil-%E6%96%B9%E6%A1%88" class="hash-link" aria-label="SMIL 方案的直接链接" title="SMIL 方案的直接链接">​</a></h3>
<p>实际上，在 CSS 支持的更早之前，业内采用 <a href="https://www.w3.org/TR/REC-smil/" target="_blank" rel="noopener noreferrer">SMIL 技术</a>来实现 Web 上的矢量图形形变动画。来自 <a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animate" target="_blank" rel="noopener noreferrer">MDN 文档</a>的示例如下：</p>
<div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">svg</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">viewBox</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">0 0 10 10</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">xmlns</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">http://www.w3.org/2000/svg</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">rect</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">width</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">10</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">height</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">10</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">animate</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">attributeName</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">rx</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">values</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">0;5;0</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">dur</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">10s</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token tag" style="color:#00009f">      </span><span class="token tag attr-name" style="color:#00a4db">repeatCount</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">indefinite</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">rect</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">svg</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre></div></div>
<p>可见，其实际上是类似 HTML 标签的形式，所以在应对一些高度复杂的动画场景时局限性比较大。</p>
<p>给出一个实际案例，状态管理库 jotai 的官方 GitHub 仓库 logo 动画的源文件：</p>
<blockquote>
<p><a href="https://raw.githubusercontent.com/pmndrs/jotai/master/img/title.svg" target="_blank" rel="noopener noreferrer">https://raw.githubusercontent.com/pmndrs/jotai/master/img/title.svg</a></p>
</blockquote>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="gsap-的-morphsvg-插件">GSAP 的 MorphSVG 插件<a href="https://wang1212.github.io/2023/11/10/computer-technology/web-frontend/echarts-zrender/morph-animation#gsap-%E7%9A%84-morphsvg-%E6%8F%92%E4%BB%B6" class="hash-link" aria-label="GSAP 的 MorphSVG 插件的直接链接" title="GSAP 的 MorphSVG 插件的直接链接">​</a></h3>
<p>要实现效果比较好的形变动画并不容易，目前，业内功能比较强大的工具库则是 <a href="https://gsap.com/docs/v3/Plugins/MorphSVGPlugin/" target="_blank" rel="noopener noreferrer">GSAP 的 MorphSVG 插件</a>，我们在其官方文档中可以看到其中的技术难点。</p>
<p><img decoding="async" loading="lazy" alt="gsap-svg-morph-plugin" src="https://wang1212.github.io/assets/images/gsap-svg-morph-plugin-7413a2b75c6b332db8698bbdacde2a58.webp" width="1396" height="437" class="img_ev3q"></p>
<p>在处理两个不同的 SVG 图形之间的形变过渡时，要确保其 <code>d</code> 属性包含的<strong>点数量是一致</strong>的，为了实现这个目标，则需要对其数据进行插值和优化处理，将其转换和细分为多段<strong>贝塞尔曲线</strong>。</p>
<p>为了更好的理解，可以参考以下这篇关于使用 D3.js 实现折线图过渡动画的文章：</p>
<blockquote>
<p><a href="https://bocoup.com/blog/improving-d3-path-animation" target="_blank" rel="noopener noreferrer">https://bocoup.com/blog/improving-d3-path-animation</a></p>
</blockquote>
<p>以上文章中对于不同点数量的折线图过渡动画的数据点插值尝试了多个方案，可以看出不同的插值算法对动画的效果影响是比较明显，这也是 SVG 形变动画中的难点。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="贝塞尔曲线为什么这么重要">贝塞尔曲线为什么这么重要？<a href="https://wang1212.github.io/2023/11/10/computer-technology/web-frontend/echarts-zrender/morph-animation#%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E4%B9%88%E9%87%8D%E8%A6%81" class="hash-link" aria-label="贝塞尔曲线为什么这么重要？的直接链接" title="贝塞尔曲线为什么这么重要？的直接链接">​</a></h2>
<p>查阅不同的资料，发现大家在实现 SVG 形变动画时，数据插值优化过程中都会将其转换为贝塞尔曲线进行处理，遂产生了好奇心，更进一步的探索才发现贝塞尔曲线是非常重要的一个数学函数和曲线，几乎所有的图形引擎都支持绘制贝塞尔曲线。</p>
<p>可参考以下这篇文章来简单的了解贝塞尔曲线在设计领域的重要性：</p>
<blockquote>
<p><a href="https://www.linearity.io/blog/bezier-curves/" target="_blank" rel="noopener noreferrer">https://www.linearity.io/blog/bezier-curves/</a></p>
</blockquote>
<p>根据维基百科：</p>
<blockquote>
<p>由于需要点阵化更精细的分辨率时，重新插值（补点）的计算量较小，<strong>贝塞尔曲线被广泛地在计算机图形中用来为平滑曲线建立模型</strong>。</p>
</blockquote>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="echarts-的动画实现细节">ECharts 的动画实现细节<a href="https://wang1212.github.io/2023/11/10/computer-technology/web-frontend/echarts-zrender/morph-animation#echarts-%E7%9A%84%E5%8A%A8%E7%94%BB%E5%AE%9E%E7%8E%B0%E7%BB%86%E8%8A%82" class="hash-link" aria-label="ECharts 的动画实现细节的直接链接" title="ECharts 的动画实现细节的直接链接">​</a></h2>
<p>根据源码，ECharts 的 UniversalTransition 动画被实现为一个插件功能：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/apache/echarts/blob/5.3.3/src/animation/universalTransition.ts#L626</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">installUniversalTransition</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">registers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> EChartsExtensionInstallRegisters</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  registers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">registerUpdateLifecycle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'series:beforeupdate'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ecMOdel</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> api</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  registers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">registerUpdateLifecycle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'series:transition'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ecModel</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> api</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// TODO api provide an namespace that can save stuff per instance</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> globalStore </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getUniversalTransitionGlobalStore</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">api</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// TODO multiple to multiple series.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">globalStore</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">oldSeries </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">updatedSeries </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">optionChanged</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// Use give transition config if its' give;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> transitionOpt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">seriesTransition</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">transitionOpt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">each</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">normalizeToArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">transitionOpt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> opt </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token function" style="color:#d73a49">transitionSeriesFromOpt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">opt</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> globalStore</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> api</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Else guess from series based on transition series key.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> updateBatches </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findTransitionSeriesBatches</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">globalStore</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> params</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">each</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">updateBatches</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">keys</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> key </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> batch </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> updateBatches</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token function" style="color:#d73a49">transitionBetween</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">batch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">oldSeries</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> batch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">newSeries</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> api</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>分析一些关键性源码，可以了解到其过渡动画的实现细节，直接来看看两个系列之间的过渡是如何实现的。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/apache/echarts/blob/5.3.3/src/animation/universalTransition.ts#L160</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">transitionBetween</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  oldList</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> TransitionSeries</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  newList</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> TransitionSeries</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  api</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ExtensionAPI</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">updateOneToOne</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newIndex</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> oldIndex</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> oldItem </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> oldDiffItems</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">oldIndex</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> newItem </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> newDiffItems</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">newIndex</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> newSeries </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> newItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hostModel </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> SeriesModel</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// TODO Mark this elements is morphed and don't morph them anymore</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> oldEl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> oldItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getItemGraphicEl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">oldItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dataIndex</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> newEl </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> newItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getItemGraphicEl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dataIndex</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Can't handle same elements.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">oldEl </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> newEl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      newEl </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">animateElementStyles</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newEl</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> newItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">dataIndex</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> newSeries</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// We can't use the elements that already being morphed</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">oldEl </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> isElementStillInChart</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">oldEl</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newEl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">stopAnimation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newEl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">oldEl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">stopAnimation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">oldEl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// If old element is doing leaving animation. stop it and remove it immediately.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">removeEl</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">oldEl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hasMorphAnimation </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">applyMorphAnimation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token function" style="color:#d73a49">getPathList</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">oldEl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token function" style="color:#d73a49">getPathList</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newEl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          newItem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">divide</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          newSeries</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          newIndex</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          updateMorphingPathProps</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">fadeInElement</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newEl</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> newSeries</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> newIndex</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">DataDiffer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    oldDiffItems</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    newDiffItems</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">createKeyGetter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> useId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">createKeyGetter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> useId</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'multiple'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">update</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">updateOneToOne</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">updateManyToOne</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newIndex</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> oldIndices</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">updateOneToMany</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newIndices</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> oldIndex</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">updateManyToMany</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newIndices</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> oldIndices</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">execute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>在应用 Morph 动画之前，对两个图形元素进行了遍历迭代，得到其包含的所有 <code>path</code> 实例。需要注意的是，ECharts 的底层绘图引擎是 ZRender，而其所有图形的基类就是 <code>Path</code>，这只是绘图层的抽象设计，与 svg 的 <code>&lt;path&gt;</code> 标签对象不是同一个概念。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/apache/echarts/blob/5.3.3/src/animation/morphTransitionHelper.ts#L110</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">applyMorphAnimation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  from</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> DescendentPaths </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> DescendentPaths</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  to</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> DescendentPaths </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> DescendentPaths</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  divideShape</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> UniversalTransitionOption</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'divideShape'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  seriesModel</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> SeriesModel</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  dataIndex</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function-variable function" style="color:#d73a49">animateOtherProps</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fromIndividual</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Path</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    toIndividual</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Path</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rawFrom</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Path</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    rawTo</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Path</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    animationCfg</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ElementAnimateConfig</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">morphOneBatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    batch</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> MorphingBatch</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fromIsMany</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">boolean</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    animateIndex</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    animateCount</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    forceManyOne</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">boolean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> batchMany </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> batch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">many</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> batchOne </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> batch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">one</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">batchMany</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">forceManyOne</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// Is one to one</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> batchFrom</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Path </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fromIsMany </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> batchMany</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> batchOne</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> batchTo</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Path </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fromIsMany </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> batchOne </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> batchMany</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">isCombineMorphing</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">batchFrom </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// Keep doing combine animation.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">morphOneBatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          many</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">batchFrom </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Path</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          one</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> batchTo </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Path</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> animateIndex</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> animateCount</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> individualAnimationCfg </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> animationDelay </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">defaults</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            delay</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">animationDelay</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">animateIndex</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> animateCount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> ElementAnimateConfig</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> animationCfg</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> animationCfg</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">morphPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">batchFrom</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> batchTo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> individualAnimationCfg</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">animateOtherProps</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">batchFrom</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> batchTo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> batchFrom</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> batchTo</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> individualAnimationCfg</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        fromIndividuals</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        toIndividuals</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fromIsMany</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">combineMorph</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">batchMany</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> batchOne</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> separateAnimationCfg</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">separateMorph</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">batchOne</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> batchMany</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> separateAnimationCfg</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> morphBatches</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">morphOneBatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">morphBatches</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fromIsMany</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> animateIndex</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> animateCount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    animateIndex </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> morphBatches</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">many</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>ECharts 为了使不同的图表元素在动画过渡时更自然一些，提供了多种策略，允许图形分割、合并等。</p>
<p>从源码中可以看到，ECharts 只处理了一些业务逻辑，真正的图形变形逻辑实际上在 ZRender 中实现。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/ecomfe/zrender/blob/5.3.2/src/tool/morphPath.ts#L482</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">morphPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  fromPath</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Path</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  toPath</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Path</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  animationOpts</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ElementAnimateConfig</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Path </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">fromPath </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">toPath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> toPath</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> oldDone </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> animationOpts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">done</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// const oldAborted = animationOpts.aborted;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> oldDuring </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> animationOpts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">during</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">prepareMorphPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fromPath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> toPath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">toPath </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> MorphingPath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__morphT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">restoreToPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">restoreMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">toPath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'buildPath'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">restoreMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">toPath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'updateTransform'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Mark as not in morphing</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">toPath </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> MorphingPath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">__morphT </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Cleanup.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    toPath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createPathProxy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    toPath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">dirtyShape</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  toPath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">animateTo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    __morphT</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token builtin">any</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">defaults</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">during</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      toPath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">dirtyShape</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      oldDuring </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">oldDuring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">done</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">restoreToPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      oldDone </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">oldDone</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// NOTE: Don't do restore if aborted.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Because all status was just set when animation started.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// aborted() {</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//     oldAborted &amp;&amp; oldAborted();</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// }</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> ElementAnimateConfig</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> animationOpts</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> toPath</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>根据以上源码来看，ZRender 在对两个 <code>Path</code> 对象实例做 Morph 动画处理时，会先做一部分<strong>准备工作</strong>，然后劫持 <code>buildPath()</code> 和 <code>updateTransform()</code> 两个方法，再利用 <code>__morphT</code> 标记位完成整段动画，最终再将被劫持的方法还原。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/ecomfe/zrender/blob/5.3.2/src/tool/morphPath.ts#L396</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">prepareMorphPath</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  fromPath</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Path</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  toPath</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Path</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> fromPathProxy </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fromPath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getUpdatedPathProxy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> toPathProxy </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> toPath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getUpdatedPathProxy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">fromBezierCurves</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> toBezierCurves</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">alignBezierCurves</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">pathToBezierCurves</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fromPathProxy</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">pathToBezierCurves</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">toPathProxy</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> fromPathTransform </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fromPath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getComputedTransform</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> toPathTransform </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> toPath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getComputedTransform</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">updateIdentityTransform</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Transformable</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">transform </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  fromPathTransform </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">applyTransformOnBeziers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fromBezierCurves</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fromPathTransform</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  toPathTransform </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">applyTransformOnBeziers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">toBezierCurves</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> toPathTransform</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Just ignore transform</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">saveAndModifyMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">toPath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'updateTransform'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> replace</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> updateIdentityTransform </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  toPath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">transform </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> morphingData </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findBestMorphingRotation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fromBezierCurves</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> toBezierCurves</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">PI</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> tmpArr</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">saveAndModifyMethod</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">toPath</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'buildPath'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">replace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">path</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> PathProxy</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>上面提到的准备工作是非常关键的，这个阶段 ZRender 会首先获取两个 Path 实例的<strong>绘图代理</strong>（为了同时支持 SVG、Canvas 等环境做的抽象设计），并将其<strong>转换为贝塞尔曲线</strong>的绘图指令组，然后将两段贝塞尔曲线组上的<strong>点数量进行对齐</strong>，然后对贝塞尔曲线应用变换。</p>
<p>以上就是 ECharts 的 UniversalTransition 动画实现细节，总结一下就是其与 SVG 的 Morph 动画实现思路一致，<strong>关键都在于对两个图形的路径点进行插值转换处理，并将点数量对齐</strong>，然后完成动画过渡。</p>
<h3 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="示例zrender-实现的-svg-morph-动画">示例：ZRender 实现的 SVG Morph 动画<a href="https://wang1212.github.io/2023/11/10/computer-technology/web-frontend/echarts-zrender/morph-animation#%E7%A4%BA%E4%BE%8Bzrender-%E5%AE%9E%E7%8E%B0%E7%9A%84-svg-morph-%E5%8A%A8%E7%94%BB" class="hash-link" aria-label="示例：ZRender 实现的 SVG Morph 动画的直接链接" title="示例：ZRender 实现的 SVG Morph 动画的直接链接">​</a></h3>
<p>GSAP 的 MorphSVG 插件固然强大，但其只有注册为会员才能使用，并不是开源免费的方案，实际上用 ZRender 就可以做出类似的效果，这里给出 GSAP 官网文档示例的 ZRender 实现：</p>
<div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">style</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">  </span><span class="token style language-css selector" style="color:#00009f">html</span><span class="token style language-css selector punctuation" style="color:#393A34">,</span><span class="token style language-css selector" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css selector" style="color:#00009f">  body</span><span class="token style language-css selector punctuation" style="color:#393A34">,</span><span class="token style language-css selector" style="color:#00009f"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css selector" style="color:#00009f">  </span><span class="token style language-css selector id" style="color:#00009f">#container</span><span class="token style language-css"> </span><span class="token style language-css punctuation" style="color:#393A34">{</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">    </span><span class="token style language-css property" style="color:#36acaa">width</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> </span><span class="token style language-css number" style="color:#36acaa">100</span><span class="token style language-css unit">%</span><span class="token style language-css punctuation" style="color:#393A34">;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">    </span><span class="token style language-css property" style="color:#36acaa">height</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> </span><span class="token style language-css number" style="color:#36acaa">100</span><span class="token style language-css unit">%</span><span class="token style language-css punctuation" style="color:#393A34">;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">    </span><span class="token style language-css property" style="color:#36acaa">display</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> flex</span><span class="token style language-css punctuation" style="color:#393A34">;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">    </span><span class="token style language-css property" style="color:#36acaa">flex-direction</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> column</span><span class="token style language-css punctuation" style="color:#393A34">;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">  </span><span class="token style language-css punctuation" style="color:#393A34">}</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">  </span><span class="token style language-css selector class" style="color:#00009f">.nav</span><span class="token style language-css"> </span><span class="token style language-css punctuation" style="color:#393A34">{</span><span class="token style language-css punctuation" style="color:#393A34">}</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">  </span><span class="token style language-css selector class" style="color:#00009f">.chart</span><span class="token style language-css"> </span><span class="token style language-css punctuation" style="color:#393A34">{</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">    </span><span class="token style language-css property" style="color:#36acaa">flex</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> </span><span class="token style language-css number" style="color:#36acaa">1</span><span class="token style language-css punctuation" style="color:#393A34">;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">    </span><span class="token style language-css property" style="color:#36acaa">height</span><span class="token style language-css punctuation" style="color:#393A34">:</span><span class="token style language-css"> </span><span class="token style language-css number" style="color:#36acaa">0</span><span class="token style language-css punctuation" style="color:#393A34">;</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css">  </span><span class="token style language-css punctuation" style="color:#393A34">}</span><span class="token style language-css"></span><br></span><span class="token-line" style="color:#393A34"><span class="token style language-css"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">style</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">container</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">nav</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">class</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">nav</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">play</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">play</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">button</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">reset</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">reset</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">button</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">nav</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">id</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">chart</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">class</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">chart</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">script</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://cdn.bootcdn.net/ajax/libs/zrender/5.3.2/zrender.min.js</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">script</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">script</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword" style="color:#00009f">const</span><span class="token script language-javascript"> zr </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> zrender</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword" style="color:#00009f">const</span><span class="token script language-javascript"> zrIns </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> zr</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">init</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript dom variable" style="color:#36acaa">document</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">getElementById</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript string" style="color:#e3116c">'chart'</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword" style="color:#00009f">const</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword module" style="color:#00009f">from</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> zr</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">path</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">createFromString</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript string" style="color:#e3116c">"M490.1,280.649c0,44.459-36.041,80.5-80.5,80.5s-80.5-36.041-80.5-80.5s36.041-80.5,80.5-80.5 S490.1,236.19,490.1,280.649z"</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword" style="color:#00009f">const</span><span class="token script language-javascript"> to </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> zr</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">path</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">createFromString</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript string" style="color:#e3116c">"M149,245c2.7-36.7,16.11-69.08,40.1-97.06c27.04-31.6,60.92-47.39,101.63-47.39c15.48,0,38.48,2.45,69.02,7.29 c30.54,4.89,53.53,7.28,69.03,7.28c23.69,0,57.87,8.85,102.53,26.48c7.91,3.01,17.47,11.24,28.7,24.59 c6.38,7.89,16.26,19.77,29.62,35.57c3.04,2.14,7,5.32,11.86,9.6c4.86,4.22,8.19,6.06,10,5.46c0.62-1.84,2.15-4.4,4.58-7.74 c1.21-1.23,1.96-1.83,2.26-1.83c0.93,0.61,1.83,1.21,2.75,1.83c0.91,0.62,1.21,2.42,0.91,5.46c-0.62,5.47-0.91,7.14-0.91,5 c-0.33,3.06-0.76,5.01-1.37,5.95c-3.95,6.67-5.48,11.85-4.55,15.47c0.92,3.32,3.77,8.67,8.64,15.96c4.87,7.29,7.59,12.76,8.19,16.4 c-0.3,2.73-0.43,7.12-0.43,13.21l-4.57,11.38c0,8.51,9.86,23.11,29.62,43.78c9.44,4.22,14.12,18.83,14.12,43.71 c0,19.47-16.09,29.17-48.27,29.17c-4.26,0-8.81-0.13-13.68-0.47c-3.34-1.2-8.2-2.56-14.58-4.07c-7.59-0.93-12.76-3.49-15.48-7.77 c-4.88-6.95-12.78-13.51-23.71-19.58c-1.82-0.88-4.48-4.22-7.98-10.02c-3.5-5.77-6.61-9.42-9.33-10.95 c-2.72-1.49-6.68-1.81-11.86-0.88c-8.81,1.49-13.68,2.26-14.57,2.26c-2.14,0-5.25-0.6-9.34-1.83c-4.11-1.21-7.05-1.83-8.89-1.83 c-2.11,9.73-2.59,19.15-1.36,28.25c0.3,2.45,1.83,4.43,4.56,5.92c4.27,3.05,6.53,4.71,6.85,5.05c2.72,2.11,5.61,5.61,8.64,10.45 c0.62,1.85-0.52,4.95-3.42,9.34c-2.89,4.41-5.22,7.01-7.06,7.74c-1.81,0.79-5.77,1.18-11.85,1.18c-8.82,0-29.45-2.45-30.98-2.73 c-7.59-1.53-14.13-3.94-19.58-7.3c-2.76-1.81-5.91-10.33-9.56-25.52c-3.68-16.41-6.72-26.27-9.14-29.64 c-0.6-0.9-1.36-1.33-2.26-1.33c-1.53,0-4.05,1.49-7.53,4.56c-3.49,2.99-5.86,4.65-7.05,5.01c-4.24,17.9-6.4,26.4-6.4,25.47 c0,7.01,1.97,12.89,5.92,17.77c3.94,4.86,8.06,9.57,12.32,14.11c5.16,5.77,7.74,10.78,7.74,15.04c0,2.41-0.75,4.52-2.28,6.37 c-6.38,7.89-17.02,11.85-31.9,11.85c-16.71,0-27.64-2.28-32.79-6.84c-6.7-5.77-10.95-11.86-12.76-18.2 c-0.3-1.53-1.05-6.09-2.28-13.68c-0.61-4.58-1.98-7.29-4.08-8.18c-6.1-0.92-13.69-2.58-22.78-5.01c-1.84-1.21-3.81-4.26-5.94-9.12 c-3.93-9.4-6.83-15.79-8.66-19.13c-9.13-4.56-23.7-9.7-43.76-15.45c-0.92,1.83-1.35,4.37-1.35,7.72c3.34,4.26,8.34,10.8,15.03,19.58 c5.47,7.29,8.2,14.3,8.2,20.96c0,12.78-8.2,19.13-24.61,19.13c-12.45,0-20.96-0.88-25.52-2.71c-6.67-2.73-12.29-9.14-16.85-19.13 c-7.6-16.74-11.85-26.16-12.76-28.27c-4.87-11.23-8.2-21.13-10.01-29.65c-1.23-6.05-3.06-15.35-5.49-27.8 c-2.12-10.3-5.46-18.36-10.01-24.13C155.33,279.36,147.5,260.6,149,245z"</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript keyword module" style="color:#00009f">from</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">attr</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript literal-property property" style="color:#36acaa">style</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#36acaa">fill</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#e3116c">'red'</span><span class="token script language-javascript punctuation" style="color:#393A34">,</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#36acaa">stroke</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#e3116c">'red'</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript punctuation" style="color:#393A34">,</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript literal-property property" style="color:#36acaa">x</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript number" style="color:#36acaa">0</span><span class="token script language-javascript punctuation" style="color:#393A34">,</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript literal-property property" style="color:#36acaa">y</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript number" style="color:#36acaa">0</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  to</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">attr</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript literal-property property" style="color:#36acaa">style</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#36acaa">fill</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#e3116c">'red'</span><span class="token script language-javascript punctuation" style="color:#393A34">,</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#36acaa">stroke</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript string" style="color:#e3116c">'red'</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript punctuation" style="color:#393A34">,</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript literal-property property" style="color:#36acaa">x</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript number" style="color:#36acaa">0</span><span class="token script language-javascript punctuation" style="color:#393A34">,</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript literal-property property" style="color:#36acaa">y</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript number" style="color:#36acaa">0</span><span class="token script language-javascript punctuation" style="color:#393A34">,</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript literal-property property" style="color:#36acaa">ignore</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript boolean" style="color:#36acaa">true</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  zrIns</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">add</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript keyword module" style="color:#00009f">from</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  zrIns</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">add</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript">to</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript dom variable" style="color:#36acaa">window</span><span class="token script language-javascript punctuation" style="color:#393A34">[</span><span class="token script language-javascript string" style="color:#e3116c">'play'</span><span class="token script language-javascript punctuation" style="color:#393A34">]</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method-variable function-variable method function property-access" style="color:#d73a49">onclick</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript keyword module" style="color:#00009f">from</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">attr</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#36acaa">ignore</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript boolean" style="color:#36acaa">true</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    to</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">attr</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#36acaa">ignore</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript boolean" style="color:#36acaa">false</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    zr</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">morph</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">morphPath</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript keyword module" style="color:#00009f">from</span><span class="token script language-javascript punctuation" style="color:#393A34">,</span><span class="token script language-javascript"> to</span><span class="token script language-javascript punctuation" style="color:#393A34">,</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#36acaa">duration</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript number" style="color:#36acaa">2e3</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript dom variable" style="color:#36acaa">window</span><span class="token script language-javascript punctuation" style="color:#393A34">[</span><span class="token script language-javascript string" style="color:#e3116c">'reset'</span><span class="token script language-javascript punctuation" style="color:#393A34">]</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method-variable function-variable method function property-access" style="color:#d73a49">onclick</span><span class="token script language-javascript"> </span><span class="token script language-javascript operator" style="color:#393A34">=</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript"> </span><span class="token script language-javascript arrow operator" style="color:#393A34">=&gt;</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript keyword module" style="color:#00009f">from</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">attr</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#36acaa">ignore</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript boolean" style="color:#36acaa">false</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    to</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">attr</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#36acaa">ignore</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript boolean" style="color:#36acaa">true</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    zr</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript property-access">morph</span><span class="token script language-javascript punctuation" style="color:#393A34">.</span><span class="token script language-javascript method function property-access" style="color:#d73a49">morphPath</span><span class="token script language-javascript punctuation" style="color:#393A34">(</span><span class="token script language-javascript">to</span><span class="token script language-javascript punctuation" style="color:#393A34">,</span><span class="token script language-javascript"> </span><span class="token script language-javascript keyword module" style="color:#00009f">from</span><span class="token script language-javascript punctuation" style="color:#393A34">,</span><span class="token script language-javascript"> </span><span class="token script language-javascript punctuation" style="color:#393A34">{</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">      </span><span class="token script language-javascript literal-property property" style="color:#36acaa">duration</span><span class="token script language-javascript operator" style="color:#393A34">:</span><span class="token script language-javascript"> </span><span class="token script language-javascript number" style="color:#36acaa">2e3</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">    </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript punctuation" style="color:#393A34">)</span><span class="token script language-javascript punctuation" style="color:#393A34">;</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript">  </span><span class="token script language-javascript punctuation" style="color:#393A34">}</span><span class="token script language-javascript"></span><br></span><span class="token-line" style="color:#393A34"><span class="token script language-javascript"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">script</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="参考资料">参考资料<a href="https://wang1212.github.io/2023/11/10/computer-technology/web-frontend/echarts-zrender/morph-animation#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://echarts.apache.org/zh/option.html#series-line.universalTransition" target="_blank" rel="noopener noreferrer">https://echarts.apache.org/zh/option.html#series-line.universalTransition</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d</a></li>
<li><a href="https://caniuse.com/" target="_blank" rel="noopener noreferrer">https://caniuse.com/</a></li>
<li><a href="https://www.w3.org/TR/REC-smil/" target="_blank" rel="noopener noreferrer">https://www.w3.org/TR/REC-smil/</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animate" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animate</a></li>
<li><a href="https://gsap.com/docs/v3/Plugins/MorphSVGPlugin/" target="_blank" rel="noopener noreferrer">https://gsap.com/docs/v3/Plugins/MorphSVGPlugin/</a></li>
<li><a href="https://bocoup.com/blog/improving-d3-path-animation" target="_blank" rel="noopener noreferrer">https://bocoup.com/blog/improving-d3-path-animation</a></li>
<li><a href="https://en.wikipedia.org/wiki/B%C3%A9zier_curve" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/B%C3%A9zier_curve</a></li>
<li><a href="https://www.linearity.io/blog/bezier-curves/" target="_blank" rel="noopener noreferrer">https://www.linearity.io/blog/bezier-curves/</a></li>
</ul>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>计算机技术</category>
            <category>Web 前端</category>
            <category>数据可视化</category>
            <category>动画</category>
            <category>工具</category>
            <category>ECharts</category>
            <category>ZRender</category>
            <category>源码解析</category>
        </item>
        <item>
            <title><![CDATA[此行南京]]></title>
            <link>https://wang1212.github.io/2023/08/27/life/tourism/tourism-nanjing</link>
            <guid>https://wang1212.github.io/2023/08/27/life/tourism/tourism-nanjing</guid>
            <pubDate>Sun, 27 Aug 2023 18:30:00 GMT</pubDate>
            <description><![CDATA[夏日的短暂旅行放弃了千岛湖，转而选择了南京，领略了一下古都文化。]]></description>
            <content:encoded><![CDATA[<p><u>2023-08-25</u>
<br>
<br></p>
<p>夏日的短暂旅行放弃了千岛湖，转而选择了南京，领略了一下古都文化。</p>
<p>忘记什么时候看的新闻了，南京被称为“第一网红城市”，比成都还要厉害，现在还是不是第一倒也不重要了。</p>
<p>不知道是不是因为太热门的原因，临近出行的前几天才开始预定酒店，发现比预期的要贵一些。而且杭州去南京的高铁票几乎售罄，犹豫了几个小时就只能买站票了，要命的是返程也只有站票了，不过还好全程也只有一个半小时左右。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="去程的小插曲">去程的小插曲<a href="https://wang1212.github.io/2023/08/27/life/tourism/tourism-nanjing#%E5%8E%BB%E7%A8%8B%E7%9A%84%E5%B0%8F%E6%8F%92%E6%9B%B2" class="hash-link" aria-label="去程的小插曲的直接链接" title="去程的小插曲的直接链接">​</a></h2>
<p>计划是周五下午过去，周日下午回来，也就是两天两夜的行程。去程还出了一个小插曲，车票是下班后的两小时，去高铁站的时间绰绰有余，但没有预估到夏天是旅游的旺季，即便是提前二十多分钟到的高铁站，但在进站安检的时候排了很长的队，而距离发车已经只有七八分钟了。感觉运气不好的是，过了安检后才发现走错入口了，检票口在另一个入口处，此时距离发车也只有四五分钟了，而我还得从候车大厅的一端狂奔到另一端，中间隔了将近二十个检票口，人群也非常拥挤。等到了检票口是，发现距离发车还有一分钟，但已经显示停止检票了，当时都懵了，重点是今天去南京的票都已经售罄了，这一趟车赶不上就只能等明天早上了。恰好此时检票员还在检票口站着，跑过去立马询问了一下，检票员则迅速帮助我们检票然后放行，悬着的心终于放下了。</p>
<p>犹记得上一次也有类似的经历，还是没有吸取教训啊，以后出行的时间要留的宽裕一些。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="秦淮河夜景">秦淮河夜景<a href="https://wang1212.github.io/2023/08/27/life/tourism/tourism-nanjing#%E7%A7%A6%E6%B7%AE%E6%B2%B3%E5%A4%9C%E6%99%AF" class="hash-link" aria-label="秦淮河夜景的直接链接" title="秦淮河夜景的直接链接">​</a></h2>
<p>到达南京是晚上九点多一些，酒店定在了玄武湖附近，去酒店的途中会路过一些景点，比如夫子庙、秦淮河夜景，便临时改变了注意，原计划在周六晚上的行程改到了今天晚上。不得不说，在城市游玩的话，如果景点有直达的地铁会方便很多，还记得春节时候苏州的地铁不用刷卡直接免费乘坐也为游客省去了不少麻烦。</p>
<p>由于下午没有吃饭，所以选择先去老门东，据说这里的小吃很多。下了地铁后要步行好一会才到了老门东，实际上就是个步行街吧，晚上的人倒是挺多的。进去迅速逛了一圈，本来想找个吃饭的地方，结果发现没有什么好吃的，仅有的几家店人也超级多。随后去了步行街门口的一家店，尝了算是这里的特产的鸭血粉丝汤和一些小吃，其中灌汤包倒是很好吃，整体味道还不错，而且也不算贵。</p>
<p>老门东、夫子庙、秦淮河基本上都在一块，吃过饭后便打算直接步行去秦淮河看夜景了，天气倒也刚刚好，不热不闷，走在大街上还是挺舒服的。</p>
<p>秦淮河的夜景比预期的要差一些，一方面是人比较少，另一方面景区也比较小，也有可能是因为去的太晚了，但整体逛下来比原来想象的那种南京著名景点的感觉还是差不少。夫子庙由于去的太晚了，所以晚上也只能简单的在门口拍个照。不过话说回来，像这种古都文化的城市也许真正有意义的是其历史文化。</p>
<p>夜游行程结束到达酒店已经是晚上十一点多了。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="第一天">第一天<a href="https://wang1212.github.io/2023/08/27/life/tourism/tourism-nanjing#%E7%AC%AC%E4%B8%80%E5%A4%A9" class="hash-link" aria-label="第一天的直接链接" title="第一天的直接链接">​</a></h2>
<p>第一天上午的行程计划是玄武湖、鸡鸣寺、总统府，结果因为太劳累，原本打算七点起床的，结果八点才起床，总统府的门票因为提前买的有固定时间，所以吃完早餐后就先去了那里。</p>
<p>打车大概半个多小时的样子到了景点门口，堵车很严重，于是趁停车的时候就赶紧下了车，如果要等到下车点估计至少还得堵个十几分钟。之前看攻略时说总统府的门票一定要提前一天预定，否则当天几乎买不到，果不其然，排队检票的队伍特别长，而且旁边已经提示门票售罄了。</p>
<p>提到“总统”两个字，大家应该很容易想到民国首任“临时大总统”孙中山先生，是的，总统府就是当时孙中山先生及其同事办公的地方，也可以类比为我们当代的国家中央行政单位。</p>
<p>总统府整体还是比较大的，具体的布局已经记不太清了，但是在某处看沙盘时，基本上应有的部门一个都不缺，我们熟知的教育部、工商部等等，这是令我印象比较深刻的。</p>
<p>话说在来之前听说南京博物院很有名，提前七天都约不到的那种，事实也正是如此，不过也有人说当日会放票，可以试试。有意思的是，在总统府内坐着休息的时候突发奇想，想看看能不能预约到南京博物院，没想到点进去后果真下午场有 100 多张票，赶紧下手预约成功。这样，下午的行程也由牛首山更改为南京博物院了。</p>
<p>想到玄武湖和鸡鸣寺时，已经不太想去了，一个是公园，一个就是个简单的寺庙，不同城市类似的地方已经去了很多次了，主要是也是因为时间比较紧张，天气有点炎热，不再想跑来跑去的了，这些景点错过的话倒也不觉得遗憾，如果错过南京博物院那倒是真的一大遗憾。</p>
<p>来之前，因为没有南京博物院的门票，所以计划去完总统府去牛首山的，中山陵预约到了周日早上，所以周六下午倒没有什么事情了，但牛首山据说只有几百米的海拔，山顶只不过有一个很漂亮的建筑，有很多网红来打卡，这倒不是特别令人感兴趣。以前很喜欢爬山，但都是爬那种大山，当然说不定去山顶俯瞰南京倒也是不错的选择。不过，既然预约到了南京博物院，那牛首山则可以不用去啦。</p>
<p>大概中午十二点多的样子，打车来到了南京博物院门口，放眼看去南京博物院的建筑还是挺有文化气息的。此时的天气已经比较热了，走进博物院的那一刻是多么舒服就不用多提了，空调很给力。说到这里，据说陕西省博物馆门票也日常难约，不过两地的文化不同，陕西省博物馆里面大多为青铜器，这里想必也大有不同，但春节时候去苏州博物馆时到挺令人印象深刻的，里面有江南地域的字画、丝绸藏品等等。</p>
<p>南京博物院里面比较大，要真正的看完至少也得一两个小时左右，不过没有预期的惊喜，不像网上说的那么有名，也可能是每个人的见识不同、经历不同，所以感受不一样吧。但是，来过此处此行南京便不再有遗憾了。</p>
<p>没有好好做攻略的后果就是来了南京不知道该吃什么，从博物院出来后肚子已经很饿了，打算吃完饭去看电影，于是找了家电影院附近的饭店，也算是小吃，应该挺有名的。没错，这次也少不了南京特色鸭血粉丝汤，尝起来味道也还不错，食材却没有昨晚的那家分量足，价格却是一样的。</p>
<p>饭后去看了已经上映半个多月，但口碑炸裂的《孤注一掷》，观影下来还不错，是大家关注的话题的诠释，但这个问题一直发生一直解决不了却是最值得令人深思的。</p>
<p>看完电影是旁晚时分，顺便去了不远处的玄武湖。湖上游船的人很多，还在排队，对于做了好几次的船的我来说，提不起游船的兴趣，便在湖边简单的休息了下，旁晚的天气还可以，有些许微风。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="次日">次日<a href="https://wang1212.github.io/2023/08/27/life/tourism/tourism-nanjing#%E6%AC%A1%E6%97%A5" class="hash-link" aria-label="次日的直接链接" title="次日的直接链接">​</a></h2>
<p>在充分休息了一晚之后，也迎来了短暂旅行的最后一天，今天早上起的比较早，为了赶去中山陵，因为据说中山陵耗费的时间比较长，而返程的高铁是下午五点，所以要赶在下午三点之前从中山陵出来。</p>
<p>去中山陵要先坐地铁，下了地铁后需要乘坐小公交专线才能到达中山陵的景点门口。大概早上九点多，开始排队入园。进去之后是一个餐厅，里面有卖喝的、以及糕点，顺路就买了一些糕点，味道确实不错，没有在其它地方尝过，算是一种特产吧。</p>
<p>来的时候还问了当地人，中山陵需要多长时间才能游完，有说慢点需要两个小时左右的，心里便有了数。但实际进去一看，预计一个小时足矣，如果不休息的话。</p>
<p>昨晚看了天气预报，今天似乎有雷阵雨，早晨还专门看了实时天气，显示未来几个小时不会下雨，但出门后看着天色以及吹的微风倒还是挺担心的。幸运的是，直到下午一点钟从中山陵景区往出走时天气依然很好，中途还去了音乐台，但比较令人失望，里面还在维修。</p>
<p>据说中山陵的台阶有 300 多个，象征了当时中国三亿多人民。据介绍，孙中山的遗体便在这后山之中。陵门上写着“天下为公”四个大字，在此处能感受到历史文化及其厚重感。</p>
<p>虽说中山陵里面并不大，但如果要结合导游的解说来真正的理解其包含的历史文化，不是简单的走马观花的话，两个小时倒也不为过。</p>
<p>从音乐台出来后，本打算去美龄宫再看看的，但午饭时间已过，肚子也挺饿的，就直接结束行程了，准备留点时间去商场找个餐厅吃饭顺便好好休息一下。误打误撞去了新街口的商圈，在网上简单的查了一下，发现还有一个美称“中华第一商圈”，开始还不明白，下了地铁就蒙了，地铁出口多达 20 多个，果真中华第一商圈。</p>
<p>找了一家餐厅点完菜等待的时刻，便是南京一行最后的闲暇时光了，两天的时间不长不短，该去的也去了，该看的也看了，最后离开的时候还来了个小小的震撼，倒也不虚此行。</p>
<p>此行南京，又一次说走就走的旅行。</p>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>生活</category>
            <category>旅游</category>
            <category>南京</category>
        </item>
        <item>
            <title><![CDATA[解析 Konva 设计：事件系统]]></title>
            <link>https://wang1212.github.io/2023/08/08/computer-technology/web-frontend/konva/event-system</link>
            <guid>https://wang1212.github.io/2023/08/08/computer-technology/web-frontend/konva/event-system</guid>
            <pubDate>Tue, 08 Aug 2023 21:21:00 GMT</pubDate>
            <description><![CDATA[绘图引擎支持丰富交互的前提是拥有一套事件系统，而在画布中如何拾取元素是实现的关键，从 Konva.js 的源码来看看其事件系统是如何设计的。]]></description>
            <content:encoded><![CDATA[<p>绘图引擎支持丰富交互的前提是拥有一套事件系统，而在画布中如何拾取元素是实现的关键，从 <a href="https://konvajs.org/" target="_blank" rel="noopener noreferrer">Konva.js</a> 的源码来看看其事件系统是如何设计的。</p>
<p><em>（之前分析过 ZRender 的源码实现，其采用了几何判断的方式来实现元素拾取，而 Konva.js 采用了不同的方案。）</em></p>
<!-- -->
<p>通常，画布（Canvas）元素作为原生 DOM 会提供相应的事件 APIs，但画布中绘制的内容由不同的绘图库进行抽象设计，基础元素（例如矩形、圆、线等）的事件由绘图库进行支持。</p>
<p>绘图库为了实现事件系统，一般的策略分为两步：<strong>首先，通过绑定画布元素的原生 DOM 事件来支持对用户交互事件的响应；其次，在响应画布的原生 DOM 事件时，获取坐标等信息在画布上进行元素拾取，来进一步判断触发交互事件的具体元素。</strong></p>
<p>其中，<code>Node</code> 是 Konva.js 中很重要的基类，几乎所有绘图相关的类（<code>Stage</code>、<code>Layer</code>、<code>Shape</code>）都继承自它，其实现了事件相关的 APIs（例如 <code>on()</code>、<code>off()</code> 等等）。</p>
<p>下面根据源码来分析具体逻辑的实现。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="绑定宿主环境事件">绑定宿主环境事件<a href="https://wang1212.github.io/2023/08/08/computer-technology/web-frontend/konva/event-system#%E7%BB%91%E5%AE%9A%E5%AE%BF%E4%B8%BB%E7%8E%AF%E5%A2%83%E4%BA%8B%E4%BB%B6" class="hash-link" aria-label="绑定宿主环境事件的直接链接" title="绑定宿主环境事件的直接链接">​</a></h2>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://konvajs.org/docs/overview.html</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// first we need to create a stage</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> stage </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Konva</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Stage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  container</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'container'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// id of container &lt;div&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  width</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  height</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">500</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre></div></div>
<p>第一阶段，在 Konva.js 实例化过程中就会绑定宿主环境的事件。具体过程为，在实例化 <code>Stage</code> 时，会在内部直接绑定容器 DOM 元素的宿主事件（同时支持鼠标、触摸、指针三种类型事件）。</p>
<p>绑定宿主环境事件：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/konvajs/konva/blob/9.3.11/src/Stage.ts#L177</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Stage</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Container</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Layer</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">config</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> StageConfig</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">checkNoClip</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_buildDOM</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_bindContentEvents</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">_bindContentEvents</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">Konva</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">isBrowser</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token constant" style="color:#36acaa">EVENTS</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> methodName</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">content</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addEventListener</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        event</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">evt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">methodName</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">evt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> passive</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>画布元素的原生 DOM 事件的响应逻辑在 <code>Stage</code> 类中直接实现：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/konvajs/konva/blob/9.3.11/src/Stage.ts#L589</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Stage</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Container</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Layer</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">_pointermove</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">evt</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> TouchEvent </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> MouseEvent </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> PointerEvent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setPointersPositions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">evt</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> processedShapesIds </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> triggeredOnShape </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> targetShape </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_getTargetShape</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">eventType</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_changedPointerPositions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> shape </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">PointerEvents</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCapturedShape</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getIntersection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Shape</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> pointerId </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> pos</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> event </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> evt</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> evt</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pointerId </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> differentTarget </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> targetShape </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">differentTarget </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> targetShape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        targetShape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_fireAndBubble</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">events</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pointerout</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token plain">event </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        targetShape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_fireAndBubble</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">events</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pointerleave</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token plain">event </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">processedShapesIds</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_id</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        processedShapesIds</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_id</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shape </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isListening</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        triggeredOnShape </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">differentTarget</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_fireAndBubble</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">events</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pointerover</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token plain">event </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> targetShape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_fireAndBubble</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">events</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pointerenter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token plain">event </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> targetShape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">eventType </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'targetShape'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_fireAndBubble</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">events</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pointermove</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token plain">event </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">targetShape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_fire</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">events</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pointerover</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            evt</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> evt</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            target</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            currentTarget</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            pointerId</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">eventType </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'targetShape'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">triggeredOnShape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_fire</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">events</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pointermove</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        evt</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> evt</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        target</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        currentTarget</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        pointerId</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">_changedPointerPositions</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>上述源码是 <code>pointermove</code> 事件的响应逻辑，其中<strong>最关键的便是对 <code>this.getIntersection(pos)</code> 的调用，这一步实现了指定坐标点的元素拾取</strong>。拾取到元素后，则会调用元素的 <code>_fireAndBubble()</code> 方法来触发用户绑定的事件回调。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/konvajs/konva/blob/9.3.11/src/Stage.ts#L365</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Stage</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Container</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Layer</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * get visible intersection shape. This is the preferred</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   *  method for determining if a point intersects a shape or not</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@method</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"></span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@name</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> Konva.Stage#getIntersection</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Object</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> pos</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Number</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> pos.x</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Number</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> pos.y</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@returns</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Konva.Node</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"></span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@example</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"></span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * var shape = stage.getIntersection(</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">x: 50, y: 50</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">);</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">getIntersection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Vector2d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">pos</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> layers </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">children</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      len </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> layers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      end </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> len </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      n</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">n </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> end</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> n </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> n</span><span class="token operator" style="color:#393A34">--</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> shape </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> layers</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getIntersection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>在 <code>Stage</code> 类中，元素拾取过程是遍历所有的层（<code>Layer</code>），并调用其 <code>getIntersection()</code> 方法，因此真正的元素拾取逻辑实现在 <code>Layer</code> 中。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="元素拾取">元素拾取<a href="https://wang1212.github.io/2023/08/08/computer-technology/web-frontend/konva/event-system#%E5%85%83%E7%B4%A0%E6%8B%BE%E5%8F%96" class="hash-link" aria-label="元素拾取的直接链接" title="元素拾取的直接链接">​</a></h2>
<p>第二阶段，是元素拾取的具体实现，Konva.js 采用了<strong>缓存 Canvas 颜色拾取（Color Pick）</strong> 的判定策略，意味着<strong>每一个 <code>Layer</code> 都对应着两个 Canvas 元素：用于渲染的场景画布（SceneCanvas）和用于元素拾取的命中测试缓存画布（HitCanvas）。</strong></p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/konvajs/konva/blob/9.3.11/src/Layer.ts#L57</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Layer</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Container</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Group </span><span class="token class-name operator" style="color:#393A34">|</span><span class="token class-name"> Shape</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  canvas </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">SceneCanvas</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  hitCanvas </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HitCanvas</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    pixelRatio</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>来看看 <code>getIntersection()</code> 方法是如何实现的：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/konvajs/konva/blob/9.3.11/src/Layer.ts#L321</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Layer</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Container</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Group </span><span class="token class-name operator" style="color:#393A34">|</span><span class="token class-name"> Shape</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * get visible intersection shape. This is the preferred</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * method for determining if a point intersects a shape or not</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * also you may pass optional selector parameter to return ancestor of intersected shape</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@method</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"></span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@name</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> Konva.Layer#getIntersection</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Object</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> pos</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Number</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> pos.x</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Number</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> pos.y</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@returns</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Konva.Node</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"></span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@example</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"></span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * var shape = layer.getIntersection(</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">x: 50, y: 50</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">);</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">getIntersection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Vector2d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isListening</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isVisible</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// in some cases antialiased area may be bigger than 1px</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// it is possible if we will cache node, then scale it a lot</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> spiralSearchDistance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> continueSearch </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">INTERSECTION_OFFSETS_LEN</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> intersectionOffset </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">INTERSECTION_OFFSETS</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> obj </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_getIntersection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          x</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> pos</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> intersectionOffset</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> spiralSearchDistance</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          y</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> pos</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> intersectionOffset</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> spiralSearchDistance</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> shape </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// we should continue search if we found antialiased pixel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// that means our node somewhere very close</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        continueSearch </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">antialiased</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// stop search if found empty pixel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">obj</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">antialiased</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// if no shape, and no antialiased pixel, we should end searching</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">continueSearch</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        spiralSearchDistance </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">_getIntersection</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Vector2d</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> shape</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Shape</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> antialiased</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">boolean</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ratio </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hitCanvas</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pixelRatio</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hitCanvas</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getImageData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">round</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> ratio</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">round</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> ratio</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> p3 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// fully opaque pixel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p3 </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">255</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> colorKey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_rgbToHex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> shape </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> shapes</span><span class="token punctuation" style="color:#393A34">[</span><span class="token constant" style="color:#36acaa">HASH</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> colorKey</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          shape</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        antialiased</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p3 </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// antialiased pixel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        antialiased</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// empty pixel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>根据以上源码来看，<strong>首先以拾取坐标为中心的 2×2 矩形中找出 5 个关键点（<code>INTERSECTION_OFFSETS</code>，中心和四个顶点）进行遍历，分别通过调用缓存画布（hitCanvas）的 <code>getImageData()</code> 来获取坐标点的像素值，然后在颜色与图形元素实例的映射表 <code>shapes</code> 中找到目标元素</strong>。这个过程中，实际上也考虑了抗锯齿像素对元素拾取产生的影响。</p>
<p>每一个元素实例都有一个唯一的 <code>colorKey</code>：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/konvajs/konva/blob/9.3.11/src/Shape.ts#L184</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Shape</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Config </span><span class="token class-name keyword" style="color:#00009f">extends</span><span class="token class-name"> ShapeConfig </span><span class="token class-name operator" style="color:#393A34">=</span><span class="token class-name"> ShapeConfig</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Node</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Config</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">config</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Config</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">config</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// set colorKey</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> key</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      key </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getRandomColor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key </span><span class="token keyword" style="color:#00009f">in</span><span class="token plain"> shapes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">colorKey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> key</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    shapes</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>每一个元素会同时在渲染画布和缓存画布中绘制一遍：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/konvajs/konva/blob/9.3.11/src/Shape.ts#L572</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Shape</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Config </span><span class="token class-name keyword" style="color:#00009f">extends</span><span class="token class-name"> ShapeConfig </span><span class="token class-name operator" style="color:#393A34">=</span><span class="token class-name"> ShapeConfig</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Node</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Config</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">getSceneFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sceneFunc </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'_sceneFunc'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">getHitFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attrs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hitFunc </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'_hitFunc'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">drawScene</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">can</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> SceneCanvas</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> top</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Node</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bufferCanvas</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> SceneCanvas</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> canvas </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> can </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> layer</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCanvas</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      context </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> canvas</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getContext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> SceneContext</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      cachedCanvas </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_getCanvasCache</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      drawFunc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getSceneFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">drawHit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">can</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> HitCanvas</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> top</span><span class="token operator" style="color:#393A34">?</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Node</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> skipDragCheck </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> layer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getLayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      canvas </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> can </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> layer</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">hitCanvas</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      context </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> canvas </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> canvas</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getContext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      drawFunc </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">hitFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sceneFunc</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>根据源码可以看到，绘制时分别调用了 <code>sceneFunc()</code> 和 <code>hitFunc()</code>，但前者作为后者的备选项，也就是说默认情况下渲染两次实际上调用的都是 <code>sceneFunc()</code>，确保图形元素的绘制结果（即形状）一致（<code>hitFunc()</code> 可以自定义实现，参考<a href="https://konvajs.org/docs/events/Custom_Hit_Region.html" target="_blank" rel="noopener noreferrer">文档</a>）。不同的是，缓存画布中绘制时使用了元素的 <code>colorKey</code> 对应的颜色：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/konvajs/konva/blob/9.3.11/src/Context.ts#L984</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">HitContext</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Context</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">_stroke</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">hasHitStroke</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// ignore strokeScaleEnabled for Text</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> strokeScaleEnabled </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getStrokeScaleEnabled</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">strokeScaleEnabled</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> pixelRatio </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCanvas</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getPixelRatio</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setTransform</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pixelRatio</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pixelRatio</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_applyLineCap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> hitStrokeWidth </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">hitStrokeWidth</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> strokeWidth </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hitStrokeWidth </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'auto'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">strokeWidth</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> hitStrokeWidth</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setAttr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'lineWidth'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> strokeWidth</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">setAttr</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'strokeStyle'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">colorKey</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">_strokeFuncHit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">strokeScaleEnabled</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">restore</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>以上就是 Konva.js 事件系统实现的大致原理。简单的来说，<strong>Konva.js 会在实例化每个元素时，为其生成一个 <code>colorKey</code>，该值实际上代表一个随机颜色，在绘制该元素时，会以该随机颜色为填充色将该元素图形同时绘制在缓存画布（HitCanvas）中，当用户在渲染画布（SceneCanvas）中进行交互时，会根据触发的 DOM 事件得到一个坐标，根据该坐标从缓存画布（HitCanvas）中拾取像素值，再根据该色值从元素与颜色映射表中获取元素实例。</strong></p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="延伸重叠元素的拾取">延伸：重叠元素的拾取<a href="https://wang1212.github.io/2023/08/08/computer-technology/web-frontend/konva/event-system#%E5%BB%B6%E4%BC%B8%E9%87%8D%E5%8F%A0%E5%85%83%E7%B4%A0%E7%9A%84%E6%8B%BE%E5%8F%96" class="hash-link" aria-label="延伸：重叠元素的拾取的直接链接" title="延伸：重叠元素的拾取的直接链接">​</a></h2>
<p>上述分析中，实际上没有考虑到当多个元素在同一个坐标点重叠时的情况。根据上述实现，在渲染过程中，在同一个坐标点上后渲染的元素会覆盖掉之前渲染元素的颜色，最终拾取时得到的是最后一次渲染元素的颜色，这适用于大多数业务场景，仅获取最顶层元素。</p>
<p>实际上，Konva.js 提供了一个拾取重叠元素的 APIs <a href="https://konvajs.org/api/Konva.Stage.html#getAllIntersections__anchor" target="_blank" rel="noopener noreferrer"><code>getAllIntersections()</code></a>，来看看其源码实现：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/konvajs/konva/blob/9.3.11/src/Container.ts#L317</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">abstract</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Container</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">ChildType </span><span class="token class-name keyword" style="color:#00009f">extends</span><span class="token class-name"> Node </span><span class="token class-name operator" style="color:#393A34">=</span><span class="token class-name"> Node</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Node</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">ContainerConfig</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * get all shapes that intersect a point.  Note: because this method must clear a temporary</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * canvas and redraw every shape inside the container, it should only be used for special situations</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * because it performs very poorly.  Please use the </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@link</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> Konva.Stage#getIntersection</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> method if at all possible</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * because it performs much better</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@method</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"></span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@name</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> Konva.Container#getAllIntersections</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Object</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> pos</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Number</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> pos.x</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Number</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> pos.y</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@returns</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Array</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> array of shapes</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">getAllIntersections</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> arr</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Shape</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token generic-function function" style="color:#d73a49">find</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name">Shape</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Shape'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isVisible</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> shape</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">intersects</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">pos</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        arr</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">shape</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> arr</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>遍历场景中的所有可见元素，并调用元素的 <code>intersects()</code> 方法进行相交测试：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/konvajs/konva/blob/9.3.11/src/Shape.ts#L440</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Shape</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Config </span><span class="token class-name keyword" style="color:#00009f">extends</span><span class="token class-name"> ShapeConfig </span><span class="token class-name operator" style="color:#393A34">=</span><span class="token class-name"> ShapeConfig</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Node</span><span class="token class-name operator" style="color:#393A34">&lt;</span><span class="token class-name">Config</span><span class="token class-name operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * determines if point is in the shape, regardless if other shapes are on top of it.  Note: because</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   *  this method clears a temporary canvas and then redraws the shape, it performs very poorly if executed many times</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   *  consecutively.  Please use the </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@link</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> Konva.Stage#getIntersection</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> method if at all possible</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   *  because it performs much better</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@method</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"></span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@name</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> Konva.Shape#intersects</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Object</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> point</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Number</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> point.x</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@param</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Number</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> point.y</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@returns</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> </span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">{</span><span class="token doc-comment comment" style="color:#999988;font-style:italic">Boolean</span><span class="token doc-comment comment punctuation" style="color:#393A34;font-style:italic">}</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"></span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">   */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">intersects</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">point</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> stage </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getStage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">stage</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> bufferHitCanvas </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> stage</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">bufferHitCanvas</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    bufferHitCanvas</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getContext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">clear</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">drawHit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">bufferHitCanvas</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">undefined</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> bufferHitCanvas</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getImageData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">round</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">point</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">round</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">point</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>依次将每个元素的缓存图像数据绘制到全局的缓存画布中，并拾取坐标点的像素颜色来判断是否相交。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="参考资源">参考资源<a href="https://wang1212.github.io/2023/08/08/computer-technology/web-frontend/konva/event-system#%E5%8F%82%E8%80%83%E8%B5%84%E6%BA%90" class="hash-link" aria-label="参考资源的直接链接" title="参考资源的直接链接">​</a></h2>
<ul>
<li><a href="https://konvajs.org/" target="_blank" rel="noopener noreferrer">https://konvajs.org/</a></li>
<li><a href="https://konvajs.org/docs/events/Image_Events.html" target="_blank" rel="noopener noreferrer">https://konvajs.org/docs/events/Image_Events.html</a></li>
</ul>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>计算机技术</category>
            <category>Web 前端</category>
            <category>数据可视化</category>
            <category>Konva.js</category>
            <category>Canvas</category>
            <category>源码解析</category>
        </item>
        <item>
            <title><![CDATA[谈谈笔记记录和知识管理工具]]></title>
            <link>https://wang1212.github.io/2023/07/22/tools/notes-app</link>
            <guid>https://wang1212.github.io/2023/07/22/tools/notes-app</guid>
            <pubDate>Sat, 22 Jul 2023 23:00:00 GMT</pubDate>
            <description><![CDATA[对于大部分人来说，有一个适合自己需求，同时免费又好用的笔记应用或者知识管理工具是很难得的。]]></description>
            <content:encoded><![CDATA[<p>不管是在学校还是工作后，记录一直是个很好的习惯，方便积累经验并阶段性进行回顾总结。因此，对于大部分人来说，有一个适合自己需求，同时免费又好用的笔记应用或者知识管理工具是很难得的。</p>
<p>从大学开始就一直在坚持更新博客，期间有相当长一段时间博客几乎没怎么更新过，不过终归还是坚持下来了。随着时间的推移，发现认真写一篇博文耗费的时间成本太高，要么只能在周末抽空，要么就断断续续几天才能写完，这也直接导致坚持更新博客的难度加大。其实这件事情的本质不是对于记录这个行为本身产生了懈怠，而是有很多可以用来记录的小事，但要将其发布成一篇篇博文的代价太大，追求效率就容易在质量上大打折扣，还不如不写。以至于现在每每回过头来看，积攒了大量的待完成的小任务，而整理这些小任务也不是那么容易。</p>
<p>说了这么多，问题的本质在于平时一些小的知识记录缺乏一个比较有效的管理工具应用，因为以前都是直接用 Markdown 编辑器和文件夹进行管理的，为了方便同步，还会用网易有道云笔记这类软件进行记录，但一直觉得不怎么好用。</p>
<p>最开始使用的是 <a href="https://www.typora.io/" target="_blank" rel="noopener noreferrer">typora</a> 的测试版，因为其可以免费使用，后来其正式版发布后收费了就弃用了。有很多人说可以用破解版，我倒觉得没有必要，如此良心的软件，付不起钱就换个免费的吧。后来换了 <a href="https://www.zettlr.com/" target="_blank" rel="noopener noreferrer">Zettlr</a>，用了相当长一段时间，其功能和 UI 交互体验一直觉得很别扭，有时候觉得甚至不如在 VSCode 里面直接写 Markdown 来得方便。后来又改用 <a href="https://github.com/marktext/marktext" target="_blank" rel="noopener noreferrer">MarkText</a>，体验要好很多，不过这个开源项目好像维护的频率很低了。以上都只是 Markdown 文件编辑器，后来就开始慢慢了解一些笔记应用了。</p>
<p>Notable、VNote、Anki 这些简单的笔记应用都了解过，但始终觉得不是自己想要的东西。后来了解到了 <a href="https://joplinapp.org/" target="_blank" rel="noopener noreferrer">Joplin</a>，发现其比较契合自己的需求，简单使用了之后，发现其同步功能使用起来太麻烦，还有一些其它细节上的问题不是很合意，就放弃长期使用了。在这期间，还了解过一个开源的知识管理工具 <a href="https://github.com/zadam/trilium" target="_blank" rel="noopener noreferrer">Trilium Notes</a>，其功能异常强大，但也相当复杂，上手成本太高，一直没怎么有时间去仔细研究，而且也不支持中文，看作者的意思短期内也不打算支持。折腾了一圈后，还是暂时回到 Markdown 编辑器了。</p>
<p>直到近期，在看 ThoughtWorks Technology Radar 时，不经意看到博文里提到了团队知识管理工具，其中简单对比了 <a href="https://obsidian.md/" target="_blank" rel="noopener noreferrer">Obsidian</a> 和 <a href="https://logseq.com/" target="_blank" rel="noopener noreferrer">Logseq</a> 这两个工具，一时间竟引起了我的兴趣。知识图谱这个概念这几年听的比较多，但从没想过个人笔记记录和这个会产生什么关联。在简单的了解了这两款工具应用后，就联想到了 Trilium Notes，不同的是，前两者可能上手成本低一些，用户体验应该也会更好一些。遂打算下载安装试用一下，在简单的试用过后，发现 Logseq 这个应用比较好用，而且也是个开源社区维护的软件，对于一直偏爱于开源软件的我来说最合适不过了。</p>
<p>Obsidian 是一个商业软件，但对个人用户免费，也提供一些收费的增值服务，简单调研过后发现用户群应该也不少，而且口碑也很好，但我倒不怎么喜欢在个人的事情上用一些商业软件。**Obsidian 与 Logseq 有一个很大的不同点在于，前者是以大家熟悉的文件夹形式管理笔记的，但后者却是以块的形式和链接引用的方式来管理笔记，虽然它们都是基于图数据库的。**在一直写博客的过程中遇到过基于文件夹管理的文章，有时候很难做文件夹分类，而 Logseq 这种模式就感觉很适合，尤其是记录平时一些零碎的事情的时候。在使用了一段时间后，也了解了一些其它人使用后的对比体验和总结，<strong>发现像 Logseq 这种基于块的模式，写以前那种具有上下文的完整的一篇文章倒不是那么容易。</strong></p>
<p>最终，在深度使用后，发现 Logseq 可以解决以前零散的知识记录不好管理的问题，博客可以继续坚持更新，博文像是对平时记录的一些知识的一个全方位的总结，更具有意义。另一方面，Logseq 自身的功能以及插件提供的一些功能很方便，例如绘图、任务管理等等，这些都是平时记录东西或者做规划很常用的功能。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="参考">参考<a href="https://wang1212.github.io/2023/07/22/tools/notes-app#%E5%8F%82%E8%80%83" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h2>
<ul>
<li><a href="https://www.typora.io/" target="_blank" rel="noopener noreferrer">https://www.typora.io/</a></li>
<li><a href="https://www.zettlr.com/" target="_blank" rel="noopener noreferrer">https://www.zettlr.com/</a></li>
<li><a href="https://github.com/marktext/marktext" target="_blank" rel="noopener noreferrer">https://github.com/marktext/marktext</a></li>
<li><a href="https://joplinapp.org/" target="_blank" rel="noopener noreferrer">https://joplinapp.org/</a></li>
<li><a href="https://obsidian.md/" target="_blank" rel="noopener noreferrer">https://obsidian.md/</a></li>
<li><a href="https://logseq.com/" target="_blank" rel="noopener noreferrer">https://logseq.com/</a></li>
</ul>]]></content:encoded>
            <author>mrwang1212@126.com (不如怀念)</author>
            <category>工具</category>
            <category>笔记</category>
            <category>知识管理</category>
            <category>随笔杂谈</category>
        </item>
    </channel>
</rss>