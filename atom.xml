<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wang1212.github.io</id>
    <title>不如怀念 Blog</title>
    <updated>2025-07-13T13:43:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wang1212.github.io"/>
    <subtitle>不如怀念 Blog</subtitle>
    <icon>https://wang1212.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W28：Grok 4 发布与 AI 企业服务转型]]></title>
        <id>https://wang1212.github.io/2025/07/13/weekly/2025/weekly-review-ep2025w28</id>
        <link href="https://wang1212.github.io/2025/07/13/weekly/2025/weekly-review-ep2025w28"/>
        <updated>2025-07-13T13:43:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 28 周的回顾，xAI 发布的 Grok 4 虽在基准测试中表现出色，但实际用户反馈不佳，凸显了 AI 模型性能商品化时代，独特价值而非单纯分数更能决定市场成功。同时，Cody 和 TabNine 等 AI 代码工具取消免费计划并转向企业客户，以及 Vercel 收购 NuxtLabs，均表明 AI 和前端服务市场正经历商业模式调整与资源整合，基础大模型性能仍是核心竞争力。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>xAI 发布的 Grok 4 虽在基准测试中表现出色，但实际用户反馈不佳，凸显了 AI 模型性能商品化时代，独特价值而非单纯分数更能决定市场成功。同时，Cody 和 TabNine 等 AI 代码工具取消免费计划并转向企业客户，以及 Vercel 收购 NuxtLabs，均表明 AI 和前端服务市场正经历商业模式调整与资源整合，基础大模型性能仍是核心竞争力。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="grok-4"><a href="https://x.ai/news/grok-4" target="_blank" rel="noopener noreferrer">Grok 4</a><a href="https://wang1212.github.io/2025/07/13/weekly/2025/weekly-review-ep2025w28#grok-4" class="hash-link" aria-label="grok-4的直接链接" title="grok-4的直接链接">​</a></h5>
<p>在本周，xAI 发布了 Grok 4，官方宣布在所有基准测试中都排名领先，但实际的用户反馈却并非如此。Grok 4 代表了 xAI 的重大技术成就（基准领先、并行计算创新），但市场成功受限于产品差异化不足、高价格和文化风险。模型性能商品化时代，AI 采用依赖独特价值（如 Claude 的“品味”或开源模型的可部署性），而非仅靠分数。</p>
<ul>
<li><a href="https://www.interconnects.ai/p/grok-4-an-o3-look-alike-in-search" target="_blank" rel="noopener noreferrer">Grok 4: An O3 Look-Alike in Search</a></li>
</ul>
<p><code>Grok</code> <code>AI</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="changes-to-cody-free-pro-and-enterprise-starter-plans"><a href="https://sourcegraph.com/blog/changes-to-cody-free-pro-and-enterprise-starter-plans" target="_blank" rel="noopener noreferrer">Changes to Cody Free, Pro, and Enterprise Starter plans</a><a href="https://wang1212.github.io/2025/07/13/weekly/2025/weekly-review-ep2025w28#changes-to-cody-free-pro-and-enterprise-starter-plans" class="hash-link" aria-label="changes-to-cody-free-pro-and-enterprise-starter-plans的直接链接" title="changes-to-cody-free-pro-and-enterprise-starter-plans的直接链接">​</a></h5>
<p>继年初 TabNine 的免费计划被取消后，近期 Sourcegraph 的 Cody 也做出了类似的调整，取消了免费计划，而他们都将服务客户的重心转向了企业客户。无独有偶，这个周末还有一则重磅新闻，那就是 Google 收购了 Windsurf 创始人领导的核心研发团队，Windsurf 也重申了他们的目标是服务好企业客户。同时，结合近期 Cursor 不断的调整其付费计划，从而引起了大量开发者用户的不满的现状，不禁让其想起了过去的一年大家都说是大模型元年，今年应该是 AI 产品蓬勃发展的一年，但就从目前大家一致认为最能产生价值的 AI 代码代理赛道发生的一系列变化来看，似乎基础大模型的性能仍然是构建 AI 产品的核心优势能力。</p>
<p><code>AI</code> <code>Sourcegraph</code> <code>Cody</code> <code>TabNine</code> <code>Google</code> <code>Windsurf</code> <code>Cursor</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="nuxtlabs-joins-vercel"><a href="https://vercel.com/blog/nuxtlabs-joins-vercel" target="_blank" rel="noopener noreferrer">NuxtLabs joins Vercel</a><a href="https://wang1212.github.io/2025/07/13/weekly/2025/weekly-review-ep2025w28#nuxtlabs-joins-vercel" class="hash-link" aria-label="nuxtlabs-joins-vercel的直接链接" title="nuxtlabs-joins-vercel的直接链接">​</a></h5>
<p>Vercel 宣布收购了 NuxtLabs，作为前端开发者最喜欢的云服务商，Vercel 正在将他们亲手构建的 Next.js 元框架的竞争对手和生态伙伴收入麾下。也许，这意味前端开发者将拥有更好的体验，但另一方面也意味着资源的过度集中可能对市场产生负面影响。</p>
<p><code>Vercel</code> <code>NuxtLabs</code> <code>Next.js</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="repomix"><a href="https://repomix.com/" target="_blank" rel="noopener noreferrer">RepoMix</a><a href="https://wang1212.github.io/2025/07/13/weekly/2025/weekly-review-ep2025w28#repomix" class="hash-link" aria-label="repomix的直接链接" title="repomix的直接链接">​</a></h5>
<p>Repomix 是一款功能强大的工具，它可以将您的整个代码库打包成一个 AI 友好的文件。无论您是在进行代码审查、重构，还是在项目中寻求 AI 协助，Repomix 都能让您轻松地与 AI 工具共享整个代码库上下文。</p>
<p><code>Repomix</code> <code>AI</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-generative-ai-tech-stack"><a href="https://blog.bytebytego.com/p/ep171-the-generative-ai-tech-stack" target="_blank" rel="noopener noreferrer">The Generative AI Tech Stack</a><a href="https://wang1212.github.io/2025/07/13/weekly/2025/weekly-review-ep2025w28#the-generative-ai-tech-stack" class="hash-link" aria-label="the-generative-ai-tech-stack的直接链接" title="the-generative-ai-tech-stack的直接链接">​</a></h5>
<p>ByteByteGo 第 171 期内容带来的是生成式 AI（Generative AI）领域的技术堆栈介绍，GenAI 是指能够通过从现有数据中学习模式来创建新内容（例如文本、图像、代码或音乐）的系统。</p>
<p><code>&lt;&lt;ByteByteGo&gt;&gt;</code> <code>AI</code> <code>Tech Stack</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="andrej-karpathy-on-software-30-software-in-the-age-of-ai"><a href="https://www.youtube.com/watch?v=LCEmiRjPEtQ" target="_blank" rel="noopener noreferrer">Andrej Karpathy on Software 3.0: Software in the Age of AI</a><a href="https://wang1212.github.io/2025/07/13/weekly/2025/weekly-review-ep2025w28#andrej-karpathy-on-software-30-software-in-the-age-of-ai" class="hash-link" aria-label="andrej-karpathy-on-software-30-software-in-the-age-of-ai的直接链接" title="andrej-karpathy-on-software-30-software-in-the-age-of-ai的直接链接">​</a></h5>
<p>OpenAI 创始人 Andrej Karpathy 一次经常的演讲，他认为软件已进入「3.0时代」，以自然语言为编程接口，大型语言模型（LLMs）成为新型操作系统，可类比为 1960 年代早期计算机的进化阶段。另外，他也是提出 Vibe Coding 概念的人。</p>
<ul>
<li><a href="https://www.latent.space/p/s3" target="_blank" rel="noopener noreferrer">Software 3.0: Software in the Age of AI</a></li>
<li><a href="https://mp.weixin.qq.com/s/myW5FeVSsb1a8nsxMFj3IA" target="_blank" rel="noopener noreferrer">AI大神Andrej Karpathy爆火演讲，为何值得开发者反复观看？</a></li>
</ul>
<p><code>AI</code> <code>Software 3.0</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W26：ECMAScript 2025 正式发布，AI 代理与前端工具持续演进]]></title>
        <id>https://wang1212.github.io/2025/06/29/weekly/2025/weekly-review-ep2025w26</id>
        <link href="https://wang1212.github.io/2025/06/29/weekly/2025/weekly-review-ep2025w26"/>
        <updated>2025-06-29T12:48:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 26 周的回顾，ECMAScript 2025 正式发布，引入了 using 关键字和 Array.fromAsync 等新特性。同时，AI 领域Agentic RAG 概念的提出，强调了更智能的检索增强生成。前端工具方面，Prettier 发布了性能优化的新版本，Three.js 的色器语言 TSL 支持编译到多个目标环境。此外，Google 发布了开源的 Gemini CLI，为开发者提供了便捷的 AI 命令行交互工具。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>ECMAScript 2025 正式发布，引入了 using 关键字和 Array.fromAsync 等新特性。同时，AI 领域Agentic RAG 概念的提出，强调了更智能的检索增强生成。前端工具方面，Prettier 发布了性能优化的新版本，Three.js 的色器语言 TSL 支持编译到多个目标环境。此外，Google 发布了开源的 Gemini CLI，为开发者提供了便捷的 AI 命令行交互工具。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="whats-coming-to-javascript"><a href="https://deno.com/blog/updates-from-tc39" target="_blank" rel="noopener noreferrer">What's coming to JavaScript</a><a href="https://wang1212.github.io/2025/06/29/weekly/2025/weekly-review-ep2025w26#whats-coming-to-javascript" class="hash-link" aria-label="whats-coming-to-javascript的直接链接" title="whats-coming-to-javascript的直接链接">​</a></h5>
<p>TC39 第 108 次会议最近 提出了 4 个阶段的 9 项提案，代表了从粗略想法（阶段 0）到完全标准化的特征（阶段 4）。其中阶段 4 的提案基本上代表会在不久的将来成为 JavaScript 的一部分，这一次包含了使用 <code>using</code> 关键字自动化管理资源的使用和释放，<code>Array.fromAsync</code> 支持异步填充数组元素，<code>Error.isError()</code> 检查一个对象是否是错误等。另外，第 129 届 Ecma 大会批准了 ECMAScript 2025 语言规范，这意味着它现在正式成为标准。</p>
<ul>
<li><a href="https://2ality.com/2025/06/ecmascript-2025.html" target="_blank" rel="noopener noreferrer">Ecma International approves ECMAScript 2025: What’s new?</a></li>
</ul>
<p><code>TC39</code> <code>JavaScript</code> <code>ECMAScript</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rag-vs-agentic-rag"><a href="https://blog.bytebytego.com/p/ep169-rag-vs-agentic-rag" target="_blank" rel="noopener noreferrer">RAG vs Agentic RAG</a><a href="https://wang1212.github.io/2025/06/29/weekly/2025/weekly-review-ep2025w26#rag-vs-agentic-rag" class="hash-link" aria-label="rag-vs-agentic-rag的直接链接" title="rag-vs-agentic-rag的直接链接">​</a></h5>
<p>传统的 RAG（Retrieval-Augmented Generation）检索简单、适应性有限，且依赖于静态知识，对于动态、实时信息的灵活性较差。Agentic RAG 对此进行了改进，引入了 AI 代理，这些代理可以做出决策、选择工具，甚至优化查询以获得更准确、更灵活的响应。</p>
<p><code>RAG</code> <code>Agentic</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="prettier-360"><a href="https://prettier.io/blog/2025/06/23/3.6.0" target="_blank" rel="noopener noreferrer">Prettier 3.6.0</a><a href="https://wang1212.github.io/2025/06/29/weekly/2025/weekly-review-ep2025w26#prettier-360" class="hash-link" aria-label="prettier-360的直接链接" title="prettier-360的直接链接">​</a></h5>
<p>Prettier v3.6 发布，现在经过性能优化的 CLI 工具只需通过一个 flag 配置即可启用。</p>
<p><code>Prettier</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="threejs-shading-language"><a href="https://github.com/mrdoob/three.js/wiki/Three.js-Shading-Language" target="_blank" rel="noopener noreferrer">Three.js Shading Language</a><a href="https://wang1212.github.io/2025/06/29/weekly/2025/weekly-review-ep2025w26#threejs-shading-language" class="hash-link" aria-label="threejs-shading-language的直接链接" title="threejs-shading-language的直接链接">​</a></h5>
<p>Three.js 创建了自己的着色器语言，目的是为了让开发者更容易地创建 GPU 程序，其直接由 JavaScript 编写，且对类型友好，更重要的是其可以编译成不同目标环境的着色器代码，例如 WebGL、WebGPU 等。</p>
<p><code>Three.js</code> <code>Shading</code> <code>Language</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="jpeg-image-format-history"><a href="https://spectrum.ieee.org/jpeg-image-format-history" target="_blank" rel="noopener noreferrer">JPEG Image Format History</a><a href="https://wang1212.github.io/2025/06/29/weekly/2025/weekly-review-ep2025w26#jpeg-image-format-history" class="hash-link" aria-label="jpeg-image-format-history的直接链接" title="jpeg-image-format-history的直接链接">​</a></h5>
<p>JPEG 图像格式的发展历程。JPEG 的成功源于委员会驱动的标准化、DCT 压缩的效率性和历史时机（例如 GIF 专利问题推动采用）。尽管技术局限存在，它通过高兼容性和"降级友好"设计，奠定了互联网图像共享基础。虽然现在有许多更先进的图像格式（WebP、AVIF 等），但 JPEG 仍然是最广泛使用的格式之一并将长期存在。</p>
<p><code>JPEG</code> <code>Image</code> <code>Format</code> <code>History</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="gemini-cli-your-open-source-ai-agent"><a href="https://blog.google/technology/developers/introducing-gemini-cli-open-source-ai-agent/" target="_blank" rel="noopener noreferrer">Gemini CLI: your open-source AI agent</a><a href="https://wang1212.github.io/2025/06/29/weekly/2025/weekly-review-ep2025w26#gemini-cli-your-open-source-ai-agent" class="hash-link" aria-label="gemini-cli-your-open-source-ai-agent的直接链接" title="gemini-cli-your-open-source-ai-agent的直接链接">​</a></h5>
<p>Google 发布了 Gemini CLI，一个开源的 AI 代理工具，它提供了一个命令行界面，可以让你通过自然语言与 AI 代理进行交互。同类型的还有 Claude Code、OpenAI Codex CLI 等等，不过 Google 不仅提供了免费版，更提供了业界最优惠的请求限制，每分钟 60 个模型请求和每天 1000 个模型请求。</p>
<p><code>AI</code> <code>Gemini</code> <code>CLI</code> <code>Google</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="react-visualized"><a href="https://react.gg/visualized" target="_blank" rel="noopener noreferrer">React Visualized</a><a href="https://wang1212.github.io/2025/06/29/weekly/2025/weekly-review-ep2025w26#react-visualized" class="hash-link" aria-label="react-visualized的直接链接" title="react-visualized的直接链接">​</a></h5>
<p>React Visualized 是一个以可视化方式来一步一步探索 React 的工作原理的教程。</p>
<p><code>React.js</code> <code>Visualized</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W25：AI 编程趋势、React 发展与 AI 代理安全]]></title>
        <id>https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25</id>
        <link href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25"/>
        <updated>2025-06-22T22:18:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 25 周的回顾，Motion AI 通过 MCP Server 实现自然语言生成动画代码，预示着开源库适应 AI 编程新模式的趋势；React 发布 12 周年，其声明式 UI 哲学对 Web 技术发展影响深远；文章强调 AI 代理面临私人数据、不可信内容和外部通信的安全挑战；此外，还有将复杂 TypeScript 类型解释为函数的实用工具 Type Buddy，以及 Google Gemini 和 LangGraph 构建全栈代理应用的快速入门指南。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>Motion AI 通过 MCP Server 实现自然语言生成动画代码，预示着开源库适应 AI 编程新模式的趋势；React 发布 12 周年，其声明式 UI 哲学对 Web 技术发展影响深远；文章强调 AI 代理面临私人数据、不可信内容和外部通信的安全挑战；此外，还有将复杂 TypeScript 类型解释为函数的实用工具 Type Buddy，以及 Google Gemini 和 LangGraph 构建全栈代理应用的快速入门指南。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="why-i-write-about-ai"><a href="https://newsletter.victordibia.com/p/why-i-write-about-ai" target="_blank" rel="noopener noreferrer">Why I write about AI</a><a href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25#why-i-write-about-ai" class="hash-link" aria-label="why-i-write-about-ai的直接链接" title="why-i-write-about-ai的直接链接">​</a></h5>
<p>Victor Dibia 分享了他写关于 AI 的原因，他认为 AI 会改变我们对技术的看法，改变我们对技术的使用方式，改变我们对技术的思考方式。只有我们亲自去实践、去思考，才能真正理解 AI 的力量。</p>
<p><code>写作</code> <code>AI</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="motion-ai"><a href="https://motion.dev/docs/ai-llm-documentation" target="_blank" rel="noopener noreferrer">Motion AI</a><a href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25#motion-ai" class="hash-link" aria-label="motion-ai的直接链接" title="motion-ai的直接链接">​</a></h5>
<p>动画库 motion 提供了 MCP Server，以便使用 AI IDE 的开发者现在能够通过自然语言来生成 motion 代码，更高效的实现动画效果。事实上，React 团队目前也在尝试构建 MCP Server 以实现自动优化代码。鉴于这种趋势，以后重要的开源社区库似乎都应用提供一个 MCP Server 来适应这种新的 AI 编程模式。</p>
<p><code>AI</code> <code>动画</code> <code>Motion</code> <code>MCP Server</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-story-of-react"><a href="https://www.youtube.com/watch?v=Wm_xI7KntDs" target="_blank" rel="noopener noreferrer">The Story of React</a><a href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25#the-story-of-react" class="hash-link" aria-label="the-story-of-react的直接链接" title="the-story-of-react的直接链接">​</a></h5>
<p>正值 React 发布 12 周年，回头再去看看 React 的发展历史，对于 Web 技术的发展历程能有更进一步的理解。React 声明式 UI 的设计哲学，将 UI 视图抽象为基于状态的函数式计算结果，UI 的状态管理与渲染逻辑分离，通过组件的组合来构建复杂的 UI，极大地提高了开发效率。</p>
<p><code>Web 前端</code> <code>React</code> <code>Web 技术</code> <code>发展历程</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-lethal-trifecta-for-ai-agents-private-data-untrusted-content-and-external-communication"><a href="https://simonwillison.net/2025/Jun/16/the-lethal-trifecta/" target="_blank" rel="noopener noreferrer">The lethal trifecta for AI agents: private data, untrusted content, and external communication</a><a href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25#the-lethal-trifecta-for-ai-agents-private-data-untrusted-content-and-external-communication" class="hash-link" aria-label="the-lethal-trifecta-for-ai-agents-private-data-untrusted-content-and-external-communication的直接链接" title="the-lethal-trifecta-for-ai-agents-private-data-untrusted-content-and-external-communication的直接链接">​</a></h5>
<p>这篇文章讲述了人工智能代理的致命三重打击：私人数据、不受信任的内容和外部通信。当前 AI 应用火热的背景下，数据安全已经成为一个重要的话题和关注点，尤其是对于普通用户来说，使用 AI 工具将比以往使用传统软件更容易泄露自己的数据。</p>
<p><code>AI</code> <code>AI 代理</code> <code>数据安全</code> <code>私有数据</code> <code>不可信内容</code> <code>外部通信</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="github---type-buddy"><a href="https://github.com/typed-rocks/type-buddy" target="_blank" rel="noopener noreferrer">Github - Type Buddy</a><a href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25#github---type-buddy" class="hash-link" aria-label="github---type-buddy的直接链接" title="github---type-buddy的直接链接">​</a></h5>
<p>一个有趣的小工具，可以将复杂的 TypeScript 类型定义解释为函数，以便能够更直观的理解其逻辑。</p>
<p><code>TypeScript</code> <code>类型定义</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="github---google-gemini-fullstack-langgraph-quickstart"><a href="https://github.com/google-gemini/gemini-fullstack-langgraph-quickstart" target="_blank" rel="noopener noreferrer">Github - Google Gemini FullStack LangGraph Quickstart</a><a href="https://wang1212.github.io/2025/06/22/weekly/2025/weekly-review-ep2025w25#github---google-gemini-fullstack-langgraph-quickstart" class="hash-link" aria-label="github---google-gemini-fullstack-langgraph-quickstart的直接链接" title="github---google-gemini-fullstack-langgraph-quickstart的直接链接">​</a></h5>
<p>Google 发布了一个使用 Gemini 模型和 LangGraph 框架构建的全栈代理应用，可作为快速入门指南的参考项目。</p>
<p><code>AI</code> <code>Google Gemini</code> <code>LangGraph</code> <code>全栈代理应用</code> <code>快速入门指南</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W24：React 服务器组件中导入的工作原理]]></title>
        <id>https://wang1212.github.io/2025/06/15/weekly/2025/weekly-review-ep2025w24</id>
        <link href="https://wang1212.github.io/2025/06/15/weekly/2025/weekly-review-ep2025w24"/>
        <updated>2025-06-15T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 24 周的回顾，Dan Abramov 的最新博文深入探讨了 React Server Components (RSC) 中导入的机制。文章阐述了 RSC 如何通过扩展 JavaScript 的模块系统，实现客户端与服务端代码的统一编写和边界控制，从而优化了在 React 应用中处理导入的方式。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>Dan Abramov 的最新博文深入探讨了 React Server Components (RSC) 中导入的机制。文章阐述了 RSC 如何通过扩展 JavaScript 的模块系统，实现客户端与服务端代码的统一编写和边界控制，从而优化了在 React 应用中处理导入的方式。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="how-imports-work-in-rsc"><a href="https://overreacted.io/how-imports-work-in-rsc/" target="_blank" rel="noopener noreferrer">How Imports Work in RSC</a><a href="https://wang1212.github.io/2025/06/15/weekly/2025/weekly-review-ep2025w24#how-imports-work-in-rsc" class="hash-link" aria-label="how-imports-work-in-rsc的直接链接" title="how-imports-work-in-rsc的直接链接">​</a></h5>
<p>Dan Abramov 新的博文，介绍了 React Server Components (RSC) 中导入（import）的工作原理，通过扩展 JavaScript 模块系统（<code>import</code>/<code>export</code>），实现客户端/服务端代码的统一编写与边界控制。</p>
<p><code>React.js</code> <code>React Server Components</code> <code>import</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W23：探索 Claude 4 系统提示与渐进式 JSON]]></title>
        <id>https://wang1212.github.io/2025/06/08/weekly/2025/weekly-review-ep2025w23</id>
        <link href="https://wang1212.github.io/2025/06/08/weekly/2025/weekly-review-ep2025w23"/>
        <updated>2025-06-08T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 23 周的回顾，Anthropic 发布了 Claude 4 系统提示符，揭示了其如何通过提示工程塑造模型行为。同时，Dan Abramov 提出了渐进式 JSON 概念，借鉴 JPEG 渐进式加载，通过广度优先传输和占位符使客户端能部分处理数据，提升并行性，旨在解决数据加载瓶颈。React Server Components (RSC) 也采用了此流式传输模型，作者呼吁工具生态系统采纳渐进式流式传输以优化性能。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>Anthropic 发布了 Claude 4 系统提示符，揭示了其如何通过提示工程塑造模型行为。同时，Dan Abramov 提出了渐进式 JSON 概念，借鉴 JPEG 渐进式加载，通过广度优先传输和占位符使客户端能部分处理数据，提升并行性，旨在解决数据加载瓶颈。React Server Components (RSC) 也采用了此流式传输模型，作者呼吁工具生态系统采纳渐进式流式传输以优化性能。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="highlights-from-the-claude-4-system-prompt"><a href="https://simonwillison.net/2025/May/25/claude-4-system-prompt/" target="_blank" rel="noopener noreferrer">Highlights from the Claude 4 system prompt</a><a href="https://wang1212.github.io/2025/06/08/weekly/2025/weekly-review-ep2025w23#highlights-from-the-claude-4-system-prompt" class="hash-link" aria-label="highlights-from-the-claude-4-system-prompt的直接链接" title="highlights-from-the-claude-4-system-prompt的直接链接">​</a></h5>
<p>Anthropic 将其聊天模型的大部分系统提示符作为发行说明的一部分发布，让我们有机会来了解 Anthropic 如何通过提示工程塑造模型行为。</p>
<p><code>AI</code> <code>Anthropic</code> <code>Claude</code> <code>提示工程</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rsc-for-lisp-developers"><a href="https://overreacted.io/rsc-for-lisp-developers/" target="_blank" rel="noopener noreferrer">RSC for LISP Developers</a><a href="https://wang1212.github.io/2025/06/08/weekly/2025/weekly-review-ep2025w23#rsc-for-lisp-developers" class="hash-link" aria-label="rsc-for-lisp-developers的直接链接" title="rsc-for-lisp-developers的直接链接">​</a></h5>
<p>Dan Abramov 的新博文以类比论证（RSC ≈ LISP 引用）为中心，提出 RSC 作为现代 Web 开发的实用创新点，优点包括高效跨环境组合和流式处理。</p>
<p><code>React.js</code> <code>RSC</code> <code>LISP</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="progressive-json"><a href="https://overreacted.io/progressive-json/" target="_blank" rel="noopener noreferrer">Progressive JSON</a><a href="https://wang1212.github.io/2025/06/08/weekly/2025/weekly-review-ep2025w23#progressive-json" class="hash-link" aria-label="progressive-json的直接链接" title="progressive-json的直接链接">​</a></h5>
<p>Dan Abramov 带来了他新的一篇精彩的博文，通过类比 JPEG 渐进式加载的方式，提出渐进式 JSON，采用广度优先传输与占位符机制（如 $ 符号），使客户端能部分处理数据而无需全量加载，提升并行性。React Server Components (RSC) 的流式传输也应用了此模型。作者呼吁工具生态采纳渐进式流式传输，以解决单一慢操作拖累整体性能的工程瓶颈（如数据库延迟），并强调需编程模型（如 React 的 <code>&lt;Suspense&gt;</code>）优雅处理不完整数据。</p>
<p><code>React.js</code> <code>渐进式 JSON</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W21：JavaScript 30 年发展简史]]></title>
        <id>https://wang1212.github.io/2025/05/25/weekly/2025/weekly-review-ep2025w21</id>
        <link href="https://wang1212.github.io/2025/05/25/weekly/2025/weekly-review-ep2025w21"/>
        <updated>2025-05-25T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 21 周的回顾，为纪念 JavaScript 发布三十周年，Deno 发布了一篇博客文章，回顾了这门语言的演变历程。文章可能由 Deno 创始人撰写，因其与 JavaScript 有着深厚渊源，从独特角度梳理了 ECMAScript 标准化等关键发展阶段，展现了 JavaScript 如何从最初的脚本语言成长为如今无处不在的编程工具。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>为纪念 JavaScript 发布三十周年，Deno 发布了一篇博客文章，回顾了这门语言的演变历程。文章可能由 Deno 创始人撰写，因其与 JavaScript 有着深厚渊源，从独特角度梳理了 ECMAScript 标准化等关键发展阶段，展现了 JavaScript 如何从最初的脚本语言成长为如今无处不在的编程工具。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="a-brief-history-of-javascript"><a href="https://deno.com/blog/history-of-javascript" target="_blank" rel="noopener noreferrer">A Brief History of JavaScript</a><a href="https://wang1212.github.io/2025/05/25/weekly/2025/weekly-review-ep2025w21#a-brief-history-of-javascript" class="hash-link" aria-label="a-brief-history-of-javascript的直接链接" title="a-brief-history-of-javascript的直接链接">​</a></h5>
<p>Deno 发布了一篇博客文章，讲述了 JavaScript 的发展简史，恰好今年是其发布的 30 周年。至于为什么是 Deno 来发布这样一篇博文，可能是因为其创始人与 JavaScript 的渊源。</p>
<p><code>JavaScript</code> <code>ECMAScript</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W19：服务端组件、Node.js 24 及 Llama 4]]></title>
        <id>https://wang1212.github.io/2025/05/11/weekly/2025/weekly-review-ep2025w19</id>
        <link href="https://wang1212.github.io/2025/05/11/weekly/2025/weekly-review-ep2025w19"/>
        <updated>2025-05-11T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 19 周的回顾，Dan Abramov 探讨了 Astro 组件与 React Server Components 的差异，建议从 Astro 入手理解服务端组件。Node.js v24.0.0 发布，更新包括默认附带 npm v11。Meta 的 Llama 4 采用混合专家架构及原生多模态训练，支持千万级 Token 上下文，但对硬件要求更高。V8 引擎新增显式编译提示，开发者可通过注释优化 JavaScript 启动性能。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>Dan Abramov 探讨了 Astro 组件与 React Server Components 的差异，建议从 Astro 入手理解服务端组件。Node.js v24.0.0 发布，更新包括默认附带 npm v11。Meta 的 Llama 4 采用混合专家架构及原生多模态训练，支持千万级 Token 上下文，但对硬件要求更高。V8 引擎新增显式编译提示，开发者可通过注释优化 JavaScript 启动性能。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rsc-for-astro-developers"><a href="https://overreacted.io/rsc-for-astro-developers" target="_blank" rel="noopener noreferrer">RSC for Astro Developers</a><a href="https://wang1212.github.io/2025/05/11/weekly/2025/weekly-review-ep2025w19#rsc-for-astro-developers" class="hash-link" aria-label="rsc-for-astro-developers的直接链接" title="rsc-for-astro-developers的直接链接">​</a></h5>
<p>Dan Abramov 新的博文，探讨了 Astro 中用于服务端的 Astro Components 和 React 的 Server Components 的差异，两者的数据模型是相似的，都是单向数据流，相对于前者，RSC 使用纯 JavaScript 函数，无文件格式限制。作者建议开发者如果对于 RSC 感到困惑，或许可以从 Astro 开始了解服务端组件这一技术概念。</p>
<p><code>React.js</code> <code>Astro</code> <code>React Server Component</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="node-v2400-current"><a href="https://nodejs.org/en/blog/release/v24.0.0" target="_blank" rel="noopener noreferrer">Node v24.0.0 (Current)</a><a href="https://wang1212.github.io/2025/05/11/weekly/2025/weekly-review-ep2025w19#node-v2400-current" class="hash-link" aria-label="node-v2400-current的直接链接" title="node-v2400-current的直接链接">​</a></h5>
<p>Node.js v24.0.0 发布，带多多项重要变化，包括默认附带 npm v11，<code>URLPattern</code> API 现在全局可用，测试运行器现在可以自动等待子测试完成等等。</p>
<p><code>Node.js</code> <code>npm</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="llama-4-the-challenges-of-creating-a-frontier-level-llm"><a href="https://cameronrwolfe.substack.com/p/llama-4" target="_blank" rel="noopener noreferrer">Llama 4: The Challenges of Creating a Frontier-Level LLM</a><a href="https://wang1212.github.io/2025/05/11/weekly/2025/weekly-review-ep2025w19#llama-4-the-challenges-of-creating-a-frontier-level-llm" class="hash-link" aria-label="llama-4-the-challenges-of-creating-a-frontier-level-llm的直接链接" title="llama-4-the-challenges-of-creating-a-frontier-level-llm的直接链接">​</a></h5>
<p>Llama 4 和 Meta 在研究战略上的巨大转变背后的完整故事，Llama 首次采用了混合专家（MOE）架构，并在多模态模型实现上采用了顶级实验室通用的做法，即统一的嵌入架构和原生的多模态训练方式，新的模型支持千万级 TOKEN 上下文。Meta 此次的重大转型也伴随着风险，作为开源标杆的 Llama，后续对硬件性能的要求将更高，如何平衡开源社区的成本也是值得考虑的关键点。</p>
<p><code>AI</code> <code>LLM</code> <code>LLama</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="v8-explicit-compile-hints"><a href="https://v8.dev/blog/explicit-compile-hints" target="_blank" rel="noopener noreferrer">V8: Explicit Compile Hints</a><a href="https://wang1212.github.io/2025/05/11/weekly/2025/weekly-review-ep2025w19#v8-explicit-compile-hints" class="hash-link" aria-label="v8-explicit-compile-hints的直接链接" title="v8-explicit-compile-hints的直接链接">​</a></h5>
<p>JavaScript 启动时的解析编译延迟影响网页加载性能，V8 需在即时编译（eager）与延迟编译（lazy）间抉择，开发者可以通过添加魔术注释标记关键 JS 文件，主动控制编译时机，相当于给 V8 引擎提了个醒。</p>
<p><code>V8</code> <code>编译器</code> <code>性能优化</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W17：React Compiler RC 发布，自动记忆优化 React 应用性能]]></title>
        <id>https://wang1212.github.io/2025/04/27/weekly/2025/weekly-review-ep2025w17</id>
        <link href="https://wang1212.github.io/2025/04/27/weekly/2025/weekly-review-ep2025w17"/>
        <updated>2025-04-27T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 17 周的回顾，React 团队已发布 React Compiler 的候选版本，预示着稳定版即将推出。这个构建时工具旨在通过自动记忆功能，显著优化 React 应用程序的性能。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>React 团队已发布 React Compiler 的候选版本，预示着稳定版即将推出。这个构建时工具旨在通过自动记忆功能，显著优化 React 应用程序的性能。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="react-compiler-rc"><a href="https://react.dev/blog/2025/04/21/react-compiler-rc" target="_blank" rel="noopener noreferrer">React Compiler RC</a><a href="https://wang1212.github.io/2025/04/27/weekly/2025/weekly-review-ep2025w17#react-compiler-rc" class="hash-link" aria-label="react-compiler-rc的直接链接" title="react-compiler-rc的直接链接">​</a></h5>
<p>React 团队发布了 React Compiler 特性的候选版本，接下来即将发布稳定版本。React Compiler 是一个构建时工具，它通过自动记忆来优化你的 React 应用程序。</p>
<p><code>React</code> <code>React Compiler</code> <code>性能优化</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W16：API 开发学习指南与 MCP AI 工具创新]]></title>
        <id>https://wang1212.github.io/2025/04/20/weekly/2025/weekly-review-ep2025w16</id>
        <link href="https://wang1212.github.io/2025/04/20/weekly/2025/weekly-review-ep2025w16"/>
        <updated>2025-04-20T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 16 周的回顾，ByteByteGo 第 158 期内容提供了一份 API 开发的结构化学习指南，涵盖从 API 分类、请求响应、鉴权到测试部署等关键环节，并推荐了相关工具。同时，MCPify 作为一个创新的 Web 工具，能将用户创意转化为 AI 可用的 MCP Server Tool，展现了 AI 应用的新可能性，尽管目前没有免费版本。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>ByteByteGo 第 158 期内容提供了一份 API 开发的结构化学习指南，涵盖从 API 分类、请求响应、鉴权到测试部署等关键环节，并推荐了相关工具。同时，MCPify 作为一个创新的 Web 工具，能将用户创意转化为 AI 可用的 MCP Server Tool，展现了 AI 应用的新可能性，尽管目前没有免费版本。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ep158-how-to-learn-api-development"><a href="https://blog.bytebytego.com/p/ep158-how-to-learn-api-development" target="_blank" rel="noopener noreferrer">EP158: How to Learn API Development</a><a href="https://wang1212.github.io/2025/04/20/weekly/2025/weekly-review-ep2025w16#ep158-how-to-learn-api-development" class="hash-link" aria-label="ep158-how-to-learn-api-development的直接链接" title="ep158-how-to-learn-api-development的直接链接">​</a></h5>
<p>&lt;&lt;ByteByteGo&gt;&gt; 第 158 期内容带来了 API 开发的学习路径指南，提出结构化学习框架，从 API 分类和定义、请求与响应、鉴权、状态设计与开发、测试、部署和第三方集成多个方面给出了学习建议，同时给出了一些推荐的工具。</p>
<p><code>ByteByteGo</code> <code>API</code> <code>学习指南</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="mcpify"><a href="https://mcpify.ai/" target="_blank" rel="noopener noreferrer">MCPify</a><a href="https://wang1212.github.io/2025/04/20/weekly/2025/weekly-review-ep2025w16#mcpify" class="hash-link" aria-label="mcpify的直接链接" title="mcpify的直接链接">​</a></h5>
<p>一个 Web 工具，能将用户的创意通过 AI 生成转换为一个 MCP Server Tool 形式的 AI 工具，可以让 AI 应用使用，没有提供免费版本，但似乎是一个不错的产品创意。</p>
<p><code>MCP</code> <code>MCP Server</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W15：React 服务器组件、CSS-in-JS 转向与 Agent 协议新进展]]></title>
        <id>https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15</id>
        <link href="https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15"/>
        <updated>2025-04-10T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 15 周的回顾，本周技术动态包括 Dan Abramov 对 React 服务器组件设计哲学的深入解读，以及 Anthropic 关于 MCP（Model Context Protocol）的研讨会。此外，CSS-in-JS 时代随着 styled-components 进入维护模式而走向尾声。值得关注的是，谷歌发布了 A2A（Agent2Agent Protocol），旨在与 MCP 互补，推动 Agent 应用间的互操作性。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>本周技术动态包括 Dan Abramov 对 React 服务器组件设计哲学的深入解读，以及 Anthropic 关于 MCP（Model Context Protocol）的研讨会。此外，CSS-in-JS 时代随着 styled-components 进入维护模式而走向尾声。值得关注的是，谷歌发布了 A2A（Agent2Agent Protocol），旨在与 MCP 互补，推动 Agent 应用间的互操作性。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="react-for-two-computers"><a href="https://overreacted.io/react-for-two-computers/" target="_blank" rel="noopener noreferrer">React for Two Computers</a><a href="https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15#react-for-two-computers" class="hash-link" aria-label="react-for-two-computers的直接链接" title="react-for-two-computers的直接链接">​</a></h5>
<p>Dan Abramov 又一次针对 React 中两种概念，标签和组件的深入探讨，解释了 React 服务器组件的设计哲学。</p>
<p><code>Web</code> <code>前端</code> <code>React.js</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="building-agents-with-model-context-protocol---full-workshop-with-mahesh-murag-of-anthropic"><a href="https://www.youtube.com/watch?v=kQmXtrmQ5Zg" target="_blank" rel="noopener noreferrer">Building Agents with Model Context Protocol - Full Workshop with Mahesh Murag of Anthropic</a><a href="https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15#building-agents-with-model-context-protocol---full-workshop-with-mahesh-murag-of-anthropic" class="hash-link" aria-label="building-agents-with-model-context-protocol---full-workshop-with-mahesh-murag-of-anthropic的直接链接" title="building-agents-with-model-context-protocol---full-workshop-with-mahesh-murag-of-anthropic的直接链接">​</a></h5>
<p>Anthropic 举办的一场探讨 MCP 的研讨会，视频有点长，不过有些讨论还是很是收获颇丰的。</p>
<p><code>AI</code> <code>MCP</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="styled-components--in-maintenance-mode"><a href="https://opencollective.com/styled-components/updates/thank-you" target="_blank" rel="noopener noreferrer">styled-components  in "maintenance mode"</a><a href="https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15#styled-components--in-maintenance-mode" class="hash-link" aria-label="styled-components--in-maintenance-mode的直接链接" title="styled-components--in-maintenance-mode的直接链接">​</a></h5>
<p>随着 styled-components 库的作者宣布其进入维护模式后，CSS-in-JS 的时代落幕了。</p>
<p><code>Web</code> <code>前端</code> <code>CSS-in-JS</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="announcing-the-agent2agent-protocol-a2a"><a href="https://developers.googleblog.com/en/a2a-a-new-era-of-agent-interoperability/" target="_blank" rel="noopener noreferrer">Announcing the Agent2Agent Protocol (A2A)</a><a href="https://wang1212.github.io/2025/04/13/weekly/2025/weekly-review-ep2025w15#announcing-the-agent2agent-protocol-a2a" class="hash-link" aria-label="announcing-the-agent2agent-protocol-a2a的直接链接" title="announcing-the-agent2agent-protocol-a2a的直接链接">​</a></h5>
<p>在 MCP 快速发展的同时，谷歌发布了 Agent 应用之间通信的标准协议 A2A，期望与 MCP 互为补充，而不是相互替代。</p>
<p><code>AI</code> <code>Agent</code> <code>A2A</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W13：AI Agent 工程化经验总结]]></title>
        <id>https://wang1212.github.io/2025/03/30/weekly/2025/weekly-review-ep2025w13</id>
        <link href="https://wang1212.github.io/2025/03/30/weekly/2025/weekly-review-ep2025w13"/>
        <updated>2025-03-29T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 13 周的回顾，一篇文章探讨了构建 AI Agent 应用的工程实践。通过回顾过去一段时间的技术迭代，作者对 Agent 工程化的概念有了更深入的理解，分享了在实际开发中积累的经验。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>一篇文章探讨了构建 AI Agent 应用的工程实践。通过回顾过去一段时间的技术迭代，作者对 Agent 工程化的概念有了更深入的理解，分享了在实际开发中积累的经验。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="agent-engineering"><a href="https://www.latent.space/p/agent" target="_blank" rel="noopener noreferrer">Agent Engineering</a><a href="https://wang1212.github.io/2025/03/30/weekly/2025/weekly-review-ep2025w13#agent-engineering" class="hash-link" aria-label="agent-engineering的直接链接" title="agent-engineering的直接链接">​</a></h5>
<p>探讨了构建 AI Agent 应用的工程化经验，结果过去一段时间不断发展的技术迭代过程，对 Agent 工程化的概念有了更好的理解。</p>
<p><code>AI</code> <code>Agent</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W12：AI 应用与基础算法新进展]]></title>
        <id>https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12</id>
        <link href="https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12"/>
        <updated>2025-03-22T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 12 周的回顾，近期值得关注的技术动态，包括全球顶尖风投机构发布的最新生成式 AI 应用榜单，揭示了行业趋势。同时，深入探讨了布隆过滤器的基本原理与应用场景，并介绍了 agents.json 和模型上下文协议（MCP），这些新协议旨在简化 AI Agent 与服务的集成，提升 AI 应用的响应效率和表现。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>近期值得关注的技术动态，包括全球顶尖风投机构发布的最新生成式 AI 应用榜单，揭示了行业趋势。同时，深入探讨了布隆过滤器的基本原理与应用场景，并介绍了 agents.json 和模型上下文协议（MCP），这些新协议旨在简化 AI Agent 与服务的集成，提升 AI 应用的响应效率和表现。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-top-100-gen-ai-apps"><a href="https://a16z.com/100-gen-ai-apps-4/" target="_blank" rel="noopener noreferrer">The Top 100 Gen AI Apps</a><a href="https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12#the-top-100-gen-ai-apps" class="hash-link" aria-label="the-top-100-gen-ai-apps的直接链接" title="the-top-100-gen-ai-apps的直接链接">​</a></h5>
<p>全球风投机构发布的全球前 100 名 AI 应用榜单，每 6 个月更新一次，包含了对行业的分析，值得关注。</p>
<p><code>AI</code> <code>App</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bloom-filter-a-deep-dive"><a href="https://www.kirupa.com/data_structures_algorithms/bloom_filter.htm" target="_blank" rel="noopener noreferrer">Bloom Filter: A Deep Dive</a><a href="https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12#bloom-filter-a-deep-dive" class="hash-link" aria-label="bloom-filter-a-deep-dive的直接链接" title="bloom-filter-a-deep-dive的直接链接">​</a></h5>
<p>布隆过滤器作为一个应用广泛的基础算法，一直不是很了解其作用和原理，在这篇通俗易懂的文章中总算知道了其大致原理和应用场景。</p>
<p><code>算法</code> <code>布隆过滤器</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="introducing-agentsjson"><a href="https://docs.wild-card.ai/agentsjson/introduction" target="_blank" rel="noopener noreferrer">Introducing agents.json</a><a href="https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12#introducing-agentsjson" class="hash-link" aria-label="introducing-agentsjson的直接链接" title="introducing-agentsjson的直接链接">​</a></h5>
<p>与 MCP 类似，agent.json 提出了如何定义传统的 API 以帮助 Agent 应用更好的识别和调用服务来获得更好的响应。</p>
<p><code>AI</code> <code>Agent</code> <code>API</code> <code>agents.json</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="what-is-model-context-protocol-mcp-how-it-simplifies-ai-integrations-compared-to-apis"><a href="https://norahsakal.com/blog/mcp-vs-api-model-context-protocol-explained/" target="_blank" rel="noopener noreferrer">What is Model Context Protocol (MCP)? How it simplifies AI integrations compared to APIs</a><a href="https://wang1212.github.io/2025/03/23/weekly/2025/weekly-review-ep2025w12#what-is-model-context-protocol-mcp-how-it-simplifies-ai-integrations-compared-to-apis" class="hash-link" aria-label="what-is-model-context-protocol-mcp-how-it-simplifies-ai-integrations-compared-to-apis的直接链接" title="what-is-model-context-protocol-mcp-how-it-simplifies-ai-integrations-compared-to-apis的直接链接">​</a></h5>
<p>简单解释了为什么需要 MCP，以及与传统的 API 有什么差异。</p>
<p><code>AI</code> <code>Agent</code> <code>MCP</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W11：2025 年软件架构与开源 AI 技术栈学习资源]]></title>
        <id>https://wang1212.github.io/2025/03/16/weekly/2025/weekly-review-ep2025w11</id>
        <link href="https://wang1212.github.io/2025/03/16/weekly/2025/weekly-review-ep2025w11"/>
        <updated>2025-03-15T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 11 周的回顾，推荐 2025 年学习软件架构的优质阅读材料，并提供了构建 AI 应用的开源技术栈资源列表。它为希望在软件架构和 AI 领域提升技能的开发者提供了实用的学习路径和工具参考。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>推荐 2025 年学习软件架构的优质阅读材料，并提供了构建 AI 应用的开源技术栈资源列表。它为希望在软件架构和 AI 领域提升技能的开发者提供了实用的学习路径和工具参考。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ep146-the-open-source-ai-stack"><a href="https://blog.bytebytego.com/p/ep146-the-open-source-ai-stack" target="_blank" rel="noopener noreferrer">EP146: The Open Source AI Stack</a><a href="https://wang1212.github.io/2025/03/16/weekly/2025/weekly-review-ep2025w11#ep146-the-open-source-ai-stack" class="hash-link" aria-label="ep146-the-open-source-ai-stack的直接链接" title="ep146-the-open-source-ai-stack的直接链接">​</a></h5>
<p>构建 AI 应用的开源技术栈资源列表。</p>
<p><code>AI</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="ep151-24-good-resources-to-learn-software-architecture-in-2025"><a href="https://blog.bytebytego.com/p/ep151-24-good-resources-to-learn" target="_blank" rel="noopener noreferrer">EP151: 24 Good Resources to Learn Software Architecture in 2025</a><a href="https://wang1212.github.io/2025/03/16/weekly/2025/weekly-review-ep2025w11#ep151-24-good-resources-to-learn-software-architecture-in-2025" class="hash-link" aria-label="ep151-24-good-resources-to-learn-software-architecture-in-2025的直接链接" title="ep151-24-good-resources-to-learn-software-architecture-in-2025的直接链接">​</a></h5>
<p>在 2025 年推荐学习软件架构设计的好的阅读资源列表。</p>
<p><code>Software Architecture</code> <code>Reading List</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W9：MoE 模型、AI 工程师阅读清单与浏览器控制代理]]></title>
        <id>https://wang1212.github.io/2025/03/02/weekly/2025/weekly-review-ep2025w9</id>
        <link href="https://wang1212.github.io/2025/03/02/weekly/2025/weekly-review-ep2025w9"/>
        <updated>2025-03-01T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 9 周的回顾，人工智能领域的最新进展，包括 DeepSeek 开源的 MoE 大语言模型，该模型因其架构设计和优缺点而备受关注。此外，文章还推荐了 2025 年 AI 工程师的必读资源，并探讨了利用 AI 模型通过自然语言对话控制浏览器的潜力，特别提到了 Operator 项目，预示着计算机使用代理的未来发展方向。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>人工智能领域的最新进展，包括 DeepSeek 开源的 MoE 大语言模型，该模型因其架构设计和优缺点而备受关注。此外，文章还推荐了 2025 年 AI 工程师的必读资源，并探讨了利用 AI 模型通过自然语言对话控制浏览器的潜力，特别提到了 Operator 项目，预示着计算机使用代理的未来发展方向。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="mixture-of-experts-moe-llms"><a href="https://cameronrwolfe.substack.com/p/moe-llms" target="_blank" rel="noopener noreferrer">Mixture-of-Experts (MoE) LLMs</a><a href="https://wang1212.github.io/2025/03/02/weekly/2025/weekly-review-ep2025w9#mixture-of-experts-moe-llms" class="hash-link" aria-label="mixture-of-experts-moe-llms的直接链接" title="mixture-of-experts-moe-llms的直接链接">​</a></h5>
<p>在春节期间，DeepSeek 开源了一个基于 MoE 的大语言模型，在全球引起了很大的关注，然而当下大部分的大语言模型都是 MoE 架构的，这篇文章详细的探讨了 MoE 架构的设计和优缺点，对于想了解模型底层设计的人来说非常值得一读。</p>
<p><code>AI</code> <code>MoEs</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="the-2025-ai-engineer-reading-list"><a href="https://www.latent.space/p/2025-papers" target="_blank" rel="noopener noreferrer">The 2025 AI Engineer Reading List</a><a href="https://wang1212.github.io/2025/03/02/weekly/2025/weekly-review-ep2025w9#the-2025-ai-engineer-reading-list" class="hash-link" aria-label="the-2025-ai-engineer-reading-list的直接链接" title="the-2025-ai-engineer-reading-list的直接链接">​</a></h5>
<p>2025 年建议 AI 工程师阅读的资源列表。</p>
<p><code>AI</code> <code>Reading List</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="open-operator-serverless-browsers-and-the-future-of-computer-using-agents"><a href="https://www.latent.space/p/browserbase" target="_blank" rel="noopener noreferrer">Open Operator, Serverless Browsers and the Future of Computer-Using Agents</a><a href="https://wang1212.github.io/2025/03/02/weekly/2025/weekly-review-ep2025w9#open-operator-serverless-browsers-and-the-future-of-computer-using-agents" class="hash-link" aria-label="open-operator-serverless-browsers-and-the-future-of-computer-using-agents的直接链接" title="open-operator-serverless-browsers-and-the-future-of-computer-using-agents的直接链接">​</a></h5>
<p>使用 AI 模型通过自然语言对话的方式来控制浏览器，这是一个非常有潜力的方向。</p>
<ul>
<li><a href="https://openai.com/index/introducing-operator/" target="_blank" rel="noopener noreferrer">Introducing Operator</a></li>
</ul>
<p><code>AI</code> <code>Serverless Browsers</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W8：揭秘推理模型，超越传统 LLM]]></title>
        <id>https://wang1212.github.io/2025/02/23/weekly/2025/weekly-review-ep2025w8</id>
        <link href="https://wang1212.github.io/2025/02/23/weekly/2025/weekly-review-ep2025w8"/>
        <updated>2025-02-20T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 8 周的回顾，一篇文章深入探讨了当前热门的推理模型，阐释了它们与标准**大型语言模型（LLM）**之间的关联。在推理模型备受关注的当下，理解其工作原理及与现有 AI 范式的整合方式至关重要，为读者提供了全面审视这一前沿 AI 技术视角的宝贵机会。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>一篇文章深入探讨了当前热门的推理模型，阐释了它们与标准**大型语言模型（LLM）**之间的关联。在推理模型备受关注的当下，理解其工作原理及与现有 AI 范式的整合方式至关重要，为读者提供了全面审视这一前沿 AI 技术视角的宝贵机会。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="demystifying-reasoning-models"><a href="https://cameronrwolfe.substack.com/p/demystifying-reasoning-models" target="_blank" rel="noopener noreferrer">Demystifying Reasoning Models</a><a href="https://wang1212.github.io/2025/02/23/weekly/2025/weekly-review-ep2025w8#demystifying-reasoning-models" class="hash-link" aria-label="demystifying-reasoning-models的直接链接" title="demystifying-reasoning-models的直接链接">​</a></h5>
<p>一篇讲述推理模型及其与标准 LLM 的关系的文章，在推理模型大火的当下非常值得一看。</p>
<p><code>AI</code> <code>推理模型</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W5：推理模型普及与数据验证标准]]></title>
        <id>https://wang1212.github.io/2025/02/02/weekly/2025/weekly-review-ep2025w5</id>
        <link href="https://wang1212.github.io/2025/02/02/weekly/2025/weekly-review-ep2025w5"/>
        <updated>2025-02-01T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 5 周的回顾，一篇文章探讨了推理模型相较于传统模型的优势，指出它们正成为主流趋势，因其更低的成本和更优的性能。此外，文中还提到了 Zod、Valibot 和 ArkType 库的作者们共同发起了 Schema 标准规范，旨在统一数据验证方法，从而提升开发者的体验和促进相关生态的发展。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>一篇文章探讨了推理模型相较于传统模型的优势，指出它们正成为主流趋势，因其更低的成本和更优的性能。此外，文中还提到了 Zod、Valibot 和 ArkType 库的作者们共同发起了 Schema 标准规范，旨在统一数据验证方法，从而提升开发者的体验和促进相关生态的发展。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="why-reasoning-models-will-generalize"><a href="https://www.interconnects.ai/p/why-reasoning-models-will-generalize" target="_blank" rel="noopener noreferrer">Why reasoning models will generalize</a><a href="https://wang1212.github.io/2025/02/02/weekly/2025/weekly-review-ep2025w5#why-reasoning-models-will-generalize" class="hash-link" aria-label="why-reasoning-models-will-generalize的直接链接" title="why-reasoning-models-will-generalize的直接链接">​</a></h5>
<p>一篇探讨推理模型为什么将会普及的博文，相对于标准模型来说，推理模型正成为一种趋势，并且成本更低，效果更好。</p>
<p><code>AI</code> <code>推理模型</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="standard-schema"><a href="https://standardschema.dev/" target="_blank" rel="noopener noreferrer">Standard Schema</a><a href="https://wang1212.github.io/2025/02/02/weekly/2025/weekly-review-ep2025w5#standard-schema" class="hash-link" aria-label="standard-schema的直接链接" title="standard-schema的直接链接">​</a></h5>
<p>Zod、Valibot 和 ArkType 库的作者们发起了 Schema 的标准规范并在各自的库中进行了实现，这为后续的生态发展提供了基础，以提升开发者体验为目标。</p>
<p><code>JavaScript</code> <code>Data Schema</code> <code>数据校验</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[「每周回顾」EP2025W3：Docusaurus 3.7 发布及 2024 大模型技术总结]]></title>
        <id>https://wang1212.github.io/2025/01/19/weekly/2025/weekly-review-ep2025w3</id>
        <link href="https://wang1212.github.io/2025/01/19/weekly/2025/weekly-review-ep2025w3"/>
        <updated>2025-01-14T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[2025 年第 3 周的回顾，Docusaurus 3.7 已发布，新增对 React 19 的支持，预示着 Docusaurus 4 即将面世。同时，一篇文章总结了 2024 年大型语言模型（LLMs）领域的技术进展，涵盖了该年度 AI 大模型发展的重要经验和趋势。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>AI 总结</div><div class="admonitionContent_BuS1"><p>Docusaurus 3.7 已发布，新增对 React 19 的支持，预示着 Docusaurus 4 即将面世。同时，一篇文章总结了 2024 年大型语言模型（LLMs）领域的技术进展，涵盖了该年度 AI 大模型发展的重要经验和趋势。</p></div></div>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="docusaurus-37"><a href="https://docusaurus.io/blog/releases/3.7" target="_blank" rel="noopener noreferrer">Docusaurus 3.7</a><a href="https://wang1212.github.io/2025/01/19/weekly/2025/weekly-review-ep2025w3#docusaurus-37" class="hash-link" aria-label="docusaurus-37的直接链接" title="docusaurus-37的直接链接">​</a></h5>
<p>Docusaurus 3.7 发布，支持 react v19，相信很快 v4 将会发布。</p>
<p><code>Docusaurus</code></p>
<h5 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="things-we-learned-about-llms-in-2024"><a href="https://simonwillison.net/2024/Dec/31/llms-in-2024/" target="_blank" rel="noopener noreferrer">Things we learned about LLMs in 2024</a><a href="https://wang1212.github.io/2025/01/19/weekly/2025/weekly-review-ep2025w3#things-we-learned-about-llms-in-2024" class="hash-link" aria-label="things-we-learned-about-llms-in-2024的直接链接" title="things-we-learned-about-llms-in-2024的直接链接">​</a></h5>
<p>一篇对 2024 年 AI 大模型领域技术发展的总结</p>
<p><code>AI</code> <code>LLMs</code></p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="每周回顾" term="每周回顾"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Monorepo 中使用 TypeScript 的问题]]></title>
        <id>https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo</id>
        <link href="https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo"/>
        <updated>2024-10-20T13:48:00.000Z</updated>
        <summary type="html"><![CDATA[在 Monorepo 中使用 TypeScript 时相比于单包仓库要复杂的多，会遇到一系列问题，这里记录一下这些问题的解决方案。]]></summary>
        <content type="html"><![CDATA[<p>在 Monorepo 中使用 TypeScript 时相比于单包仓库要复杂的多，会遇到一系列问题，这里记录一下这些问题的解决方案。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="共享项目配置">共享项目配置<a href="https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo#%E5%85%B1%E4%BA%AB%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="共享项目配置的直接链接" title="共享项目配置的直接链接">​</a></h2>
<p>为了降低维护成本，通常的做法是在项目根目录创建一个 <strong>tsconfig.base.json</strong> 配置文件作为公共的基础配置，同时在每个子包中再创建一个单独的配置文件并引用基础配置：</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// tsconfig.base.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"compilerOptions"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"target"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ESNext"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"include"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"src/**/*"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// packages/foo/tsconfig.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"extends"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../../tsconfig.base.json"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"compilerOptions"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"rootDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"src"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"outDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dist"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// packages/bar/tsconfig.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"extends"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"../../tsconfig.base.json"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"compilerOptions"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"rootDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"src"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"outDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dist"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>很明显，这里没有把 <code>rootDir</code> 和 <code>outDir</code> 配置放到公共的基础配置中去，这是因为<strong>路径相关的配置（相对路径）在解析时行为不可预测，很容易出错</strong>，为了确保正确，必须将其放到各自的子包配置中去。显然，这样维护起来很麻烦。</p>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>提示</div><div class="admonitionContent_BuS1"><p>终于，TypeScript 官方在 <a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-5-5.html#the-configdir-template-variable-for-configuration-files" target="_blank" rel="noopener noreferrer">5.5 版本发布时支持了 <code>${configDir}</code> 模板变量</a>，这使得路径相关配置更加明确，维护起来也更方便。</p></div></div>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// tsconfig.base.json</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"compilerOptions"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"target"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"ESNext"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"rootDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"${configDir}/src"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"outDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"${configDir}/dist"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"include"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"${configDir}/src/**/*"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="源代码跳转">源代码跳转<a href="https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo#%E6%BA%90%E4%BB%A3%E7%A0%81%E8%B7%B3%E8%BD%AC" class="hash-link" aria-label="源代码跳转的直接链接" title="源代码跳转的直接链接">​</a></h2>
<p><strong>Monorepo 中的包依赖关系通常较为复杂，在维护过程中阅读源代码时会频繁遇到其它依赖包的代码调用</strong>，直接点击跳转会跳到对应的类型定义文件，这对于我们想直接查看依赖包的源代码来说极为不便。不过，我们可以结合 VSCode 和 TypeScript 编译配置来实现点击直接跳转到依赖包源代码的目的。</p>
<p>首先，需要配置一下 VSCode 中 JavaSCript/TypeScript 的 <code>Prefer Go To Source Definition</code> 配置项。</p>
<p>接下来，再配置一下 TypeScript 的编译配置 <a href="https://www.typescriptlang.org/tsconfig/#declarationMap" target="_blank" rel="noopener noreferrer"><code>declarationMap</code></a> 即可：</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"compilerOptions"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"declaration"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"declarationMap"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"declarationDir"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"${configDir}/types"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="vite-与实时生成类型定义">Vite 与实时生成类型定义<a href="https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo#vite-%E4%B8%8E%E5%AE%9E%E6%97%B6%E7%94%9F%E6%88%90%E7%B1%BB%E5%9E%8B%E5%AE%9A%E4%B9%89" class="hash-link" aria-label="Vite 与实时生成类型定义的直接链接" title="Vite 与实时生成类型定义的直接链接">​</a></h2>
<p>现在，我们喜欢在开发模式下使用 Vite 这种 Bundless 模式的构建工具来加速我们的开发工作流，尤其是在 Monorepo 中编写库的使用示例时极为便利。</p>
<p>然而，当我们同时使用 TypeScript 时，<strong>实时构建类型定义文件也很重要，这有助于我们频繁的在多个子包之间修改代码而不会出错</strong>。当子包数量很多时，我们不可能为每个子包目录都启动一个执行 <code>tsc --watch</code> 的进程，这会由于进程太多产生严重的性能问题。</p>
<p>相反，我们可以考虑按需的方式，在 Vite 检测到文件热更新时来实时构建该子包新的类型定义文件，这可以通过一个简单的插件来实现。</p>
<div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> path </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'node:path'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> exec </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'node:child_process'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buildTypesPlugin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'build-types-plugin'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token doc-comment comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     * </span><span class="token doc-comment comment keyword" style="color:#00009f;font-style:italic">@see</span><span class="token doc-comment comment" style="color:#999988;font-style:italic"> https://vite.dev/guide/api-plugin.html#handlehotupdate</span><br></span><span class="token-line" style="color:#393A34"><span class="token doc-comment comment" style="color:#999988;font-style:italic">     */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">handleHotUpdate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> file </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> relativePath </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> path</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">relative</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">__dirname</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> packagePath </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> relativePath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">startsWith</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'packages/'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> relativePath</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">split</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">slice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'/'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">packagePath</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">exec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">cd </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">packagePath</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> &amp;&amp; npm run build:types</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> stdout</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> stderr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> date </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Date</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> hours </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> date</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getHours</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">padStart</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'0'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> minutes </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> date</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getMinutes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">padStart</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'0'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> seconds </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> date</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getSeconds</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">padStart</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'0'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">\x1b[90m</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">hours</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">minutes</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">seconds</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> [build:types]: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">error</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token string" style="color:#e3116c">'\x1b[0m'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token builtin">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">\x1b[90m</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">hours</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">minutes</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">:</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">seconds</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> [build:types] success</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token string" style="color:#e3116c">'\x1b[0m'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="相关资料">相关资料<a href="https://wang1212.github.io/2024/10/20/computer-technology/typescript/tools-ts-in-monorepo#%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99" class="hash-link" aria-label="相关资料的直接链接" title="相关资料的直接链接">​</a></h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Monorepo" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Monorepo</a></li>
<li><a href="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-5-5.html#the-configdir-template-variable-for-configuration-files" target="_blank" rel="noopener noreferrer">https://www.typescriptlang.org/docs/handbook/release-notes/typescript-5-5.html#the-configdir-template-variable-for-configuration-files</a></li>
<li><a href="https://github.com/microsoft/TypeScript/issues/57485" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/TypeScript/issues/57485</a></li>
<li><a href="https://www.typescriptlang.org/tsconfig/#declarationMap" target="_blank" rel="noopener noreferrer">https://www.typescriptlang.org/tsconfig/#declarationMap</a></li>
</ul>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="计算机技术" term="计算机技术"/>
        <category label="工具" term="工具"/>
        <category label="TypeScript" term="TypeScript"/>
        <category label="Monorepo" term="Monorepo"/>
        <category label="实践案例" term="实践案例"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[一次湖北自驾游]]></title>
        <id>https://wang1212.github.io/2024/07/12/life/tourism/tourism-hubei-enshi</id>
        <link href="https://wang1212.github.io/2024/07/12/life/tourism/tourism-hubei-enshi"/>
        <updated>2024-07-17T21:14:00.000Z</updated>
        <summary type="html"><![CDATA[换工作的间隙有机会来一次自驾游，目的地选择了湖北，恰好有神农架和恩施两个著名旅游城市区域相邻。]]></summary>
        <content type="html"><![CDATA[<p><u>2024-07-12</u>
<br>
<br></p>
<p>换工作的间隙有机会来一次自驾游，目的地选择了湖北，恰好有神农架和恩施两个景点聚集的区域相邻且非常适合自驾游。</p>
<p>恰逢“梅雨季”，全国到处都在下雨，从提前一个月开始计划时就时刻关注着天气，直到临近出发的前几天天气预报依然是雨下个不停，工作后好不容易有这么长的休假时间，难道只能躺在家里了？</p>
<p>时间越来越近，连续从抖音直播上关注着景区的实时天气，情况似乎并没有想象的那么差，一句大家常说的山里的天气说不准给了一定的信心。</p>
<p>自驾的路线选择了先到神农架，再到恩施，再途径安康回到西安，预计总共 6 天时间。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="神农架">神农架<a href="https://wang1212.github.io/2024/07/12/life/tourism/tourism-hubei-enshi#%E7%A5%9E%E5%86%9C%E6%9E%B6" class="hash-link" aria-label="神农架的直接链接" title="神农架的直接链接">​</a></h2>
<p>出行前看了网上攻略，神农架打算就去联票的六大景点，所以第一天计划一大清早出发，大约下午两三点就能到第一个景点天燕，逛完后继续前进晚上就可以在木鱼镇休息。</p>
<p>头一天晚上本打算是早早休息的，结果下午和朋友去吃了个便饭差点误了准备东西的时间，折腾下来休息的时候也到晚上十一点左右了，还准备第二天大早 7 点半就出发呢。这次之所以这么早出发，一方面是因为今天的路程有四五百公里，导航显示得七八个小时，另一方面是前几次都磨蹭到早上九点多出发，导致游玩的时间被严重挤压了。</p>
<p>六点多钟起床洗漱，把东西搬到车上，买了早餐垫了肚子后就出发了，此时刚好七点半。这一次还算顺利，一路上畅通无阻，全程两个人换着开车，本打算中午在比较大的服务区休息一下吃个午饭的，结果大家肚子都不是很饿，中途也因此少耽搁了很多时间。</p>
<p>下午两点半顺利到达天燕景区大门口，简单休息和用餐后，便开车直奔景区内部了。值得一提的是，神农架这几个景点大部分都是可以直接自驾进入景区的，所以游玩起来相对比较省力，时间也不会太紧张。天燕景区最被人所熟知的便是彩虹桥了，自驾大概半小时左右就到达彩虹桥景点了，不过这里不是很好停车。停好车后大概爬了 20 分钟左右才到达了彩虹桥跟前，一路的空气很清新，天气也很好，站在桥上能看见远处山间的云雾不一会便被吹散了，要是后面几天的天气能和今天一样好该多好呢。晃晃悠悠不一会便到下午五点多钟了，由于山路不好走，即便是三四十公里也得行驶一个多小时，也是时候启程继续前进到木鱼镇歇息了。</p>
<p>七点多就到木鱼镇了，这时候有了下雨的迹象，找了家生意比较好的当地菜馆，似乎并不是很合胃口。</p>
<p>比较好的是整个行程不需要走回头路，原计划第二天游玩木鱼镇周边的三个景点，第三天早上游玩大九湖，下午游玩神农顶，傍晚休息在去恩施的途中巴东县，主要是因为从神农顶直接去恩施需要五个多小时车程，还是太赶了。不过，临时决定，如果第二天天气还行，早上就快速逛完木鱼镇周边的三个景点，下午直接去神农顶，晚上休息在大九湖旁的坪阡古镇，第三天下午就有充足的时间开车去恩施了。</p>
<p>第二天七点钟早早的起床在镇子上吃了早餐，自驾去只有五公里远的官门山景点，这里主要是一些动植物生态馆，景区大门映入眼帘的便是大家经常在电视或者网络看到的一只野人拥抱小野人的石头雕塑。景区还是非常大的，我们只在感兴趣的几个景点停留了一下，其中之一便是蜜蜂园，有大量的蜂箱被悬挂在悬崖峭壁之上，场面很壮观，吸引了大量的游客在此拍照打卡，另一个则是比较令人失望的熊猫馆，由于一些原因导致没有看到任何一只大熊猫。</p>
<p>接下来十多分钟的车程就到了神农坛景点，这里也有景区宣传时经常拍的非常壮观的巨大的神农氏雕像，旁边还有一颗千年古树，这个景区并不大，拍照打卡完就可以结束了。今天的天气还算不错，即使下雨也是小雨而已，这会都已经有天晴的迹象了，趁着天气好下午直接安排神农顶。有趣的是，途径了一个非常漂亮的瀑布观景台，这不是一个收费的景点，就只是路边的一个简单的观景平台，可见一路上处处都是美景。</p>
<p>早上最后一个景点是天生桥，据说是很壮观的瀑布，距离也还好，车程二十分钟左右的样子，所以距离都很近的话一早上三个景点刚刚好。驾车进入景点还没停稳便被眼前的瀑布景象震撼了，步行观光路线的入口便是该景点最有名的瀑布了，一下子就能勾起游客的兴趣了。景区步行观光路线大概得半个小时才能走完，后半程基本上就是完全商业化的购物环节了。</p>
<p>十二点刚过，早上三个景点打卡的目标完成，20分钟车程去木鱼镇吃个午饭，抓紧时间去神农顶。午饭是一家重庆菜，算是这两天吃的最好的一顿了。</p>
<p>吃完饭天气看起来还算不错，不过在去景点的途中看到抖音上直播的博主说最高处神农顶上雾特别大，能见度特别差。果不其然，大概两点钟左右到了景区检票口时，景区工作人员还专门提醒了一下山上雾大，到时候注意打开双闪开慢点，这时就有点慌了，不过也只能继续前进了。</p>
<p>神农顶景区的海拔落差是特别大的，从 1000 多米到最高的 3000 多米，第一个景点是小龙潭，不过没有开放，随即便直接去了金猴岭，这里有被称为绿野仙踪的原始森林，一圈下来半个小时左右。然后就是步行到金猴溪了，这里途中也有一个很壮观的金猴飞瀑景色，非常适合打卡，来神农架最不好的就是想看的大熊猫和金丝猴都没有看到。</p>
<p>从金猴岭景点是需要走一段回头路的，接下来去下一个景点神农谷，快要到达的时候海拔突然急速上升，不一会便出现了非常大的雾，能见度特别差，赶紧减缓车速打开灯光谨慎驾驶，到这里其实是有点慌的，本身第一次开山路，因为神农架一路都是 347 国道，路况特别好也就觉得山路也还好，只要天气好的话也没什么，现在大雾再叠加山路还是以安全为主。此时海拔已经 2000 多米了，站在神农谷的观景台其实什么都看不到，周围全是云雾缭绕的，空气倒是很好，负氧离子含量很高。这个时候在地图上查了下接下来几个景点，最近的神农顶在沿路的一个岔路上，海拔要到 3000 多米，打算天气这么差就不去了，到时候看沿途其它景点天气如何再决定要不要停留逛一逛。</p>
<p>从神农谷继续前进，此时还是小雨，但由于大雾天气导致只能以时速二三十公里的速度前进，不一会便路过了去神农顶的岔路口，发现人特别多，遂决定既然来了就去路口停车看看，最后发现神农顶的打卡点就在路口停车区旁边，也算是没有白跑一趟。</p>
<p>不敢逗留太久，害怕天气越来越差，遂继续驾车前进，让人绝望的是海拔一直都在 2000 以上，雨也越来越大，雾也变重了，能见度更差了。缓慢的驾车前行过程中，时不时注意着经过的景点，在板壁岩这块打算停下来看看，这个时候雾大到什么程度，想找卫生间都看不见周围的东西，只能走近一点看看。板壁岩的景色还不错，不需要远眺，步行大概十多分钟就能逛完，这里有去黄山也看过的“飞来石”。</p>
<p>神农顶景区内也就剩下最后一个比较有名的太子娅景点了，走近一看才发现也是原始森林，由于在金猴岭那边已经看过类似的风景了，而且这边人烟稀少，遂决定赶紧下山赶在天黑前到达坪阡古镇。原以为随着下山海拔降低，大雾会消散一些，结果一直到坪阡古镇一路上还是有大雾，算是一次惊险而刺激的山路自驾之行了。</p>
<p>一天打卡完四个景点，给第三天留下了很充裕的时间，当然还在纠结天气不好的话，明天早上还去不去大九湖，毕竟这个景点是不允许自驾的，每个人还得额外买景交车的票且不便宜。</p>
<p>要不说运气还算不错呢，第三天早上起床后竟然没有下雨，既然来了就不要错过六大景点的的任何一个，直奔大九湖而去。大九湖因其高海拔平原上的九个湖泊而闻名，进入景区需要先乘坐四十分钟左右的大巴才能到达开始游玩的地方，虽说还未到达九个湖泊，但这途中亦有不少美景引人入胜。一号湖是人工湖暂未开放，直接从二号湖开始游玩，坐上小火车在接近二号湖时，被这靓丽的风景深深吸引，湖水中天空与山的倒影如一面镜子一样，在二号湖下车后游玩了约半个多小时，还看到了黑天鹅一家三口在湖边游玩，一只小天鹅被它的父母小心的呵护着尽兴的玩耍。</p>
<p>据说只有 2-6 号湖景色不错，从二号湖坐着小火车到三号湖下车后便一直沿着步行道走到了五六号湖，由于途中都是沼泽地所以风景比较一般，这时也下起了雨，遂加快了脚步，一直到五号湖时又天晴了。五六号湖在各自的对面，但五号湖的景色要更胜一筹，在这里拍照打卡的游客也特别的多。</p>
<p>接下来坐着公交车去七八号湖逛了一圈，发现没什么好的景色就没下车，紧接着去了鹿苑喂了梅花鹿，坐着歇息半个小时后就可以坐公交车直接去大巴换乘点了。感到幸运的是，坐到大巴车上时突然下起了大雨，要是再晚几分钟可要被淋成落汤鸡了，自从来了神农架运气一直还不错。</p>
<p>两三天的游玩也有些许劳累，竟在大巴车上睡着了，四十分钟又回到了景区门口，此时已经中午十二点钟了，打算直接驱车去坪阡古镇吃个午饭，下午慢悠悠的赶在晚上就可以到达恩施了。</p>
<p>吃完午饭小雨已经变成了中雨，根据导航显示晚上七点钟就可以到达恩施，随即出发。</p>
<p>坪阡古镇的海拔应该也不低，从坪阡古镇开了大概一个多小时一路上还是有大雾，搞得人还挺紧张的。一路上雨越来越大，途中突然出现了一片区域内的大暴雨，即便是雨刮器开到最高档，也看不清前面的路了，幸好路上的车不算多，雾也慢慢消散了，几分钟后便驶离了这段区域。来时以为山路难开，没想到路况很好，便放下心了，不曾想在神农顶景区内遇到了大雾，让人心里一紧，两天下来也已适应了大雾天气，只要开慢点谨慎驾驶即可，但刚才这段大暴雨的经历真是吓死了，雨滴快速落在前挡风玻璃上直接让驾车的人看不清前方路况和车辆，还是很危险的。</p>
<p>在去恩施的路上也是状况不断，在一个丁字路口突然遭遇堵车，此时雨也非常大，等待了十多分钟后便不想再等了，不然太耽搁时间了，遂选择另一条高速走的少一点但只多半个小时车程的路线，还是省道应该要好开一些，走到前面岔路口才发现原来要走的那条路被封了，因为阴雨天气太危险了。就这样一直到晚上八点才达到恩施的酒店。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="恩施">恩施<a href="https://wang1212.github.io/2024/07/12/life/tourism/tourism-hubei-enshi#%E6%81%A9%E6%96%BD" class="hash-link" aria-label="恩施的直接链接" title="恩施的直接链接">​</a></h2>
<p>由于天气原因，恩施的计划一直确定不下来，一开始是冲着恩施大峡谷来的，结果考虑到天气不好和大峡谷游玩时间太长的原因，便打算更改为地心谷和梭布垭石林两个景点。但从神农架这 3 天的情况来看，天气并没有想象的这么恶劣，而且恩施前两天的天气也还不错，遂决定早上看看天气再说。</p>
<p>恩施的景区距离市区都比较远，车程都在一到两个小时左右，早上起床后发现没有下雨随即决定去大峡谷景区。到达大峡谷景区时已经早上十点多了，景区的人特别的多，超出想象。</p>
<p>恩施大峡谷的体验很不好，在停车场出来后还得走个十多分钟才能到游客中心购票进入景区，检完票已经是十一点多了。据网上的攻略说即便是购买了所有能坐的交通工具，至少也得爬个四五个小时，七星寨三四个小时是肯定的，云龙地缝则需要一两个小时左右。考虑到天气变幻莫测，决定先去最耗时间七星寨，下来后再去云龙地缝，即先上山后下谷。</p>
<p>七星寨一开始是一段索道，剩下的就全是徒步了，一开始会经过著名的“一线天”，然后是一段悬崖峭壁上的步道，最后就可以到最为人们所熟知的“一炷香”景点了，这个景点如果不注意很容易错过，因为在步行过程中它是突然出现在身后的。在“一炷香”逗留打卡拍照后，继续前进的过程不一会就看到一团浓雾袭来，景点能见度瞬间变差，感叹到运气还是一如既往的好，七星寨不虚此行。七星寨全程步行确实需要三个多小时，但实际上在不到两个小时的时候就可以到达“一炷香”景点，后续的一个多小时多少有点无聊，全程雾很大，和神农顶一样站在山顶几乎看不太清周围的群山景象。</p>
<p>从七星寨下山后又回到了坐索道的地方，此时已经下午三点多，在云龙地缝入口处卖饭的地方简单填了填肚子，进入地缝景点。</p>
<p>刚进到云龙地缝的入口处就遭遇了十几分钟的拥堵排队，原因竟然是很多人下去走了十多分钟就原路返回了，要知道云龙地缝景点的步行道基本上是单行道，不走回头路的，让人无语至极，抱着这种心态来游玩不如躺家里，而且还不影响别人。由于云龙地缝因为天气原因只开放了二期，所以不到一个小时就到达了垂梯处，景点也基本游玩结束了。谷底的景色还是很不错的，尤其是最后的瀑布，对于北方人来说应该还是挺震撼的。</p>
<p>乘坐云龙地缝的垂梯到达上面后，可以眺望对面的群山，这就是刚开始爬七星寨一众景点所在的群山，此时下午五点钟左右，天气竟异常的好，远处的群山清晰可见，山间的云雾也已消散，如果先来地缝后上七星寨的话，此时应该站在山顶可以眺望到群山的壮观景色，可山里的天气谁又说的准呢。又是令人绝望的一小时步行才可到达景区入口处，说是不走回头路，好像也不是那么回事。</p>
<p>第四天的恩施大峡谷行程已经结束，原来的计划是恩施需要游玩两天，第五天的下午开始沿安康方向慢悠悠回家，都说恩施大峡谷包含了其它景区的所有景象，再去也就没多大意义了，凭空多出来的一天行程使我们突发奇想去重庆逛一天，毕竟导航显示也就三个多小时而已，此时也才下午五点多钟。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="重庆">重庆<a href="https://wang1212.github.io/2024/07/12/life/tourism/tourism-hubei-enshi#%E9%87%8D%E5%BA%86" class="hash-link" aria-label="重庆的直接链接" title="重庆的直接链接">​</a></h2>
<p>几年前来爬峨眉山时来重庆玩过，但其他人没来过，所以对于我来说属于故地重游了。出来玩的几天终于能睡个懒觉了，今天一直睡到早上九点多才起床，吃饭完已然十点多，计划坐地铁先去山城步道，然后再去十八步梯等等，基本上在渝中区绕一圈的样子，这在我之前来重庆时倒没走过的。</p>
<p>比较搞笑的是，大家半个多小时走完山城步道就已经不行了，这闷热的天气体感实在是不舒服，那不如坐地铁去磁器口吧。</p>
<p>磁器口之前也来过，但在来此地似乎已经不太一样了，也可能是印象太浅的缘故。大家随意逛了逛，买了小吃，尝了冰粉，实在太热还是选择回酒店休息一会，傍晚去洪崖洞和解放碑逛一圈。</p>
<p>傍晚六点多的洪崖洞已经是人群熙熙攘攘，再结合这闷热的天气，实属受罪，而且我们还是从上面进的景区，很多人来洪崖洞不是为了逛，而是为了看夜景，导致我们不得不沿步道从十二楼要下到江边去拍夜景。由于人群过于拥挤，打卡拍照后就没作过多的停留，打算直奔解放步行街，此时已经快到晚上九点钟。</p>
<p>重庆魔幻的地形是一种独特的风景，有时候也是一种烦恼，当我们打算去解放碑时，短短一公里多的距离却让我们犯了难。导航显示需要我们沿一开始从洪崖洞下山的步道原路返回上山，考虑到这么多人实在是不想再去凑这个热闹。于是，我们就沿着江边走，打算另辟蹊径，一路经过多方打听，耗时将近一个小时，终于找到一个还正在施工的停车场，乘坐停车场的电梯上到了十二楼，而这里距离解放碑步行街也就几百米的距离。</p>
<p>解放碑我之前也来过，晚上十点多的步行街人倒不是很多了，地铁也快停运了，简单的逛了逛之后就回酒店了。</p>
<p>重庆的这一天属于比较佛系了，算是这几天以来最轻松的一次行程。</p>
<p>重庆比恩施距离西安还要远，需要九个小时驾车六百多公里才能到达，由于一路路况很好，全程高速，早上十点多出发，下午六点多钟就已经安全到达了，这次自驾之旅圆满结束。</p>
<p>回家后的一周多从新闻了解到陕西南部和四川都发生了很严重的山洪灾害，全国其它地区也多有因天气引发的灾害发生，不由得感慨，要是再晚去几天可能就被困在路上了，这也充分说明了在天气不好的时候要避免驾车出游，尤其是去山区的路，很容易发生安全事故，任何时候都应保证自身安全。</p>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="生活" term="生活"/>
        <category label="旅游" term="旅游"/>
        <category label="神农架" term="神农架"/>
        <category label="恩施" term="恩施"/>
        <category label="重庆" term="重庆"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[解析 Rough.js 图形线填充实现：扫描线算法]]></title>
        <id>https://wang1212.github.io/2024/06/16/computer-technology/computer-graphics/scanline-algorithm</id>
        <link href="https://wang1212.github.io/2024/06/16/computer-technology/computer-graphics/scanline-algorithm"/>
        <updated>2024-06-16T19:11:00.000Z</updated>
        <summary type="html"><![CDATA[由于比较好奇 Rough.js 的手绘风格是如何实现的，遂准备看看其源码实现，在这个过程中发现了一个依赖项包 hachure-fill，类似铅笔线的图形填充依赖此包实现，其源码比较简洁，从其实现中了解到一个计算机图形学领域的概念-“扫描线算法”。]]></summary>
        <content type="html"><![CDATA[<p>由于比较好奇 <a href="https://roughjs.com/" target="_blank" rel="noopener noreferrer">Rough.js</a> 的手绘风格是如何实现的，遂准备看看其源码实现，在这个过程中发现了一个依赖项包 <a href="https://github.com/pshihn/hachure-fill" target="_blank" rel="noopener noreferrer"><code>hachure-fill</code></a>，类似铅笔线的图形填充依赖此包实现，其源码比较简洁，从其实现中了解到一个计算机图形学领域的概念-“扫描线算法（Scanline Algorithm）”。</p>
<p><img decoding="async" loading="lazy" src="https://roughjs.com/images/cap_demo.png" alt="Rough.js sample" class="img_ev3q"></p>
<p>如上图所示，在一个图形中用线进行填充，而不是某种颜色，为了实现该效果，需要基于该图形计算多条填充线段的坐标数据。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="源码分析">源码分析<a href="https://wang1212.github.io/2024/06/16/computer-technology/computer-graphics/scanline-algorithm#%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90" class="hash-link" aria-label="源码分析的直接链接" title="源码分析的直接链接">​</a></h2>
<p>首先，从 <code>hachure-fill</code> 简洁的源代码（v0.5.2）实现来进行分析其实现思路。</p>
<p>该库提供了以下 API：</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">hachureFill</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">points</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Point</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> angle</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre></div></div>
<p>为了计算图形内的填充线数据，需要提供该图形的顶点数据 <code>points</code>，同时提供了视觉效果多样化的自定义配置，允许配置填充线的倾斜角度 <code>angle</code> 和间隔距离 <code>gap</code>。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/pshihn/hachure-fill/blob/master/src/hachure.ts#L41</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">hachureLines</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygons</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Polygon </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> Polygon</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureGap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureAngle</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureStepOffset </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> angle </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> hachureAngle</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> gap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hachureGap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> polygonList </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygons</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> polygons</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">typeof</span><span class="token plain"> polygons</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'number'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">polygons </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Polygon</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> polygons </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> Polygon</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> rotationCenter</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Point </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">angle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> polygon </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> polygonList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">rotatePoints</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rotationCenter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> angle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lines </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">straightHachureLines</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygonList</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureStepOffset</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">angle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> polygon </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> polygonList</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">rotatePoints</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygon</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rotationCenter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">angle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">rotateLines</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lines</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rotationCenter</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain">angle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lines</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>根据源码中 <code>hachureLines()</code> 函数的实现逻辑，<strong>其首先对目标图形顶点的数据进行了旋转操作，然后调用 <code>straightHachureLines()</code> 函数计算得到了多条填充线的数据，最后同时将目标图形的顶点和填充线数据又做了同样角度的逆旋转操作。</strong>（为什么要做旋转和逆旋转操作后面会进行解释）</p>
<p>至此，我们可以先直接来看看 <code>straightHachureLines()</code> 函数的实现逻辑。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/pshihn/hachure-fill/blob/master/src/hachure.ts#L62</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">straightHachureLines</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygons</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Polygon</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureStepOffset</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> vertexArray</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Point</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> polygon </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> polygons</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> vertices </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token operator" style="color:#393A34">...</span><span class="token plain">polygon</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">areSamePoints</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">vertices</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      vertices</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vertices</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      vertexArray</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">vertices</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lines</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lines</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>该函数首先对目标图形的顶点数据进行了简单的预处理，将所有多边形的顶点数组提取到 <code>vertexArray</code> 中，并<strong>确保每个多边形的第一个和最后一个点相同</strong>。这样做的原因大概基于两方面考虑：</p>
<ul>
<li>一是确保多边形闭合，如果第一个点和最后一个点不同，那么在后续处理边的时候，就会将最后一条边漏掉，导致结果不完整；</li>
<li>二是处理自相交多边形，自相交多边形是指多边形的边相互交叉的情况，对于这种情况，单个多边形实际上被分割成了多个子多边形，算法可以将自相交多边形视为多个独立的子多边形来处理，从而正确地生成内部线条。</li>
</ul>
<p>接下来则是填充线的完整计算逻辑实现。</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_OeMC">https://github.com/pshihn/hachure-fill/blob/master/src/hachure.ts#L62</div><div class="codeBlockContent_QJqH"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">straightHachureLines</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">polygons</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Polygon</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> gap</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> hachureStepOffset</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> lines</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Line</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  gap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">gap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0.1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Create sorted edges table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> edges</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> EdgeEntry</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> vertices </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> vertexArray</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> vertices</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> p1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> p2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> vertices</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ymin </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">min</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          ymin</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          ymax</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">max</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          x</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ymin </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          islope</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p2</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> p1</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">abs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> e2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lines</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Start scanning</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> activeEdges</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ActiveEdgeEntry</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> y </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> edges</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> iteration </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> ix </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">edges</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymin </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ix </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> removed </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> edges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">splice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ix </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      removed</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> s</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> edge </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    activeEdges </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ymax </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">sort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ae2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> ae2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> ae2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token plain"> Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">abs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae1</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> ae2</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// fill between the edges</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hachureStepOffset </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">iteration </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> gap </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> nexti </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nexti </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ce </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> activeEdges</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ne </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> activeEdges</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">nexti</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          lines</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">round</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ce</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">Math</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">round</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ne</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> y</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    y </span><span class="token operator" style="color:#393A34">+=</span><span class="token plain"> hachureStepOffset</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    activeEdges</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ae</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">      ae</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ae</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">x </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">hachureStepOffset </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> ae</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">edge</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">islope</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    iteration</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> lines</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre></div></div>
<p>根据以上源码来看，其大致分为几步：</p>
<ol>
<li><strong>将顶点数据转换为多条边数据 <code>edges</code></strong>；</li>
<li><strong>然后对边进行排序（根据最小 <code>y</code> 坐标）</strong>；</li>
<li><strong>然后从最小的 <code>y</code> 坐标开始向上迭代计算填充线（这个过程中每次迭代都会收集与当前 <code>y</code> 坐标相关的边 <code>activeEdges</code>，同时对其进行排序（按 <code>x</code> 坐标），计算当前 <code>y</code> 坐标水平线与两条边的交点即作为填充线数据）。</strong></li>
</ol>
<p>这里需要注意的是，每次迭代时，活动边 <code>activeEdges</code> 的 <code>x</code> 都会重新赋值一次，利用等比例缩放的原理根据 <code>y</code> 的步进计算得到 <code>x</code> 的步进。</p>
<p>实际上到这里，查询其它相关资料可以了解到，上述步骤是计算机图形学中 <strong>“扫描线算法（Scan-line Algorithm）”</strong> 的大致思路。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="扫描线算法">扫描线算法<a href="https://wang1212.github.io/2024/06/16/computer-technology/computer-graphics/scanline-algorithm#%E6%89%AB%E6%8F%8F%E7%BA%BF%E7%AE%97%E6%B3%95" class="hash-link" aria-label="扫描线算法的直接链接" title="扫描线算法的直接链接">​</a></h2>
<p>根据<a href="https://en.wikipedia.org/wiki/Scanline_rendering" target="_blank" rel="noopener noreferrer">维基百科</a>，扫描线算法实际上是<strong>一种图形渲染技术</strong>，一开始其作为一种高效的图形渲染技术而出现，后被应用到多个不同场景，例如我们这里所说的图形的线填充场景。</p>
<p>该算法的工作原理可以描述为以下几个关键步骤：</p>
<ol>
<li>初始化多边形的边数据表（Edge Table，其中需要计算出每条边的纵坐标极值，横坐标起始点以及斜率倒数 4 个关键值）；</li>
<li>创建活跃边表（Active Edge Table, AET，存储当前扫描线与哪些边相交）；</li>
<li>以所有边中最小的纵坐标初始化扫描线 <code>y=ymin</code>，开始向上迭代 <code>y</code>；</li>
<li>更新活跃边表（收集与当前扫面线相交的所有边）；</li>
<li>根据横坐标 <code>x</code> 对活跃边表中的边进行排序，以确定交点的顺序；</li>
<li>填充多边形，在活跃边表中的边按 <code>x</code> 坐标成对出现，每对之间的区域为多边形内部，绘制水平线进行填充；</li>
<li>根据边的斜率倒数更新活跃边表中边的 <code>x</code> 坐标，为下一行扫描做准备；</li>
<li>重复步骤 4-8 直至所有边被迭代完成。</li>
</ol>
<p><img decoding="async" loading="lazy" src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a0/Scan-line_algorithm.svg/330px-Scan-line_algorithm.svg.png" alt="Scan-line_algorithm" title="维基百科示例图" class="img_ev3q"></p>
<p>如上图所示，纵坐标最小值为 A 点 <code>y</code> 值，从该位置依次向上迭代计算多条平行线（即 c、b、a 顺序），并在平行线的所有像素点处进行填充。</p>
<p>扫描线算法原理比较简单，可查看<a href="https://www.educative.io/answers/what-is-scanline-fill-algorithm" target="_blank" rel="noopener noreferrer">该文章中的动画示例</a>来更好的理解其过程。另外，该算法实现时要注意一些特殊情况，例如与扫描线平行的边需要忽略掉。</p>
<p>至此，可以解释为何一开始要执行图形顶点数据的旋转和逆旋转操作了，这是为了实现任意角度的填充线，因为经过旋转后在新的坐标系中可以利用扫描线算法进行迭代得到所有的水平填充线，再经过逆旋转操作可以将坐标系恢复最终得到预期角度的填充线数据。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="参考资料">参考资料<a href="https://wang1212.github.io/2024/06/16/computer-technology/computer-graphics/scanline-algorithm#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://github.com/pshihn/hachure-fill" target="_blank" rel="noopener noreferrer">https://github.com/pshihn/hachure-fill</a></li>
<li><a href="https://en.wikipedia.org/wiki/Scanline_rendering" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Scanline_rendering</a></li>
<li><a href="https://www.educative.io/answers/what-is-scanline-fill-algorithm" target="_blank" rel="noopener noreferrer">https://www.educative.io/answers/what-is-scanline-fill-algorithm</a></li>
<li><a href="https://computergraphics.stackexchange.com/questions/5134/why-is-the-scan-line-filling-algorithm-so-seemingly-over-complicated" target="_blank" rel="noopener noreferrer">https://computergraphics.stackexchange.com/questions/5134/why-is-the-scan-line-filling-algorithm-so-seemingly-over-complicated</a></li>
<li><a href="https://www.tutorialspoint.com/computer_graphics/polygon_filling_algorithm.htm" target="_blank" rel="noopener noreferrer">https://www.tutorialspoint.com/computer_graphics/polygon_filling_algorithm.htm</a></li>
<li><a href="https://www.cnblogs.com/larry1024/p/17683177.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/larry1024/p/17683177.html</a></li>
</ul>]]></content>
        <author>
            <name>不如怀念</name>
            <email>mrwang1212@126.com</email>
            <uri>https://github.com/wang1212</uri>
        </author>
        <category label="计算机技术" term="计算机技术"/>
        <category label="计算机图形学" term="计算机图形学"/>
        <category label="数据可视化" term="数据可视化"/>
        <category label="扫描线算法" term="扫描线算法"/>
        <category label="源码解析" term="源码解析"/>
    </entry>
</feed>